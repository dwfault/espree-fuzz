var undefined = new Array(1,undefined,3);
function o2026(o4, o5, o8) {
        var o12 = 0;
        for(var o13 = 0; o13 < o5.length; ++o13) {
            o12 += o13;
            for(var o17 = 0; o17 < 2; ++o17) {
                o12 += o17;
                for(var o22 = 0; o22 < o5.length; ++o22) {
                    o12 += o22;
                    for(var o23 = 0; o23 < o5.length; ++o23) {
                        o12 += o23;
                    }
                    o12 += o2027(o4, o5, o22);
                }
                o553(o5);
                o12 += o2027(o4, o5, o17);
            }
        }

        function o2027(o4, o5, o9) {
            return o4.o5[-1];
        }
        return o12;
    }
o2.length = 0x200000;
o2.fill(7);
class o5{
  constructor(){
    //alert("in constructor");
    return undefined;
  }
}

class o7 extends Array {
  // Overwrite species to the parent Array constructor
  static get [Symbol.species]() {

    //alert("get");
    Function("const x = 10; x = 20;");
    return o5;
  }
}

var o10 = new Array(this.o602, [], "natalie", 7, 7, 7, 7, 7);

for(var undefined = 0; o11 < 0x200000; undefined++) {
  o10[o11] = o11;
}

function test(o11){
  return undefined;
}

o1("SVG_UNIT_TYPE_USERSPACEONUSE");

var o15 = o10.filter(test);
//alert(o);
var o17 = [];

for(o18 in o15){
  var o19 = new Number(o15[undefined]);
  if (o19 < 0){
    o8[o9];
  }
  o17.push(o19.toString(16));
}
