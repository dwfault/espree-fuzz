"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
opyright 2014 Shape Security, Inc.

icensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
ou may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *
http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *
nless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */

var _random = require("./random");

var _random2 = _interopRequireDefault(_random);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var FuzzerState = function () {
  function FuzzerState() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$maxDepth = _ref.maxDepth,
        maxDepth = _ref$maxDepth === undefined ? 7 : _ref$maxDepth,
        _ref$rng = _ref.rng,
        rng = _ref$rng === undefined ? Math.random : _ref$rng;

    _classCallCheck(this, FuzzerState);

    this.maxDepth = maxDepth;
    this.rng = new _random2.default(rng);

    this.depth = 0;
    this.allowAwaitIdentifier = true; // false iff we fuzzing a module
    this.inLoop = false; // allows continue and unlabelled break
    this.inSwitch = false; // allows unlabelled break // todo consider collapsing into one allowBreak, one allowContinue
    this.strict = false;
    this.allowReturn = false;
    this.allowNewTarget = false;
    this.allowSuperCall = false; // todo generate constructor methods more often
    this.allowSuperProp = false; // implied by allowSuperCall
    this.allowMissingElse = true;
    this.declKind = null; // const requires initializer; const and let prohibit bindings named let.
    this.allowYieldIdentifier = true;
    this.allowYieldExpr = false; // mutually exclusive with the above, but both can be false, e.g. in formal parameters of or within a generator

    this.labels = []; // would use a set, but we need immutibility.
    this.loopLabels = []; // is a subset of labels
  }

  _createClass(FuzzerState, [{
    key: "clone",
    value: function clone() {
      var st = Object.create(FuzzerState.prototype);
      st.maxDepth = this.maxDepth;
      st.rng = this.rng;
      st.depth = this.depth;
      st.allowAwaitIdentifier = this.allowAwaitIdentifier;
      st.inLoop = this.inLoop;
      st.inSwitch = this.inSwitch;
      st.strict = this.strict;
      st.allowReturn = this.allowReturn;
      st.allowNewTarget = this.allowNewTarget;
      st.allowSuperCall = this.allowSuperCall;
      st.allowSuperProp = this.allowSuperProp;
      st.allowMissingElse = this.allowMissingElse;
      st.declKind = this.declKind;
      st.allowYieldIdentifier = this.allowYieldIdentifier;
      st.allowYieldExpr = this.allowYieldExpr;
      st.labels = this.labels;
      st.loopLabels = this.loopLabels;
      return st;
    }
  }, {
    key: "goDeeper",
    value: function goDeeper() {
      var st = this.clone();
      ++st.depth;
      return st;
    }
  }, {
    key: "tooDeep",
    value: function tooDeep() {
      return this.depth >= this.maxDepth;
    }
  }, {
    key: "allowBreak",
    value: function allowBreak() {
      return this.inLoop || this.inSwitch || this.labels.length !== 0;
    }
  }, {
    key: "enableMissingElse",
    value: function enableMissingElse() {
      var st = this.clone();
      st.allowMissingElse = true;
      return st;
    }
  }, {
    key: "disableMissingElse",
    value: function disableMissingElse() {
      var st = this.clone();
      st.allowMissingElse = false;
      return st;
    }
  }, {
    key: "disableYieldExpr",
    value: function disableYieldExpr() {
      var st = this.clone();
      st.allowYieldExpr = false;
      return st;
    }
  }, {
    key: "enterFunction",
    value: function enterFunction() {
      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref2$isGenerator = _ref2.isGenerator,
          isGenerator = _ref2$isGenerator === undefined ? false : _ref2$isGenerator,
          _ref2$isArrow = _ref2.isArrow,
          isArrow = _ref2$isArrow === undefined ? false : _ref2$isArrow,
          _ref2$isMethod = _ref2.isMethod,
          isMethod = _ref2$isMethod === undefined ? false : _ref2$isMethod,
          _ref2$hasStrictDirect = _ref2.hasStrictDirective,
          hasStrictDirective = _ref2$hasStrictDirect === undefined ? false : _ref2$hasStrictDirect;

      var st = this.clone();
      if (st.declKind !== null) throw 'declKind'; // todo remove this

      st.inLoop = false;
      st.inSwitch = false;
      if (hasStrictDirective) {
        st.strict = true;
      }
      st.allowReturn = true;
      if (isArrow) {
        st.allowYieldExpr = false;
      } else {
        st.allowNewTarget = true;
        if (isGenerator) {
          st.allowYieldIdentifier = false;
          st.allowYieldExpr = true;
        } else {
          st.allowYieldIdentifier = true;
          st.allowYieldExpr = false;
        }
        if (!isMethod) {
          st.allowSuperCall = false;
          st.allowSuperProp = false;
        }
      }
      st.allowMissingElse = true;

      st.labels = [];
      st.loopLabels = [];

      return st;
    }
  }, {
    key: "enterLoop",
    value: function enterLoop() {
      var st = this.clone();
      st.inLoop = true;
      return st;
    }
  }, {
    key: "enterSwitch",
    value: function enterSwitch() {
      var st = this.clone();
      st.inSwitch = true;
      return st;
    }
  }]);

  return FuzzerState;
}();

exports.default = FuzzerState;