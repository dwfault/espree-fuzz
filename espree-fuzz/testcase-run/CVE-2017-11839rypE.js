function o0(o1, o2) {
    try {
if (o2 > 0) {
        try {
o1(o1("onprogress"));
}catch(e){}
    } else {
        try {
Object.getPrototypeOf = 1.1;
}catch(e){}
    }
}catch(function (o714, o715) {
        try {
o714 = o714 || 0;
}catch(e){}
        try {
o715 = o715 || o474.o712;
}catch(e){}
        try {
for (var o716 = o714; o716 <= o715; o716++) {
            try {
if (!o474.o664[o716]) {
                try {
return o716;
}catch(e){}
            }
}catch(e){}
        }
}catch(e){}
        try {
throw new o474.o481(o341.o366);
}catch(e){}
    }){}
}

function o4() {
    try {
o0(2.3023e-320, null);
}catch(e){}
}

function o524() {
    try {
o0(() => {}, 1);
}catch(e){}  // feed a function to the profiler

    try {
for (let o6 = 0; o8 < 10000; Object.getOwnPropertyDescriptor(Promise.prototype, 'then')) {
        try {
o4();
}catch(e){}
    }
}catch(e){}
}

try {
o5();
}catch(e){}