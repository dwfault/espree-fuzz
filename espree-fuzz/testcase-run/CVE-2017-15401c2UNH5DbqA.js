// raw_wasm = ...
var o0 = write(-0 >= Array(1))(o1);
var o31 = name ? o605.o606(typeof o517 === 'string' ? o517 : o489.o699(o517), name) : e;
try try { {try {
"use strict";
}catch(e){}
  //Faster in some browsers, since we are doing less conditionals overall by implementing them in advance.
  try {
for (var index = 0x0000; index <= 0xFFFF; index++) {
    try {
if (index < 0x8000) {
      try {
if (this.o507) {
        try {
if (index < 0x2000) {
          try {
this.o391[index] = this.o897;
}catch(e){}
        }
        else try {
if (index < 0x4000) {
          try {
this.o391[index] = this.o898;
}catch(e){}
        }
        else try {
if (index < 0x6000) {
          try {
this.o391[index] = this.o899;
}catch(e){}
        }
        else {
          try {
this.o391[index] = this.o900;
}catch(e){}
        }
}catch(e){}
}catch(e){}
}catch(e){}
      }
      else try {
if (this.o508) {
        try {
if (index < 0x1000) {
          try {
this.o391[index] = this.o897;
}catch(e){}
        }
        else try {
if (index >= 0x2100 && index < 0x2200) {
          try {
this.o391[index] = this.o901;
}catch(e){}
        }
        else {
          try {
this.o391[index] = this.o902;
}catch(e){}
        }
}catch(e){}
}catch(e){}
      }
      else try {
if (this.o509) {
        try {
if (index < 0x2000) {
          try {
this.o391[index] = this.o897;
}catch(e){}
        }
        else try {
if (index < 0x4000) {
          try {
this.o391[index] = this.o903;
}catch(e){}
        }
        else try {
if (index < 0x6000) {
          try {
this.o391[index] = this.o904;
}catch(e){}
        }
        else {
          try {
this.o391[index] = this.o905;
}catch(e){}
        }
}catch(e){}
}catch(e){}
}catch(e){}
      }
      else try {
if (this.o510 || this.o514 || this.o511) {
        try {
if (index < 0x2000) {
          try {
this.o391[index] = this.o897;
}catch(e){}
        }
        else try {
if (index < 0x3000) {
          try {
this.o391[index] = this.o906;
}catch(e){}
        }
        else try {
if (index < 0x4000) {
          try {
this.o391[index] = this.o907;
}catch(e){}
        }
        else try {
if (index < 0x6000) {
          try {
this.o391[index] = (this.o514) ? this.o908 : this.o909;
}catch(e){}
        }
        else {
          try {
this.o391[index] = this.o902;
}catch(e){}
        }
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
      }
      else try {
if (this.o517) {
        try {
if (index < 0x2000) {
          try {
this.o391[index] = this.o897;
}catch(e){}
        }
        else try {
if (index < 0x4000) {
          try {
this.o391[index] = this.o903;
}catch(e){}
        }
        else try {
if (index < 0x6000) {
          try {
this.o391[index] = this.o910;
}catch(e){}
        }
        else {
          try {
this.o391[index] = this.o902;
}catch(e){}
        }
}catch(e){}
}catch(e){}
}catch(e){}
      }
      else {
        try {
this.o391[index] = this.o902;
}catch(e){}
      }
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
    }
    else try {
if (index < 0x9000) {
      try {
this.o391[index] = (this.o400) ? this.o911 : this.o912;
}catch(e){}
    }
    else try {
if (index < 0x9800) {
      try {
this.o391[index] = (this.o400) ? this.o911 : this.o913;
}catch(e){}
    }
    else try {
if (index < 0xA000) {
      try {
this.o391[index] = (this.o400) ? this.o914 : this.o915;
}catch(e){}
    }
    else try {
if (index < 0xC000) {
      try {
if ((this.o521 == 1 / 16 && index < 0xA200) || this.o521 >= 1) {
        try {
if (!this.o509) {
          try {
this.o391[index] = this.o916;
}catch(e){}
        }
        else {
          //MBC3 RTC + RAM:
          try {
this.o391[index] = this.o917;
}catch(e){}
        }
}catch(e){}
      }
      else {
        try {
this.o391[index] = this.o902;
}catch(e){}
      }
}catch(e){}
    }
    else try {
if (index < 0xE000) {
      try {
if (this.o400 && index >= 0xD000) {
        try {
this.o391[index] = this.o918;
}catch(e){}
      }
      else {
        try {
this.o391[index] = this.o919;
}catch(e){}
      }
}catch(e){}
    }
    else try {
if (index < 0xFE00) {
      try {
if (this.o400 && index >= 0xF000) {
        try {
this.o391[index] = this.o920;
}catch(e){}
      }
      else {
        try {
this.o391[index] = this.o921;
}catch(e){}
      }
}catch(e){}
    }
    else try {
if (index <= 0xFEA0) {
      try {
this.o391[index] = this.o922;
}catch(e){}
    }
    else try {
if (index < 0xFF00) {
      try {
if (this.o400) {                      //Only GBC has access to this RAM.
        try {
this.o391[index] = this.o919;
}catch(e){}
      }
      else {
        try {
this.o391[index] = this.o902;
}catch(e){}
      }
}catch(e){}
    }
    else {
      //Start the I/O initialization by filling in the slots as normal memory:
      try {
this.o391[index] = this.o919;
}catch(e){}
      try {
this.o393[index & 0xFF] = this.o923;
}catch(e){}
    }
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
}catch(e){}
  }
}catch(e){}
  try {
this.o924();
}catch(e){}        //Compile the I/O write functions separately...
} } catch(e) {}catch(e){}
try {
o1("textTracks").grow(1);
}catch(e){}
// wasm.exports.XXX