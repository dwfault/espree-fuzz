var e = o421.o450;

function o82(o62,o63){
        try {
o6.o7 = o62|0;
}catch(e){}
        try {
o0 = o63|0;
}catch(e){}
        var o809 = (this.o400 || this.o561) ? 0xF8F8F8 : 0xEFFFDE;
        try {
if(o84[o62&7](o62,o63)|0){
            try {
o474.o603 = o85[o259[o247 + (o1061 + 12) >> 2]](o335,o85[o63&3](o62,o62)|0)|0;
}catch(e){}
            try {
try { {
o4.o38(function () { try {
ArrayBuffer.prototype.slice();
}catch(e){} }, o39, "ArrayBuffer.prototype.slice throws TypeError if it is called directly", "ArrayBuffer object expected");
} } catch(e) {}try { {} } catch(e) {}
}catch(e){}
        }
        else {
            try {
o77 = o85[o62&3](o62,o85[o62&3](o62,o63)|0)|0;
}catch(e){}
            try {
o83 = o85[o77&3](o85[o63&3](o62,5)|0,o85[o63&3](o62,o63)|0)|0;
}catch(e){}
        }
}catch(e){}
        try {
if(o61(o77,o83)|0){
            try {
o77 = o83;
}catch(e){}
        }
        else{
            try {
o13(o83|0);
}catch(e){}
        }
}catch(e){}
        try {
return o77|0;
}catch(e){}
    }

var o421 = [o607,2.2];

var o5 = 0;
function o6() {
  try {
try {} catch(o7) {}
}catch(e){}  // Prevent Crankshaft from inlining this.
  try {
if (o5 == "use strict") {
    try {
o463 = e;
}catch(e){}
  }
}catch(e){}
}

var o8 = new Promise(function(resolve,reject) {
                try {
reject('success');
}catch(e){}
                try {
resolve('failure');
}catch(e){}
                try {
reject('failure');
}catch(e){}
            });
function o9(){
  try {
o6();
}catch(e){}
  try {
o4[0] = 1;
}catch(e){}
  try {
o1();
}catch(e){}
  try {
o4[1] = o8;
}catch(e){}
}

// %OptimizeFunctionOnNextCall(f);
try {
for(var o2 = 0; o2 < 0x10000; o2++) {
  try {
o9();
}catch(e){}
}
}catch(e){}
try {
o5 = 1;
}catch(e){}
try {
o9();
}catch(e){}
try {
o10(o8, o4[1]);
}catch(e){}