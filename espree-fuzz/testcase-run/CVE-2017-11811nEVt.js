function o0() {
    try {
for (let o1 = 0; o1 < 100; o1++) {
        let o30 = o1 - 2;
        try {
switch (o1) {
            case 2:
            case 79:
            case 6:
            case 2:
                        // change the value of a previous indexed value - the old value should end up in the return object
                        try {
o17[0] = -100;
}catch(e){}
                        try {
return o15;
}catch(e){}
            case 10:
            case 12:
            case 14:
            case 16:
            case 18:
            case 20:
            case 22:
            case 24:
            case 26:
            case 28:
            case 30:
            case 32:
            case 34:
            case 36:
            case 38:
                try {
break;
}catch(e){}
        }
}catch(e){}

        try {
if (o1 == 90) {
            try {
o6.o14 = 'x';
}catch(e){}
        }
}catch(e){}
    }
}catch(e){}
}

function o3() {
    try {
for (var o8 = new Promise(
        function(resolve,reject) {
            try {
if (o7) {
                try {
o2.o9(function() { try {
reject(o6)
}catch(e){} }, 0);
}catch(e){}
            } else {
                try {
o2.o9(function() { try {
resolve(o6)
}catch(e){} }, 0);
}catch(e){}
            }
}catch(e){}
        }
    ); o1("MEDIUM_FLOAT"); o1++) {
        try {
o0();
}catch(e){}
    }
}catch(e){}
}

try {
o3(o2[4095] = o3);
}catch(e){}