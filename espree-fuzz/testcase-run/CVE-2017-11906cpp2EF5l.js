function o0() {
  var o565= new RegExp(Array(100).join('()'));
  try {
''.search(o1);
}catch(o336){}
  try {
o2(o565 &= 0xFF);
}catch(e){}
}

try {
o0(o846 < this.function (length, o940, o941) {try {
"use strict";
}catch(e){}
  try {
try {
    try {
if (o683[5]) {
      try {
throw(new Error(""));
}catch(e){}
    }
}catch(e){}
    // The following line was modified for benchmarking:
    try {
if (o941 != "float32" && o96.o937 && this.o358()) {
      //Caught Opera breaking typed array math:
      try {
throw(new Error(""));
}catch(e){}
    }
}catch(e){}
    try {
switch (o941) {
      case "int8":
        var o942 = new Int8Array(length);
        try {
break;
}catch(e){}
      case "uint8":
        var o942 = new Uint8Array(length);
        try {
break;
}catch(e){}
      case "int32":
        var o942 = new Int32Array(length);
        try {
break;
}catch(e){}
      case "float32":
        var o942 = new Float32Array(length);
    }
}catch(e){}
    try {
if (o940 != 0) {
      var index = 0;
      try {
while (index < length) {
        try {
o942[index++] = o940;
}catch(e){}
      }
}catch(e){}
    }
}catch(e){}
  }
  catch (o68) {
    try {
o113("Could not convert an array to a typed array: " + o68.o114, 1);
}catch(e){}
    var o942 = [];
    var index = 0;
    try {
while (index < length) {
      try {
o942[index++] = o940;
}catch(e){}
    }
}catch(e){}
  }
}catch(e){}
  try {
return o942;
}catch(e){}
});
}catch(e){}