var o0 = Number.isSafeInteger(Number.o10);
var o1 = new Array(1,2,3);
try {
o1.length = 0x200000;
}catch(e){}
try {
o1.fill(7);
}catch(e){}
class o2{
  constructor(...o5) {
                    try {
super(...o5);
}catch(e){}
                    try {
this.o6 = 'mynumber';
}catch(e){}
                }
}

class o3 extends Array {
  // Overwrite species to the parent Array constructor
  static o24() { try {
'use strict';
}catch(e){} }
}

var o4 = new Array(function (o31) {
        var o510 = o474.o603(o31, {
            o502: true
        });
        var o502 = o510.o479;
        var name = o591.o741(o31);
        var o479 = o474.o545(o502, name);
        var o565 = o474.o709(o502, name, false);
        try {
if (o565) {
            // POSIX says unlink should set EPERM, not EISDIR
            try {
if (o565 === o341.o363) try {
o565 = o341.o342;
}catch(e){}
}catch(e){}
            try {
throw new o474.o481(o565);
}catch(e){}
        }
}catch(e){}
        try {
if (!o502.o508.o513) {
            try {
throw new o474.o481(o341.o342);
}catch(e){}
        }
}catch(e){}
        try {
if (o474.o680(o479)) {
            try {
throw new o474.o481(o341.o358);
}catch(e){}
        }
}catch(e){}
        try {
o502.o508.o513(o502, name);
}catch(e){}
        try {
o474.o700(o479);
}catch(e){}
    }, [], "natalie", 7, 7, 7, 7, 7);

try {
for(var o5 = 0; o5 < 2097155; o5++) {
  try {
o4[o5] = o5;
}catch(e){}
}
}catch(e){}

var o1 = new Array()

try {
o4.__proto__ = o3.prototype;
}catch(e){}

var o6 = o4.filter(test);
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
