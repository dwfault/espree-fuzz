var o0 = o352 = !o683[2];
try {
for(var o1=o477.o479.o489 = Date.o4();o1061__defineSetter__.callthis.o362o421.o523.o362e.callthis.o362o421.o523.o362 = o362;{
        name: "new.target inline constructor case",
        o3: function() {
            function o16()
            {
                try {
return new.target;
}catch(e){}
            }
            function o36()
            {
                try {
return new o16();
}catch(e){} //foo will be inlined here
            }
            try {
o5.o24(o36() == o16, "Function called as new expression has new.target set to the function in the function body when the constructor is inlined");
}catch(e){}
        }
    }) try {
o11 = {};
}catch(e){}
}catch(e){}

function o2() {
  try {
[o15, o16, o17];
}catch(e){}
  try {
o3(o4.o11(undefined, o32[o38.toString()], "Object.create does not create a property based on symbol toString() value"));
}catch(e){}
  try {
return {};
}catch(e){}
}

try {
try { try {
o1("outerWidth");
}catch(e){} } catch(e) {}
}catch(e){}
try {
Array.prototype.join.call(o0);
}catch(prototype){}