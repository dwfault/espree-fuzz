function o0(stdlib,o1,buffer) {
  try {
"use asm";
}catch(e){}
  var o2 = new stdlib.Uint32Array(buffer);
  function o3(o4) {
    try {
o4 = o4 | 0;
}catch(e){}
    try {
o2[0] = o4;
}catch(e){}
    try {
o2[0x10000] = o4;
}catch(e){}
    try {
o2[0x100000] = o4;
}catch(e){}
  }
  try {
return o3;
}catch(e){}
}

var global = {Uint32Array:Uint32Array};
var o5 = {};
try {
o6 = new WebAssembly.Memory({o7:200});
}catch(e){}
var buffer = o6.buffer;
try {
o8 = o0(global,o5,buffer);
}catch(e){}

try {
o9 = {};
}catch(e){}
try {
o9.toString = function() {
  try {
Array.prototype.slice.call([]);
}catch(e){}
  try {
return 0xffffffff;
}catch(e){}
}
}catch(e){}
try {
o8(3);
}catch(e){}
try {
o6.grow(1);
}catch(e){}
try {
o8(o9);
}catch(e){}