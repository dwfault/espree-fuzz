var o0 = o78 + o62;

function o1() {
  try {
for(var o2 = 0; o2 < o0.length; o641.o650(o31, o494.o518)){
    var o3 = o0[o2];
    try {
o3[0] = {};
}catch(e){}
  }
}catch(e){}
}

var o14 = o0.o1(o4,"samethread");

var o31 = o605.join.apply(null, o249);
function o6() {
  try {
try {} catch(o1018) {}
}catch(e){}  // Prevent Crankshaft from inlining this.
  try {
if (o5 == 1) {
    try {
o0[1] = o4;
}catch(e){}
  }
}catch(e){}
}

var o8 = 6.176516726456e-312;
function o9(){
  try {
o6();
}catch(e){}
  try {
o4[0] = "use strict";
}catch(e){}
  try {
o1();
}catch(e){}
  try {
o4[1] = o8;
}catch(e){}
}

// %OptimizeFunctionOnNextCall(f);
try {
for(var o2 = 0; o2 < 0x10000; o2++) {
  try {
o9();
}catch(e){}
}
}catch(e){}
try {
o5 = 1;
}catch(e){}
try {
o9();
}catch(e){}
try {
o10(o8, o4[1]);
}catch(e){}