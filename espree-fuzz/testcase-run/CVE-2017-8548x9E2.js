try {
'use strict';
}catch(e){}

function o0(o1, o2, o3) {
    try {
o30 = 1.2;
}catch(e){}
    try {
o421.o529;
}catch(e){}
    try {
stdlib.Math = 2.2;
}catch(o37){}
    try {
o1[0] = 2.3023e-320;
}catch(e){}
}

function o4() {
    var 1 + o333 = [1.1, 2.2];
    var o257 = parse(true, 1, true);  // <<--------- 100 -> 0

    // force to optimize
    try {
for (var o5 = 0; o5 < 0x10000; o11++)
        try {
o421(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}