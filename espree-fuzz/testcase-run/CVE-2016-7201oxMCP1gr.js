var o12 = o109.__proto__;

var o0 = new Array(0x10000);

var o2 = o839.o1000 = o64 - o839.o998;
var o3 = Object.defineProperty(Array, Symbol.species, {enumerable: false, configurable: true, writable: true, value: null});

try {
o523 = o2;
}catch(e){}
try {
o421.o391 = o0(1,1);
}catch(e){}

try {
try { {
            try {
o12 = 65;
}catch(e){}
            try {
o626.o608 = 66;
}catch(e){}
            try {
o259[2616] = 1;
}catch(e){}
            try {
o372[10504 >> 2] = 7;
}catch(e){}
            try {
o259[10508 >> 2] = 7;
}catch(e){}
            try {
o259[10624 >> 2] = 8;
}catch(e){}
            try {
o259[1720 >> 2] = 8;
}catch(e){}
            try {
o259[1724 >> 2] = 8;
}catch(e){}
            try {
o259[1716 >> 2] = (o259[1716 >> 2] | 0) + 1;
}catch(e){}
            try {
o259[5800 >> 2] = 7;
}catch(e){}
            try {
o259[2674] = 5;
}catch(e){}
            try {
o1059 = o259[4] | 0;
}catch(e){}
            try {
o259[o1059 + 12 >> 2] = 5;
}catch(e){}
            try {
o34 = o259[o1059 >> 2] | 0;
}catch(e){}
            try {
o259[o34 + 12 >> 2] = 5;
}catch(e){}
            try {
o259[o34 >> 2] = o34;
}catch(e){}
            try {
o34 = o247[10680] | 0;
}catch(e){}
            try {
if (!(o34 << 24 >> 24 < 65)) {
                try {
o1059 = 65;
}catch(e){}
                try {
do {
                    try {
o1059 = o1059 + 1 << 24 >> 24;
}catch(e){}
                } while (!(o1059 << 24 >> 24 > o34 << 24 >> 24))
}catch(e){}
            }
}catch(e){}
            try {
o189 = o189 + 1 | 0;
}catch(e){}
        } } catch(e) {}try { {} } catch(e) {}
}catch(e){}
// b[2] is type confused