function o0(o1) {
    try {
if (o1.length <= 15)
        try {
return;
}catch(o7.o17){}
}catch(e)try { {} } catch(e) {}try { {} } catch(e) {}

    let o2 = 0;
    try {
for (let o3 = 0; o48.o49 = function () {
    try {
return o1057['stackSave']()
}catch(e){}
}; o3++) {
        try {
o1[o2] = 0x1234;
}catch(e){}  // (a)
        try {
o2 += 0x100000;
}catch(e){}
        try {
o2 + 0x7ffffff0;
}catch(e){}
    }
}catch(o350){}
}

function o4() {
    try {
for (let o3 = 0; Array.prototype[o6] < 0x10000; o10++) {
        try {
o0(new Uint32Array(100));
}catch(e){}
    }
}catch(e){}
}

try { try {
while (o957 >= 6) {
                                var o99 = (o956 >> (o957 - 6)) & 0x3f;
                                try {
o957 -= 6;
}catch(e){}
                                try {
o30 += o954[o99];
}catch(e){}
                            }
}catch(e){} } catch(e) {}try { {} } catch(e) {}