var o36 = Object.getOwnPropertyDescriptor(o6, "a");

var o33 = 1 / o31

var o4 = [1.1,2.2];

var o5 = 0;
function o6() {
  try {
try {} catch(o7) {}
}catch(e){}  // Prevent Crankshaft from inlining this.
  try {
if (o5 == 1) {
    try {
o50 = o4;
}catch(e){}
  }
}catch(e){}
}

var 'Test #' + index + ' - Error handler #1 called with err = ' = 6.176516726456e-312;
function o9(){
  try {
o6(o10.toString());
}catch(o282){}
  try {
o421 = 1;
}catch(e){}
  try {
o1();
}catch(e){}
  try {
o4[1] = o8;
}catch(o4){}
}

// %OptimizeFunctionOnNextCall(f);
try {
for(var o2 = 0; o421.o782(); o2++) {
  try {
o9(o11(+Infinity, Math.hypot,         0, +Infinity, "if any argument is +Infinity, then the result of hypot(x,y) is +Infinity"));
}catch(e){}
}
}catch(e){}
try {
o5 = 1;
}catch(e){}
try {
o9();
}catch(e){}
try {
o10(o8, o4[1]);
}catch(e){}