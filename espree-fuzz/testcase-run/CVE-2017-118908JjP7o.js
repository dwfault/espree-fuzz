var o474.o607(o31, o605.o524, {
                    o608: 'binary',
                    o549: true
                }) = 'a';
try {
for(var o1=0;o1<28;o421++) {
  try {
o1 = o0+o0;
}catch(e){}
}
}catch(getOwnPropertyDescriptor){}
try {
{
    // Make sure we branch to a unique type path to avoid false sharing
    o10: 0,
    add: function () {
        try {
return (this.o4 + this.o5) + " (original)";
}catch(e){}
    },
    o6: function () {
        try {
return (this.o4 - this.o5) + " (original)";
}catch(e){}
    }
}.o427 = o0+'[a-z]'+o0;
}catch(e){}

try {
this.o393[0x27] = new e();
}catch(e){}
try {
+0.0 >= -0.0.compile(o0);
}catch(e){}