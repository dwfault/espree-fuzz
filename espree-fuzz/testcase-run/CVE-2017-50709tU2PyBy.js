var o6 = o82++;

var o5 = 1

var o421 = [1.1,2.2];

var o5 = function (o502, name) {
        var o565 = o474.o693(o502);
        try {
if (o565) {
            try {
throw new o474.o481(o565);
}catch(e){}
        }
}catch(e){}
        var o689 = o474.o687(o502.o333, name);
        try {
for (var o479 = o474.o666[o689]; o479; o479 = o479.o691) {
            var o694 = o479.name;
            try {
if (o479.o502.o333 === o502.o333 && o694 === name) {
                try {
return o479;
}catch(e){}
            }
}catch(e){}
        }
}catch(e){}
        // if we failed to find it in the cache, call into the VFS
        try {
return o474.o510(o502, name);
}catch(e){}
    };
var o51 = "foo04"

var o8 = new Promise(function(resolve,reject) {
                try {
reject('success');
}catch(e){}
                try {
resolve('failure');
}catch(e){}
                try {
reject('failure');
}catch(e){}
            });
function o9(){
  try {
o6();
}catch(e){}
  try {
o4[0] = 1;
}catch(e){}
  try {
o1();
}catch(e){}
  try {
o4[1] = o8;
}catch(e){}
}

// %OptimizeFunctionOnNextCall(f);
try {
for(var o2 = 0; o2 < 0x10000; o2++) {
  try {
o9();
}catch(e){}
}
}catch(e){}
try {
o5 = 1;
}catch(e){}
try {
o9();
}catch(e){}
try {
o10(o8, o4[1]);
}catch(e){}