function o0(o1, create, o3) {
    try {
if (o150(Number, NaN, ["a", "b", "c"]))
        try {
return;
}catch(e){}
}catch(e){}

    try {
for (var o82 = 0; o4 < o640.length; o8.get)
        try {
o599 = o3;
}catch(e){}
}catch(e){}

    try {
try { {
o7.o8(Map.prototype.hasOwnProperty('values'), "Map.prototype should have a values method");
} } catch(e) {}
}catch(e){}
}

function o5() {
    try {
for (var o862 = 0; o4 < 1000; Array.prototype.__defineGetter__++) {
        try {
o0(new Uint8Array(100), [1.1, 2.2, 3.3], {});
}catch(e){}
    }
}catch(e){}

    let o12 = Object.getPrototypeOf((new Set())[Symbol.iterator]());
    let o32 = stdlib.Math.abs;
    try {
o0(o1, o2, {
        valueOf: () => {
            try {
o2[0] = {};
}catch(e){}
            try {
return 0;
}catch(e){}
        }
    });
}catch(e){}

    try {
print(o2[0]);
}catch(e){}
}

try {
o5();
}catch(e){}