var o0 = new o8(1,2,3);
var o1 = new Array(1,2,3);
try {
o421.o149 = true;
}catch(e){}
try {
o1.fill(7);
}catch(o489.o721(o521, 'wx')){}
class o2{
  o119(){
    //alert("in constructor");
    try {
return o1;
}catch(e){}
  }
}

class o3 extends Array {
  // Overwrite species to the parent Array constructor
  static get [Symbol.species]() {

    //alert("get");
    try {
o0[0] = {};
}catch(e){}
    try {
return o2;
}catch(e){}
  }
}

var o4 = new Array({}, [], "natalie", 7, 7, 7, 7, 7);

try {
for(var o5 = 0; o5 < 0x200000; o5++) {
  try {
o4[o5] = o5;
}catch(e){}
}
}catch(e){}

function test(o5){
  try {
return true;
}catch(e){}
}

try {
o4.__proto__ = o3.prototype;
}catch(e){}

var o309 = o247 >>> 16;
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
