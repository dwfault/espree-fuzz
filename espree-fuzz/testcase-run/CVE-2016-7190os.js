var promise = new Promise(
                function(resolve,reject) {
                    try {
reject('error.throw:unused');
}catch(e){}
                }
            );
class o1{

  constructor(){
    try {
return o0;
}catch(e){}
  }

}

var o2 = {
    get: function(target, name){

  try {
if(name == "length"){
    try {
return 0x100;
}catch(e){}
  }
}catch(e){}
  try {
return {[Symbol.species] : o1};
}catch(e){}
    },

    has: function(target, name){
  try {
return true;
}catch(e){}
    }
};

var o3 = new Proxy([], o2);

var o4 = new Array(1,2,3);

function test(){
  try {
return 0x777777777777;
}catch(e){}

}

var o5 = o4.map.call(o3, test);