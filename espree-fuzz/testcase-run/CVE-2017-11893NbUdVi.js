function o32(o1, o2) {
    try {
o1059 = 1.1;
}catch(e){}
    try { o421.o365 = false; } catch(e) {}
    try {
o1[0] = 2.3023e-320;
}catch(e){}
}

function constructor() {
    let o1 = [o3, 2.2, 3.3, 4.4];
    try {
for (let o116[3] = 0; o5 < 10000; o5++) {
        try {
o0(e, [1, 2, 3, 4]);
}catch(e){}
    }
}catch(e){}

    try {
o38 = function () {
        try {
this[0xFF4D];
}catch(e){}
    };
}catch(e){}

    try {
o0(o1, {});
}catch(Module){}  // can't handle, calls Math.max
    try {
print(o1[0]);
}catch(e){}
}

try {
o4(Module['readBinary'](o336));
}catch(e){}