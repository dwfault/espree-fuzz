var o0 = [];
try {
(function () {try {
"use strict";
}catch(e){}
  try {
if ((this.o380 & 0x1) == 0) {
    try {
Promise.reject.o746();
}catch(e){}  //Make sure we at least output once per iteration.
    //Update DIV Alignment (Integer overflow safety):
    try {
o421.o727 = (Promise.all[0xFF04] + (this.o489 >> 8)) & 0xFF;
}catch(e){}
    try {
o360.prototype.o780 &= 0xFF;
}catch(e){}
    //Update emulator flags:
    try {
o213 |= 1;
}catch(e){}      //End current loop.
    try {
try { {
          try {
o933 = o421.o390[o70](o421, o70++);
}catch(e){}
          try {
if (o933 != o421.o155[o768]) {
            //JIT the graphics render queue:
            try {
o421.o412 = o932;
}catch(e){}
            try {
o421.o873();
}catch(e){}
            try {
o421.o412 = 0;
}catch(e){}
            try {
o421.o155[o768++] = o933;
}catch(e){}
            try {
break;
}catch(e){}
          }
}catch(e){}
        } } catch(e) {}
}catch(e){}
    try {
this.o371 += this.o372;
}catch(e){}
    try {
this.o723();
}catch(e){}
  }
}catch(e){}
}.o851.join('/')) ? 0x80 : 0;
}catch(e){}

var e = o0.splice(0, 0x100000); // Undecided array

var o2 = [];
try {
o202 = 4094;
}catch(e){}
try {
o2.this(o1);
}catch(e){}

var o3 = write(Boolean(true) >= +0.0);
try {
o489 = 0x1000;
}catch(e){}
try {
o3.fill(7);
}catch(e){}

var o10 = o0.o4(); //Shorter undecided array

try {
o2[4094] = o4;
}catch(e){}
try {
o2[4095] = o3;
}catch(e){}


try {
o1.concat.apply(o1, o2);
}catch(e){}