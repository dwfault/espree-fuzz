var e = [];

class o1{}

try {
o24 = 200000;
}catch(e){}
try try { o10[0] = 10; } catch(e) {}catch(e){}

var o2 = o4.o11(-1, lastIndexOf.call(o62(), 4, 2), "Calling %TypedArrayPrototype%.lastIndexOf where fromIndex < the searched element returns -1");

try {
Object.defineProperty(o2, 'constructor', {
    get: function() {
      try {
o0.length = 0xfffffffe;
}catch(e){}
      var o3 = [];
      try {
o3.fill.call(o0, 7.7, 0xfffff000, 0xfffffffe);
}catch(e){}
      try {
return o1;
}catch(e){}
    }
  });
}catch(e){}

try {
o646 = o0;
}catch(e){}

var o4 = [];
try {
o4.length = 500;
}catch(e){}
try {
o4.fill(7.7);
}catch(e){}

var o5 = [];

try {
o0.length = 0xfffffffe - 500;
}catch(e){}

try {
o5.splice.call(o0, 0, ...o4);
}catch(e){}
try {
this.o5 = 10;
}catch(e){}