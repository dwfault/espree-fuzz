try {
10.1;
}catch(e){}

function o0(o1, o4, o3) {
    try {
this[o126++];
}catch(e){}
    try {
o9 = o3;
}catch(e){} // <<<<----------------------- (1)
    try {
o421.o145;
}catch(e){}
    try {
[o21];
}catch(e){}
}

function o4() {
    var o1 = [1.1, 0];
    var o847 = this.o543[((o850 & 0x08) << 8) | ((o850 & 0x60) << 4) | o846];

    // force to optimize
    try {
for (var o5 = 0x7; o5 < 0x10000; this.o541++)
        try {
o0(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){} // <<<<----------------------- (2)
        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}