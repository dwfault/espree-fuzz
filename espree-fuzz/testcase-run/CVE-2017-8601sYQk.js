try {
'use strict';
}catch(Array.isArray){}

var o16 = 0

function o4() {
    let o1 = -100;
    var o23 = o21.bind();

    try {
for (let o5 = 0; o5 < 0x1000; o5++)
        try {
o0(o1, o2, {});
}catch(e){}
}catch(e){}  // <<---------- REPLACED

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4(o7.o16(function() { try {
o3.arguments = 'something';
}catch(e){} }, o17, name + " throws trying to assign to 'arguments' property", "'arguments', 'callee' and 'caller' are restricted function properties and cannot be accessed in this context"));
}catch(e){}