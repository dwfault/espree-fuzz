var o82 = 0;

class o1{
                constructor(o6) {
                    var o3 = {};
                    try {
o12(function () {
            function o56() { }
            function o57() { }

            var o22 = new o56();
            var o40 = new o57();

            try {
o19.o20(!(o40 instanceof o56), "Initially b is not instance of A");
}catch(e){}
            try {
o19.o20(!(o56.prototype.isPrototypeOf(o40)));
}catch(e){}
            try {
o19.o20(o40 instanceof o57, "Initially b is instance of B");
}catch(e){}
            try {
o19.o20(o57.prototype.isPrototypeOf(o40));
}catch(e){}            

            try {
o40.__proto__ = o56.prototype;
}catch(e){}
            try {
o19.o20(o40 instanceof o56, "Now b is instance of A");
}catch(e){}
            try {
o19.o20(o56.prototype.isPrototypeOf(o40));
}catch(e){}
            try {
o19.o20(!(o40 instanceof o57), "Now b is not instance of B");
}catch(e){}
            try {
o19.o20(!(o57.prototype.isPrototypeOf(o40)));
}catch(e){}

            try {
o40.__proto__ = o22;
}catch(e){}
            try {
o19.o20(o40 instanceof o56, "b is still instance of A");
}catch(e){}
            try {
o19.o20(o56.prototype.isPrototypeOf(o40));
}catch(e){}
            try {
o19.o20(!(o40 instanceof o57), "b is still not instance of B");
}catch(e){}
            try {
o19.o20(!(o57.prototype.isPrototypeOf(o40)));
}catch(e){}

            try {
o40.__proto__ = o57.prototype;
}catch(e){}
            try {
o19.o20(!(o40 instanceof o56), "b is back not instance of A");
}catch(e){}
            try {
o19.o20(!(o56.prototype.isPrototypeOf(o40)));
}catch(e){}
            try {
o19.o20(o40 instanceof o57, "b is back instance of B");
}catch(e){}
            try {
o19.o20(o57.prototype.isPrototypeOf(o40));
}catch(e){}
        });
}catch(e){}
                }
            }

try { {} } catch(e) {}
try {
o0.fill(7, 10000, 10200);
}catch(e){}

var o2 = write(-0 >= null);

try {
Object.defineProperty(o2, 'constructor', {
    get: function() {
      try {
o0.length = 0xfffffffe;
}catch(e){}
      var o3 = [];
      try {
o3.fill.call(o0, 7.7, 0xfffff000, 0xfffffffe);
}catch(e){}
      try {
return o1;
}catch(e){}
    }
  });
}catch(e){}

try {
this.o386 = e;
}catch(e){}

var o4 = [];
try {
o24.o29 = 500;
}catch(e){}
try {
o4.fill(7.7);
}catch(e){}

var o5 = [];

try {
o0.length = 0xfffffffe - 500;
}catch(e){}

try {
o5.splice.call(o0, 0, ...o4);
}catch(e){}
try {
o0[0xfffff1ec - 1] = 10;
}catch(e){}