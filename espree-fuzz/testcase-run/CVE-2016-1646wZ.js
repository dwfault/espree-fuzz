function o0()
{
    try {
for(function o122 () {
  try {
this.o123 = function() {
    try {
return { o124 : function () {}, o119 : function() {}};
}catch(e){}
  }
}catch(e){}
  try {
this.o125 = 48000;
}catch(e){}
  try {
this.o126 = {}
}catch(e){}
  try {
this.o98 = function (o127, o128, o125) {
    try {
return { o129 : 1,
             o130 : 1,
             length : 1,
             o131 : 0.000020833333110203966,
             o125 : 48000}
}catch(e){}
  }
}catch(e){}
  try {
this.o132 = function (o117, o133, o134) {
    try {
o93.o117 = o117;
}catch(e){}
    try {
o93.o121 = {
        o135 : function (o51) {try {
return this.o136[o51];
}catch(e){}},
        o136    : []
    };
}catch(e){}
    try {
for (var o51 = 0; o51 < o134; o51++) {
      try {
o93.o121.o136[o51] = new Float32Array(o117);
}catch(e){}
    }
}catch(e){}
    try {
return o93;
}catch(e){}
  }
}catch(e){}
};o1<((1024 * 1024)/0x10);o1++)
    {
        var o2= new String();
    }
}catch(e){}
}

try {
o0.length    = o864[o768 | 1]
}catch(e){}
try {
o626 = 1.1
}catch(e){}
try {
o3[2] = 2.1
}catch(e){}
try {
o4.o11 = o961.o963[index].o964
}catch(e){}

var o4 = {};
try {
o3.__proto__ = o4;
}catch(e){}

try {
Object.defineProperty(
  o4, 1, {
    get() {
      try {
o3.length = 1;
}catch(e){}
      try {
o0();
}catch(e){}
      try {
return "value from proto";
}catch(e){}
    },
    set(o5) { }
});
}catch(e){}

try {
Array.prototype.concat.call(o3);
}catch(e){}