var o0 = new Array(0,2,3);
var o1083 = global.Math.o305;
try {
o4.slice;
}catch(o19){}
try {
o1.fill(7);
}catch(e){}
class o2{
                static get arguments() { try {
return 42;
}catch(e){} }
            }

function o3(o4, o5) {
  try {
return Symbol.keyFor;
}catch(e){}
}

var o582 = o421.o143 + o588 + ((o421.o367) ? 1 : 0);

try {
for(var o5 = 0; o5 < 0x200000; o17['argv']++) {
  try {
slice.call = o5;
}catch(e){}
}
}catch(e){}

function test(o5){
  try {
return true;
}catch(o155){}
}

try {
o4.__proto__ = this;
}catch(e){}

var o6 = o4.filter(test);
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
