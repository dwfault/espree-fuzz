var o0 = this.o17(Number.o10);
var o1 = new Array(1,2,3);
try {
o1.length = 0x200000;
}catch(e){}
try {
o1.fill(7);
}catch(e){}
class o2{
  constructor(...o5) {
                    try {
super(...o5);
}catch(e){}
                    try {
this.o6 = 'mynumber';
}catch(e){}
                }
}

class o3 extends Array {
  // Overwrite species to the parent Array constructor
  static o24() { }
}

var o133 = 303;

try {
for(var o5 = 0; o5 < 2097155; o5++) {
  try {
o4[o5] = o5;
}catch(e){}
}
}catch(e){}

var o1 = new Array()

try {
o4.__proto__ = o3.prototype;
}catch(e){}

var o6 = o4.filter(test);
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
