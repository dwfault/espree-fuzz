var o30;
var o133 = 1;
function o1111(o247) {
        try {
o247 = o247 | 0;
}catch(e){}
        try {
o6 = o70++
}catch(e){}
    };
var o3 = 0;

function o4(o5) {
    var o6 = [];

    try {
for (var o7 = 0; o3 = Object.defineProperty({}, key, { set(o10) { try {
o4.o11('abc', o10, "Setter called with correct arg");
}catch(e){} try {
o9++;
}catch(e){} } }); o7++)
        try {
o4.toString();
}catch(e){}
}catch(o487){}

    try {
return o6;
}catch(e){}
}

try {
Function.prototype.toString = function(o8) {
    try {
o3++;
}catch(e){}
    try {
o0.push(o2);
}catch(e){}

    try {
if (o3 == 2000) {
        var o9 = new Uint32Array(8000);
        try {
for (var o7 = 0; o7 < o9.length; o7++)
            try {
o9[o7] = 0x10000000;
}catch(e){}
}catch(e){}
    }
}catch(e){}

    try {
o0.push(o4);
}catch(e){}
    try {
o0.push(o4);
}catch(e){}
    try {
o0.push(o4);
}catch(e){}
    try {
return o1;
}catch(e){}
};
}catch(e){}

try {
o4(4000).join();
}catch(e){}

try {
o0.length = 4000;
}catch(e){}

var o10 = o0.join(":");