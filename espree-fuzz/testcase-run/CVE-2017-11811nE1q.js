function o0() {
    try {
for (let all = [ undefined, null,
            true, false, new Boolean(true), new Boolean(false),
            NaN, +0, -0, 0, 1, 10.0, 10.1, -1, -5, 5,
            124, 248, 654, 987, -1026, +98768.2546, -88754.15478,
            1<<32, -(1<<32), (1<<32)-1, 1<<31, -(1<<31), 1<<25, -1<<25,
            Number.o1, Number.MIN_VALUE, Number.NaN, Number.o2, Number.NEGATIVE_INFINITY,
            new Number(NaN), new Number(+0), new Number( -0), new Number(0), new Number(1),
            new Number(10.0), new Number(10.1),
            new Number(Number.o1), new Number(Number.MIN_VALUE), new Number(Number.NaN),
            new Number(Number.o2), new Number(Number.NEGATIVE_INFINITY),
            "", "hello", "hel" + "lo", "+0", "-0", "0", "1", "10.0", "10.1",
            new String(""), new String("hello"), new String("he" + "llo"),
            new Object(), [1,2,3], new Object(), [1,2,3] , o0
          ]; o1 < 100; o1++) {
        let o2 = o1 - 2;
        try {
switch (e) {
            case 2:
            case 4:
            case 6:
            case 2:
                        // change the value of a previous indexed value - the old value should end up in the return object
                        try {
o17[0] = -100;
}catch(e){}
                        try {
return o15;
}catch(e){}
            case 10:
            case 12:
            case 14:
            case 16:
            case 18:
            case 20:
            case 22:
            case 24:
            case 26:
            case 28:
            case 30:
            case 32:
            case 34:
            case 36:
            case 38:
                try {
break;
}catch(e){}
        }
}catch(e){}

        try {
if (o1 == 90) {
            try {
this[this.length-1] = 0x70 | o421.o155[0xFF26];
}catch(e){}
        }
}catch(e){}
    }
}catch(e){}
}

var o565 = o474.o707(o510.o479, 'x')

try {
o3();
}catch(e){}