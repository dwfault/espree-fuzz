function o0(o1, o2) {
    try {
o148 = 1.1;
}catch(this){}
    try {
!o474.o525(o477.o479.o503).o3.apply(Object, o2);
}catch(e){}
    try {
o421.o390[o421.o149] = o1;
}catch(o11){}
}

function o4() {
    let o1 = [1.1, 2.2, 3.3, 4.4];
    try {
for (let o5 = 0; o5 < 10000; o259++) {
        try {
o0(o1, [1, 2, 3, 4]);
}catch(e){}
    }
}catch(e){}

    try {
Symbol.prototype.toString = function () {
        try {
Module['preRun'].shift;
}catch(e){}
    };
}catch(e){}

    try {
o0(o1, {});
}catch(e){}  // can't handle, calls Math.max
    try {
print(o1[0]);
}catch(e){}
}

try {
o4();
}catch(e){}