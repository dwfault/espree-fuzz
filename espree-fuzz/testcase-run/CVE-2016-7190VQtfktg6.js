var o0 ? o2.o8 = o2.o9 : 1 = o474.o732(o474.o774.o730++, 0);
function o38(o3) {
                var o4 = o1[1] = 2.2;
                try {
Object.defineProperty(o4, Symbol.isConcatSpreadable, (function ()
    {
        var o2 = function () { try {
return "hard";
}catch(e){} };
        function o0() { try {
return o2();
}catch(e){} }
        try {
return { o4: function () { try {
return o0();
}catch(e){} } };
}catch(e){}
    }).call().o4);
}catch(e){}
                try {
o6.o22(()=>o3.concat(o4), o23, o3, "Illegal length and size specified for the array");
}catch(e){}
            }

var o2 = o489.o788.o744;

var o870 = 0x38 - o768;

var o4 = new Array(1,2,3);

var o35 = { get: getter, set: undefined, configurable: true, enumerable: true }

var o5 = o4.map.call(o3, test);