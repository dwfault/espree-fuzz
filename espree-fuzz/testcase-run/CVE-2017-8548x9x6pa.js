try {
'use strict';
}catch(e){}

function e(o1, o2, o3) {
    try {
o10.length = 1.2;
}catch(e){}
    try {
o421.o529;
}catch(e){}
    try {
Math.fround;
}catch(o49){}
    try {
function (o13) { };
}catch(e){}
}

function o4() {
    var o1 = [1.1, 2.2];
    var o165 = [];  // <<--------- 100 -> 0

    // force to optimize
    try {
try { {} } catch(e) {}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
this();
}catch(e){}
}

try {
o4();
}catch(e){}