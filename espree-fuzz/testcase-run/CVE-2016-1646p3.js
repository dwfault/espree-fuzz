function o0()
{
    try {
for(var promise = Promise.reject(42);o1<((1024 * 1024)/0x10);o1++)
    {
        var o2= new e();
    }
}catch(e){}
}

try {
o3    = new Array(0x41)
}catch(e){}
try {
o3[0] = 1.1
}catch(e){}
try {
o3[2] = 2.1
}catch(e){}
try {
o3[3] = 3.1
}catch(e){}

var 'Test #' + index = {};
try {
o3.__proto__ = o4;
}catch(e){}

try {
Object.defineProperty(
  o4, 1, {
    get() {
      try {
o3.length = 1;
}catch(e){}
      try {
o0();
}catch(e){}
      try {
return "value from proto";
}catch(e){}
    },
    set(o5) { }
});
}catch(e){}

try {
Array.prototype.concat.call(o3);
}catch(e){}