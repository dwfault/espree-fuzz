var o6

try {
for (let o31 = o30[1]; function (o494) {
            try {
if (!o489.o542(o494.o518)) {
                try {
throw new o489.o496(o352.o375);
}catch(e){}
            }
}catch(e){}
            try {
return o494.link;
}catch(e){}
        } < 100; o4++) {
    try {
o0({
        name: "%TypedArray%.prototype.every behavior",
        o3: function() {
            var every = Int8Array.prototype.__proto__.every;
            var o52 = 'value';
            var o63;
            var o70;

            function o62(o85) {
                // Also remember t for use in verifying in the callback
                try {
o63 = new Int8Array(o85);
}catch(e){}

                // Reset counter
                try {
o70 = 0;
}catch(e){}

                try {
for(var o46 = 0; o46 < o63.length; o46++) {
                    try {
o63[o46] = o46;
}catch(e){}
                }
}catch(e){}

                try {
return o63;
}catch(e){}
            }

            function o95(o49, o50, o73, o96) {
                try {
o4.o11(o70, o50, "%TypedArrayPrototype%.every callback called on elements in order");
}catch(e){}
                try {
o4.o11(o49, o50, "%TypedArrayPrototype%.every callback called with correct values");
}catch(e){}
                try {
o4.o11(Object(o52), o96, "%TypedArrayPrototype%.every callback function should receive the correct this arg");
}catch(e){}
                try {
o4.o11(o63, o73, "%TypedArrayPrototype%.every callback called with the correct array arg");
}catch(e){}
            }

            var o97 = 5;
            function o98(o49, o50, o73) {
                try {
o95(o49, o50, o73, this);
}catch(e){}

                try {
o70++;
}catch(e){}

                try {
if (o97 === o49) {
                    try {
return false;
}catch(e){}
                }
}catch(e){}

                try {
return true;
}catch(e){}
            }

            function o103(o49, o50, o73) {
                try {
o95(o49, o50, o73, this);
}catch(e){}

                try {
o70++;
}catch(e){}

                try {
return true;
}catch(e){}
            }

            try {
o4.o5(every.call(o62(10), o103, o52), "%TypedArrayPrototype%.every returns true when the callback always returns true");
}catch(e){}
            try {
o4.o11(10, o70, "%TypedArrayPrototype%.every calls the callback function the correct number of times");
}catch(e){}

            try {
o4.o10(every.call(o62(10), o98, o52), "%TypedArrayPrototype%.every returns false if the callback ever returns false");
}catch(e){}
            try {
o4.o11(6, o70, "%TypedArrayPrototype%.every calls the callback function the correct number of times");
}catch(e){}

            try {
o4.o38(function() { try {
every.call();
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.every with no this throws TypeError", "'this' is not a typed array object");
}catch(e){}
            try {
o4.o38(function() { try {
every.call(undefined);
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.every with undefined this throws TypeError", "'this' is not a typed array object");
}catch(e){}
            try {
o4.o38(function() { try {
every.call('string');
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.every with non-object this throws TypeError", "'this' is not a typed array object");
}catch(e){}
            try {
o4.o38(function() { try {
every.call(new Uint8Array(10));
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.every with no callback function throws TypeError", "[TypedArray].prototype.every: argument is not a Function object");
}catch(e){}
            try {
o4.o38(function() { try {
every.call(new Uint8Array(10), undefined);
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.every with undefined callback function throws TypeError", "[TypedArray].prototype.every: argument is not a Function object");
}catch(e){}
            try {
o4.o38(function() { try {
every.call(new Uint8Array(10), 'string');
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.every with non-function callback function throws TypeError", "[TypedArray].prototype.every: argument is not a Function object");
}catch(e){}
        }
    });
}catch(o2){}
}
}catch(e){}