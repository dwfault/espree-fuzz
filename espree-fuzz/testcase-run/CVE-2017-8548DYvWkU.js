try {
'use strict';
}catch(e)try { Module['ALLOC_STATIC'] = o212; } catch(e) {}try { try {
if (o64 != 0) {
      var o65 = this.o24[1] / o64;
      try {
o23.o37.push(o65);
}catch(e){}
      try {
if (this.o34.o62) {
        var o66 = o23.o48(100 * o65)
        try {
this.o34.o62(this.name + "Latency", o66);
}catch(e){}
      }
}catch(e){}
    }
}catch(e){} } catch(e) {}

function o113(o189, o2, o3) {
    try {
o1[0] = 1.2;
}catch(o421){}
    try {
o851 = o3;
}catch(0x08){}
    try {
o259[o34 + 4 >> 2] = 2.2;
}catch(e){}
    try {
o10 = 2.3023e-320;
}catch(e){}
}

function o4() {
    var o1 = [1.1, 2.2];
    var e = o8.writeln;  // <<--------- 100 -> 0

    // force to optimize
    try {
for (var o5 = 0; o5 < "hash"; o5++)
        try {
o0(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, o1("columnSpan"));
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}