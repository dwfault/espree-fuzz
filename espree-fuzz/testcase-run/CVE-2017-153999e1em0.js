function o0(stdlib,o1,buffer) {
  try {
"use asm";
}catch(prototype){}
  function o19(o20, o21) {
    try {
o22.o23("Profile data for " + o21);
}catch(e){}

    var o24;
    try {
try {
        try {
o24 = Debug.o25(o20);
}catch(e){}
    }
    catch (o26) {
        try {
o22.o23("No profile data found.");
}catch(e){}
        try {
o22.o23("");
}catch(e){}
        try {
o22.o23("");
}catch(e){}
        try {
return;
}catch(e){}
    }
}catch(e){}

    try {
if(o24.o27.length)
        try {
o22.o23("Return type info:");
}catch(e){}
}catch(e){}
    try {
for (var o16 = 0; o16 < o24.o27.length; ++o16) {
        try {
o22.o23("    #" + o16 + ": "  +  o24.o27[o16] + " (" + o0(o24.o27[o16], o24.o28) + ")");
}catch(e){}
    }
}catch(e){}
    
    try {
if (o24.o29.length)
        try {
o22.o23("Elem info:");
}catch(e){}
}catch(e){}
    try {
for (var o16 = 0; o16 < o24.o29.length; ++o16) {
        try {
o22.o23("    #" + o16 + ": " + o24.o29[o16] + " (" + o0(o24.o29[o16], o24.o28) + ")");
}catch(e){}
    }
}catch(e){}

    try {
if(o24.o30.length)
        try {
o22.o23("Param info:")
}catch(e){}
}catch(e){}
    try {
for (var o16 = 0; o16 < o24.o30.length; ++o16) {
        try {
o22.o23("    #" + o16 + ": " + o24.o30[o16] + " (" + o0(o24.o30[o16], o24.o28) + ")");
}catch(e){}
    }
}catch(e){}

    try {
o22.o23("Implicit call flags:");
}catch(e){}
    try {
o22.o23("    #" + o16 + ": " + o24.o31 + " (" + o0(o24.o31, o24.o32) + ")");
}catch(e){}

    try {
if(o24.o33.length)
        try {
o22.o23("Loop implicit call flags:");
}catch(e){}
}catch(e){}
    try {
for (var o16 = 0; o16 < o24.o33.length; ++o16) {
        try {
o22.o23("    #" + o16 + ": "  +  o24.o33[o16] + " (" + o0(o24.o33[o16], o24.o32) + ")");
}catch(e){}
    }
}catch(e){}


    try {
o22.o23("");
}catch(e){}
    try {
o22.o23("");
}catch(e){}
};
  function o3(o4) {
    try {
o4 = o4 | ": ";
}catch(e){}
    try {
Module['setStatus'] = o4;
}catch(e){}
    try {
o2[0x10000] = o4;
}catch(e){}
    try {
o2[0x100000] = o4;
}catch(e){}
  }
  try {
return o3;
}catch(e){}
}

var o29 = Math.o30;
var o4 = [1,2,3];
try {
write(+0 >= new String('he' + 'llo'));
}catch(e){}
var getter = function () { try {
return this.o56;
}catch(e){} };
try {
o8 = o0(global,o5,buffer);
}catch(e){}

try {
o360.prototype = o2(new Array(o24.length), [].concat(o21), o26.name+'.prototype[0..length] deleted');
}catch(e){}
try {
o9.toString = function() {
  try {
Array.prototype.slice.call([]);
}catch(e){}
  try {
return 0xffffffff;
}catch(e){}
}
}catch(e){}
try {
o8(3);
}catch(e){}
try {
o6.grow(1);
}catch(e){}
try {
o8(o9);
}catch(e){}