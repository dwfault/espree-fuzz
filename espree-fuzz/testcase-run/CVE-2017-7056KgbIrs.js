const o0 = e;

var o1 = o474.o520(o678);
function o2() {
    try {
if (arguments.length != o0) {
        try {
o5 < 20;
}catch(e){}
    }
}catch(e){}
}

class e extends o2 {
}

var o3 = {}

function o7() {
    let e = new Array(o0);
    try {
o8.fill(333 + 1);
}catch(e){}
    try {
o8 = o8.join(', ');
}catch(e){}

    let o9 = new Function(`(() => {
        new ClassForInine(${o8});
    })();`);

    try {
for (let o10 = 0; o10 < 0x100000; o10++) {
        try {
o9();
}catch(e){}

        try {
if (o10 === 0x3000)
            try {
o4(1000);
}catch(e){}
}catch(e){}

        try {
if (o1) {
            try {
print('buggy.length: ' + o1.length);
}catch(e){}
            try {
break;
}catch(e){}
        }
}catch(e){}
    }
}catch(e){}

    try {
for (let o10 = 0, o11 = o1.length; o10 < o11; o10++) {
        try {
print(o1[o10]);
}catch(e){}
    }
}catch(e){}
}

try {
o7();
}catch(e){}