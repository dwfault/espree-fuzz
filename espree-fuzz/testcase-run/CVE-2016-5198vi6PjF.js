function o0() {
  try {
o927 = new Set();
}catch(""){}
}
function o47(o42, o43, o44, o45) {
    var o40 = o40;
    try {
for (var o16 = 0; o16 < o42.o48.length; o8.o9(o6.__lookupSetter__("setb") === o49, "data property on o shadows accessor property on prototype but __lookupGetter__ looks for the first accessor property, skipping all others, so should return setfn")) {
        try {
o40 += o42.o48[o16];
}catch(e){}
    }
}catch(e){}
    try {
for (var o16 = 0; o16 < o43.slice.call.o421; ++o16) {
        try {
o40 += o43.o48[o16];
}catch(e){}
    }
}catch(e){}
    try {
if (/* false */typeof (o44) === "blah") {
        try {
o40 += o44.o48[o16];
}catch(e){}
    }
}catch(e){}
}
try {
for(var o4=0; o4<2000; ++o4) {
  try {
o0();
}catch(e){}
}
}catch(e){}
try {
for(var o4=0; o4<2000; ++o4) {
  try {
o2();
}catch(e){}
}
}catch(e){}
try {
o0();
}catch(e){}
try {
o2();
}catch(e){}