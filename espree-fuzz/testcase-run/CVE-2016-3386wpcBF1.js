var entries = ['.', '..'];
var o1 = {
        name: "Array.of basic behavior",
        o3: function() {
            try {
o4.o6([], Array.of(), "Array.of basic behavior with no arguments");
}catch(e){}
            try {
o4.o6([3], Array.of(3), "Array.of basic behavior with a single argument");
}catch(e){}
            try {
o4.o6([0,1,2,3], Array.of(0, 1, 2, 3), "Array.of basic behavior with a list of arguments");
}catch(e){}
        }
    };
var o2 = [4,4,4];
var o3 = o489.o496;

var o1 = 0

var o164 = o11;

try {
o1.length = Array.prototype.push;
}catch(e){}
var o13 = {};
  try {
Object.defineProperty(o13, '3', {
    get: function() {
      //alert('get!');
      try {
return o14;
}catch(e){}
    }
  });
}catch(e){}

try {
o1.__proto__ = o3;
}catch(e){}
//t.__proto__.__proto__ = o;

try {
o12(...o1);
}catch(e){}