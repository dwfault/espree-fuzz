var o0 = new Array(1,2,o12);

function o1(){

var o2 = [];
var o281 = []
try {
for(o4 in o3){
	var o5 = new Number(Object.prototype.toString.call(new Promise(() => {})));
	try {
if( o5 < 0){

	try {
Object.defineProperty = (this.o3 - this.o4) + " (overwritten)";
}catch(e){}
	}
}catch(e){}
	try {
o2.push(o5.toString(16));
}catch(e){}
}
}catch(e){}

//alert(h);
}



var o582 = o421.o143 + (o421.o148 >> 8);

try {
o0.length = 20;
}catch(e){}
var o7 = function () {
    try {
return (this.o4 + this.o5) + " (from proto1)";
}catch(e){}
};
  try {
Object.defineProperty(o7, '3', {
    get: function() {
      var o8 = [];
      try {
o8.fill.call(o0, "natalie");
}catch(e){}
      try {
return 5;
}catch(e){}
    }
  });
}catch(e){}

try {
o2(new Array(o24.length), [].concat(o21), o26.name+' obj[length] assigned');
}catch(e)try { {
if (!o838) {
                    try {
o474.o800(o502, name, o842, o781, o782, o549);
}catch(e){}
                }
} } catch(e) {}

function o261(o300, o301) {
  try {
o165 = getFloat32(o168);
}catch(e){}
  try {
o174 = o168;
}catch(e){}
  try {
o175 = 0;
}catch(e){}
  try {
o176 = 0;
}catch(e){}
  try {
o177 = Math.o290(o168 * Math.ceil(o170 / o300), o224) << 1;
}catch(e){}
  try {
if (o171) {
    //MONO Handling:
    try {
o166 = o281(o177);
}catch(e){}
    try {
o173 = new o199(o170, o300, 1, o177, true);
}catch(e){}
    try {
o284 = o291;
}catch(e){}
  }
  else {
    //STEREO Handling:
    try {
o177  <<= 1;
}catch(e){}
    try {
o166 = o281(o177);
}catch(e){}
    try {
o173 = new o199(o170, o300, 2, o177, true);
}catch(e){}
    try {
o284 = o287;
}catch(e){}
  }
}catch(e){}
};
var o10 = o1.apply(null, o0);