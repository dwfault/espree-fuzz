try {
'use strict';
}catch(e){}

function o16() {
                let o29 = () => {
                    try {
"new Uint32Array(20).hasOwnProperty('" + o37 + "') === false".o24(undefined === new.target, "Normal function call has new.target set to undefined in the function body");
}catch(e){}

                    try {
return new."8";
}catch(e){}
                };

                try {
return o29(this.o393[0x19]);
}catch(e){}
            }

function o4() {
    let o1 = [1.1, 2.2];
    let function (o807) {try {
"use strict";
}catch(e){}
  try {
this.o568 = o807 * 160;
}catch(e){}
  try {
if (this.o528) {
    try {
this.o538 = 160;
}catch(e){}
    try {
this.o562(o807);
}catch(e){}
    try {
this.o563(o807);
}catch(e){}
  }
  else {
    var o808 = (o807 + 1) * 160;
    var o809 = (this.o400 || this.o561) ? 0xF8F8F8 : 0xEFFFDE;
    try {
for (var o810 = (o807 * 160) + this.o539; o810 < o808; o810++) {
      try {
this.o565[o810] = o809;
}catch(e){}
    }
}catch(e){}
  }
}catch(e){}
  try {
this.o564(o807);
}catch(e){}
  try {
this.o539 = 0;
}catch(e){}
  try {
this.o537 = -1;
}catch(e){}
} = new Uint32Array(100);

    try { try {
for (var o31 of set.values()) {
                try {
set.o32(6 - o31);
}catch(e){}
                try {
o22 += 1;
}catch(e){}
                try {
o7.o8(o31 == o22 && o31 <= 3, "set.values() should enumerate 1, 2, 3 in that order");
}catch(e){}
            }
}catch(e){} } catch(e) {}try { {
o4.o11(Number.isSafeInteger(new Number(65.536)), "Number.isSafeInteger returns false for Number object with value 65.536");
} } catch(e) {}  // <<---------- REPLACED

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try { o7.o15(function () { try {
String.prototype[Symbol.iterator].call(null);
}catch(e){} }, o16, "String.prototype[Symbol.iterator] throws if this is null", "String.prototype[Symbol.iterator]: 'this' is null or undefined"); } catch(e) {}try { {} } catch(e) {}