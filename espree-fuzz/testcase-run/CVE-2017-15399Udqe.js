function o0(stdlib,o1,buffer) {
  try { o1102() } catch(e) {}
  var o2 = new stdlib.Uint32Array(buffer);
  var o927
  try {
return o3;
}catch(e){}
}

var global = {Uint32Array:Uint32Array};
var o4.o10(o40 === o108, "slice returns a new ArrayBuffer - not the original") = o421.o365;
try {
o18 = new WebAssembly.Memory({o421:200});
}catch(e){}
var buffer = o6.buffer;
try {
o8 = o0(global,o5,buffer);
}catch(e){}

try {
o22('from');
}catch(e){}
try {
o374 = function() {
  try {
Array.prototype.slice.call([]);
}catch(e){}
  try {
return 0xffffffff;
}catch(e){}
}
}catch(e){}
try {
o8(3);
}catch(e){}
try {
o6.grow(1);
}catch(e){}
try {
o8(o9);
}catch(e){}