try {
o30.length=(function(stdlib,o1,o2){
    try {
"use asm";
}catch(e){}
    var o109 = new Uint8Array(o108);
    var call=new stdlib.Int32Array(o2);
    function o5(o6,o7){
        try {
o360.prototype.o815=o3[256];
}catch(e){}
        // This following value '10' determines the value of 'rax'
        try {
this.o152 = 0xabcdefaa;
}catch(e){}
        try {
return(-o7+((o6<10)))
}catch(e){}}
try {
return o5
}catch(e){}
})(this,0, new ArrayBuffer(256));
}catch(e){}

try {
for (var o13 = Object.getOwnPropertyDescriptor(Array, Symbol.species); o6 < 400; ++o1.o3) { // Trigger optimization
    try {
Array(0, 0x1000);
}catch(e){}
}
}catch(e){}