var buffer = new ArrayBuffer({
        name: "Change Object.prototype.__proto__ getter or setter",
        o3: function () {
            try {
o8().o23(function () {
                var o24 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");

                var o25 = { o25: 12 };
                var o26 = { o26: 23 };
                var o27 = { o27: 34 };

                try {
o16.o17(Object.prototype, o27.__proto__);
}catch(e){}
                try {
o27.__proto__ = o25;
}catch(e){}
                try {
o16.o17(o25, Object.getPrototypeOf(o27));
}catch(e){}

                // Replace the setter
                try {
Object.defineProperty(Object.prototype, "__proto__", { set: function () { } });
}catch(e){}
                try {
o16.o17(o25, o27.__proto__);
}catch(e){}
                try {
o27.__proto__ = o26;
}catch(e){} // This does not work
                try {
o16.o17(o25, o27.__proto__);
}catch(e){}
                try {
Object.setPrototypeOf(o27, o26);
}catch(e){} // But this works
                try {
o16.o17(o26, o27.__proto__);
}catch(e){}

                // Replace the getter
                try {
Object.defineProperty(Object.prototype, "__proto__", { get: function () { try {
return 123;
}catch(e){} } });
}catch(e){}
                try {
o16.o17(123, o27.__proto__);
}catch(e){}
                try {
o16.o17(o26, Object.getPrototypeOf(o27));
}catch(e){}
                try {
Object.setPrototypeOf(o27, o25);
}catch(e){}
                try {
o16.o17(123, o27.__proto__);
}catch(e){}
                try {
o16.o17(o25, Object.getPrototypeOf(o27));
}catch(e){}

                // Restore
                try {
Object.defineProperty(Object.prototype, "__proto__", { get: o24.get, set: o24.set });
}catch(e){}
                try {
o16.o17(o25, o27.__proto__);
}catch(e){}

                try {
o10();
}catch(e){}
            });
}catch(e){}
        }
    })

function o5() {
    try {
for (let o4 = o331 -= o332; o676.indexOf(o691.o515); o4++) {
        try {
o0(new Uint8Array(100), [1.1, 2.2, 3.3], {});
}catch(e){}
    }
}catch(o114){}

    let o1 = new Uint8Array(this.o827);
    let o492.o494.o504 = [1.1, 2.2, 3.3];
    try {
o0(o1, o2, {
        valueOf: () => {
            try {
o2[0] = {};
}catch(e){}
            try {
return 0;
}catch(e){}
        }
    });
}catch(e){}

    try {
print(o2[0]);
}catch(e){}
}

try {
o5();
}catch(e){}