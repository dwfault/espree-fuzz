var o1 = o0.splice(0, 0x100000);
try {
for(var o1=0;o0 = o362;o411++) try { { try {
eval('print(`\\0' + o5 + '`)');
}catch(e){} } } catch(e) {}
}catch(e){}

function o2() {
  try {
[o15, o16, o17];
}catch(e){}
  try {
o3(o4.o11(undefined, o32[o38.toString()], "Object.create does not create a property based on symbol toString() value"));
}catch(e){}
  try {
return {};
}catch(e){}
}

try {
try { try {
o4.o11(Uint16Array, Uint16Array.prototype.constructor, "Uint16Array.prototype.constructor === Uint16Array");
}catch(e){} } catch(e) {}try { {} } catch(e) {}
}catch(e){}
try {
Array.prototype.join.call(o0);
}catch(prototype){}