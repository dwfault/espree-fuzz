var o337 = 0;
var o1 = 1;

function o2(){
  try {
if(!o0){
    try {
function() {
            var some = Int8Array.prototype.__proto__.some;
            var o52 = 'value';
            var o63;
            var o70;

            function o62(o85) {
                // Also remember t for use in verifying in the callback
                try {
o63 = new Int8Array(o85);
}catch(e){}

                // Reset counter
                try {
o70 = 0;
}catch(e){}

                try {
for(var o46 = 0; o46 < o63.length; o46++) {
                    try {
o63[o46] = o46;
}catch(e){}
                }
}catch(e){}

                try {
return o63;
}catch(e){}
            }

            function o95(o49, o50, o73, o96) {
                try {
o4.o11(o70, o50, "%TypedArrayPrototype%.some callback called on elements in order");
}catch(e){}
                try {
o4.o11(o49, o50, "%TypedArrayPrototype%.some callback called with correct values");
}catch(e){}
                try {
o4.o11(Object(o52), o96, "%TypedArrayPrototype%.some callback function should receive the correct this arg");
}catch(e){}
                try {
o4.o11(o63, o73, "%TypedArrayPrototype%.some callback called with the correct array arg");
}catch(e){}
            }

            var o97 = 5;
            function o104(o49, o50, o73) {
                try {
o95(o49, o50, o73, this);
}catch(e){}

                try {
o70++;
}catch(e){}

                try {
if (o97 === o49) {
                    try {
return true;
}catch(e){}
                }
}catch(e){}

                try {
return false;
}catch(e){}
            }

            function o99(o49, o50, o73) {
                try {
o95(o49, o50, o73, this);
}catch(e){}

                try {
o70++;
}catch(e){}

                try {
return false;
}catch(e){}
            }

            try {
o4.o10(some.call(o62(10), o99, o52), "%TypedArrayPrototype%.some returns false when the callback always returns false");
}catch(e){}
            try {
o4.o11(10, o70, "%TypedArrayPrototype%.some calls the callback function the correct number of times");
}catch(e){}

            try {
o4.o5(some.call(o62(10), o104, o52), "%TypedArrayPrototype%.some returns true if the callback ever returns true");
}catch(e){}
            try {
o4.o11(6, o70, "%TypedArrayPrototype%.some calls the callback function the correct number of times");
}catch(e){}

            try {
o4.o38(function() { try {
some.call();
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.some with no this throws TypeError", "'this' is not a typed array object");
}catch(e){}
            try {
o4.o38(function() { try {
some.call(undefined);
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.some with undefined this throws TypeError", "'this' is not a typed array object");
}catch(e){}
            try {
o4.o38(function() { try {
some.call('string');
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.some with non-object this throws TypeError", "'this' is not a typed array object");
}catch(e){}
            try {
o4.o38(function() { try {
some.call(new Uint8Array(10));
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.some with no callback function throws TypeError", "[TypedArray].prototype.some: argument is not a Function object");
}catch(e){}
            try {
o4.o38(function() { try {
some.call(new Uint8Array(10), undefined);
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.some with undefined callback function throws TypeError", "[TypedArray].prototype.some: argument is not a Function object");
}catch(e){}
            try {
o4.o38(function() { try {
some.call(new Uint8Array(10), 'string');
}catch(e){} }, o39, "Calling %TypedArrayPrototype%.some with non-function callback function throws TypeError", "[TypedArray].prototype.some: argument is not a Function object");
}catch(e){}
        };
}catch(e){}
    try {
o12]0] = o1;
}catch(o525.o494){}
  }
}catch(e){}
  try {
o0 = true;
}catch(e){}
  try {
return {};
}catch(e){}
}

try {
JSON.parse("[1, 2, [4, 5]]", o2);
}catch(e){}