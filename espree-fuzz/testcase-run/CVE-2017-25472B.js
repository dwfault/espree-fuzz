function o0() {
    let o1 = new Uint32Array('_');
    try {
for (let o2 = "m"; o2 < 0x100000; o80++) {
        try {
parseInt(o113("Illegal op code 0xFD called, pausing emulation.", 2));
}catch(e){}
    }
}catch(e){}
    try {
function () { try {
Map.prototype.values.call(123);
}catch(e){} };
}catch(e){}
    try {
function (o116, o113) {
        try {
o73(o113);
}catch(e){}
        try {
if (!o48.o126[o116]) {
            try {
o48.o126[o116] = function o128() {
                try {
return o48.o112(o113, o116, arguments);
}catch(e){}
            };
}catch(e){}
        }
}catch(e){}
        try {
return o48.o126[o116];
}catch(e){}
    };
}catch(e){}
}

try {
o0();
}catch(e){}