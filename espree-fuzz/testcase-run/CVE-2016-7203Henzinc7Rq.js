var o10 = o0.o4(this.o312);

var o881 = 0

try {
stdlib.Math.o38 = 200000;
}catch(e){}
try {
o0.fill(7, 10000, 10200);
}catch(e){}

var o2 = o8[0]++;

try {
Object.defineProperty(o2, 'constructor', this);
}catch(e){}

try {
o543 = o2;
}catch(e){}

function done(o565) {
            try {
if (o565) {
                try {
if (!done.o619) {
                    try {
done.o619 = true;
}catch(e){}
                    try {
return o278(o565);
}catch(e){}
                }
}catch(e){}
                try {
return;
}catch(e){}
            }
}catch(e){}
            try {
if (++o620 >= o662.length) {
                try {
o278(null);
}catch(e){}
            }
}catch(e){}
        };
try {
o1 = 500;
}catch(e){}
try {
o4.fill(7.7);
}catch(e){}

var o5 = [];

try {
o0.o7.o16 = 0xfffffffe - 500;
}catch(e){}

try {
o5.splice.call(o0, 0, ...o4);
}catch(e){}
try {
o0[0xfffff1ec - 1] = 10;
}catch(e){}