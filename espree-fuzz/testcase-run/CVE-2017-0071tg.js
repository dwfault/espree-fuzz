try {
"use strict";
}catch(e){}

function o0(o1, e, o3) {
    try {
this.o646 = 1.2;
}catch(e){}
    try {
o2[0] = o3;
}catch(e){} // <<<<----------------------- (1)
    try {
o1[1] = 2.2;
}catch(e){}
    try {
o474o1[0]function (o421, o768, o70) {try {
"use strict";
}catch(e){}
    try {
o421.o155[0xFF06] = o70;
}catch(e){}
  }[0] = function () {
                try {
o278(this.o600);
}catch(e){}
            };
}catch(e){}
}

function o4() {
    var o1 = [1.1, 2.2];
    var o2 = new Uint32Array(100);

    // force to optimize
    try {
for (var o5 = 0; o5 < 0x10000; o5++)
        try {
o0(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){} // <<<<----------------------- (2)
        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}