var e = new Array(1,2,e);
var o1 = o35["use strict"];
try {
Promise.o367 = 0x200000;
}catch(e){}
try {
o1.fill(7);
}catch(e){}
var o1083 = global.Math.o45

class o3 extends Array {
    static get [Symbol.species]() {
        try {
return function() { try {
return o0;
}catch(e){} }
}catch(e){}
    }; // custom constructor which returns a proxy object
}

var o4 = new Array(String.prototype, [], "natalie", 7, 7, o0.o4("test2"), 7, 7);

try {
for(function o294(o292) {
    try {
o281.unshift(o292);
}catch(e){}
}; o5 < 0x200000; o5++) {
  try {
o4[o5] = o5;
}catch(e){}
}
}catch(e){}

function test(o5){
  try {
return true;
}catch(e){}
}

try {
o4.__proto__ = o3.prototype;
}catch(e){}

var o6 = o4.filter(test);
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
