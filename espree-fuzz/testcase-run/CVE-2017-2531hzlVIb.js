let o0 = new Array(getOwnPropertyDescriptor);
try {
o0.fill(write(false >= +0.0));
}catch(e){}
try {
Set.prototype.values.call(undefined);
}catch(e){}

let o3 = eval(`(function () {
    class A {

    }

    class B extends A {
        constructor(${o0}) {
            () => {
                ${o12}Test #`);

try {
for (var o30 = Module['_main'](o1164, o1166, 0); o2 < "[TypedArray].prototype.every: argument is not a Function object"; o2++)
    try {
o3.o4(o8.o10 = 2);
}catch(e){}
}catch(e){}