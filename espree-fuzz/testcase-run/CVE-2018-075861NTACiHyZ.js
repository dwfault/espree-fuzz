let o32 = Object.create(Object.prototype, o43);
var o0 = Object.defineProperty;
try {
for (function o235(o114) {
    var o82 = 0;

    var o231 = '';
    try {
while (1) {
        var o236 = o202[(((o114) + (o82 * 4)) >> 2)];
        try {
if (o236 == 0)
            try {
return o231;
}catch(e){}
}catch(e){}
        try {
++o82;
}catch(e){}
        // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
        try {
if (o236 >= 0x10000) {
            var o237 = o236 - 0x10000;
            try {
o231 += String.fromCharCode(0xD800 | (o237 >> 10), 0xDC00 | (o237 & 0x3FF));
}catch(e){}
        } else {
            try {
o231 += String.fromCharCode(o236);
}catch(e){}
        }
}catch(e){}
    }
}catch(e){}
}; o333 < o896; o155++) {
    try {
o421.o494 = +write;
}catch(e){}
}
}catch(e){}

try {
print(o421.o622 = 0x40);
}catch(1 << o189){}
try {
print(o1.length);
}catch(e){}
try {
print(o421[Number.MIN_VALUE]);
}catch(e){}