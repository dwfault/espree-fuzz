var o0 = Object.defineProperty;

var o1 = o847[o848++];

function o2(){
  var o3 = Intl;
  try {
try { o24("search", arguments, 2); } catch(e) {}try { o1062 = -8 - o750 | 0; } catch(e) {}
}catch(e){} // this somehow prevents an exception that prevents laoding
  try try { switch (this.o405) {
    case 0x00:
    case 0x20:
    case 0x40:
    case 0x60:
      //Bank calls for 0x00, 0x20, 0x40, and 0x60 are really for 0x01, 0x21, 0x41, and 0x61.
      try {
this.o406 = (this.o405 % this.o663) << 14;
}catch(e){}
      try {
break;
}catch(e){}
    default:
      try {
this.o406 = ((this.o405 % this.o663) - 1) << 14;
}catch(e){}
  } } catch(e) {}try { {
if ((o1060 | 0) != 0) {
                        try {
o34 = o259[10724 >> 2] | 0;
}catch(e){}
                        try {
o111 = o1060 >>> 3;
}catch(e){}
                        try {
o1060 = o111 << 1;
}catch(e){}
                        try {
o750 = 10744 + (o1060 << 2) | 0;
}catch(e){}
                        try {
o189 = o259[2676] | 0;
}catch(e){}
                        try {
o1065 = 1 << o111;
}catch(e){}
                        try {
do {
                            try {
if ((o189 & o1065 | 0) == 0) {
                                try {
o259[2676] = o189 | o1065;
}catch(e){}
                                try {
o1069 = 10744 + (o1060 + 2 << 2) | 0;
}catch(e){}
                                try {
o1070 = o750
}catch(e){}
                            } else {
                                try {
o111 = 10744 + (o1060 + 2 << 2) | 0;
}catch(e){}
                                try {
o1062 = o259[o111 >> 2] | 0;
}catch(e){}
                                try {
if (!(o1062 >>> 0 < (o259[10720 >> 2] | 0) >>> 0)) {
                                    try {
o1069 = o111;
}catch(e){}
                                    try {
o1070 = o1062;
}catch(e){}
                                    try {
break
}catch(e){}
                                }
}catch(e){}
                                try {
o1102()
}catch(e){}
                            }
}catch(e){}
                        } while (0);
}catch(e){}
                        try {
o259[o1069 >> 2] = o34;
}catch(e){}
                        try {
o259[o1070 + 12 >> 2] = o34;
}catch(e){}
                        try {
o259[o34 + 8 >> 2] = o1070;
}catch(e){}
                        try {
o259[o34 + 12 >> 2] = o750
}catch(e){}
                    }
} } catch(e) {}catch(e){}
}

try {
o421.o367 = o598;
}catch(o391){}

var o4 = o421.o364;