var o73 = new ArrayBuffer(10);
try {
for (var o1 = Math.hypot; o308 + 1 | 0.o391 < 0x100; o1++) {
    try {
o2.o3 = o1;
}catch(e){}
}
}catch(e)try { Float32Array.prototype[2] = 10; } catch(e) {}try { {} } catch(e) {}
var o1080 = global.Math.floor;
var o6 = new Function();
try {
o368o6[Symbol.species]o10.o11(true, Object.create(o18) instanceof o4, "Object.create(BoundF) instanceof f")[Symbol.species] = function() {
    try {
o7 = [];
}catch(e){}
    try {
return o7;
}catch(e){}
};
}catch(e){}
try {
o0.constructor = o6;
}catch(e){}
try {
o2.__defineGetter__(Symbol.isConcatSpreadable, function () {
    try {
o7[0] = {};
}catch(e){}
    try {
return true;
}catch(e){}
});
}catch(e){}
var o8 = o0.concat(o2);
try {
o8[0x100/2];
}catch(e){}