try {
'use strict';
}catch(e){}

function o0(o1, o2, undefined) {
    try {
o46 < o63.length[0] = 1.2;
}catch(3){}
    try {
o2[0] = o3;
}catch(e){}
    try {
o1084 + 24 >> 2[1] = 2.2;
}catch(e){}
    try {
o0 = o474;
}catch(e){}
}

function o4() {
    var o1 = [1.1, 2.2];
    var o3 = { [o31] : 'value' };  // <<--------- 100 -> 0

    // force to optimize
    try {
for (var o5 = 0; o5 < 0x10000; o5++)
        try {
o0(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}