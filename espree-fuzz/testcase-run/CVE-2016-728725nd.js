var o3 = Function.prototype;

var o1 = {
  o116: o568 = true,
  set: function () { }
};

function o2(){
  var o3 = Intl;
  try {
o116  = o77 = 128;
}catch(e){} // this somehow prevents an exception that prevents laoding
  try {
o0(o3, "Collator", o1);
}catch("parent"){}
}

try {
Object.defineProperty = o850 & 0x60;
}catch(e){}

function o14(o15, o16) {
                try {
o4.o6(o13, o16, "Array.from called with a mapping function, we should get the elements in order. Setting item[" + o16 + "] = " + o15);
}catch(e){}
                try {
o4.o6(o15, o16, "Array.from called with a mapping function, Value and index should be same for this test");
}catch(e){}
                try {
o4.o6(2, arguments.length, "Array.from called with a mapping function, only 2 elements should be passed as arguments");
}catch(e){}
                // increment expected index
                try {
o13++;
}catch(e){}
            };