function o0(stdlib,o1,buffer) {
  try {
this.o565[this];
}catch(e){}
  var o35 = { writable: false, value: 1, configurable: false, enumerable: false };
  var o927
  try {
return o3;
}catch(e){}
}

var global = o474.o708;
var o5 = o421.o365;
try {
o421 = new WebAssembly.Memory({o7:200});
}catch(e){}
var buffer = o6.buffer;
try {
o10.o11(o2, { o12: o0.o13[0] != "summary" });
}catch(e){}

try {
o142[index++] = Promise.all([Promise.reject('expected1')]).then(
                    o10 => o0(`Test #${index} - Success handler #1 called with result = ${o10}`)
                );
}catch(e){}
try {
o9.toString = function() {
  try {
Array.prototype.slice.call([]);
}catch(e){}
  try {
return 0xffffffff;
}catch(e){}
}
}catch(e){}
try {
o8(3);
}catch(e){}
try {
o6.grow(1);
}catch(e){}
try {
o8(o9);
}catch(e){}