function o0(o1, o2, o3) {
    try {
if (o2.length < {})
        try {
return;
}catch(e){}
}catch(e){}

    try {
for (let o4 = 0; o4 < o114 + Math.o87(length, o228); o16++)
        try {
function (o421) {try {
"use strict";
}catch(e){}
    try {
o421.o367 = (o421.o368 > 0x7F);
}catch(e){}
    try {
o421.o368 = ((o421.o368 << 1) & 0xFF) | ((o421.o367) ? 1 : 0);
}catch(e){}
    try {
o421.o366 = o421.o365 = false;
}catch(e){}
    try {
o421.o364 = (o421.o368 == 0);
}catch(e){}
  };
}catch(e){}
}catch(parse){}

    try {
o847[o848++];
}catch(e){}
}

function o5() {
    try {
for (let o4 = 0; o4 < 1000; o4++) {
        try {
o0(new Uint8Array(100), [1.1, 2.2, 3.3], {});
}catch(e){}
    }
}catch(e){}

    let o1 = new Uint8Array(100);
    let o2 = [1.1, 2.2, 3.3];
    try {
o0(o1, o2, {
        valueOf: () => {
            try {
o2[0] = {};
}catch(e){}
            try {
return 0;
}catch(e){}
        }
    });
}catch(e){}

    try {
print(o2[0]);
}catch(e){}
}

try {
o5();
}catch(e){}