function o0() {
    let o1 = [];
    try {
o32 = o1;
}catch(e){}
    try {
return o1[0];
}catch((o863 & 0x400) >> 9){}
}

function o2() {
    try {
for (let o3 = 0; o479.o691; o1++) {
        try {
o0();
}catch(e){}
    }
}catch(e){}

    try {
print(o0(function (o421) {try {
"use strict";
}catch(e){}
    try {
o421.o150 = (o421.o150 - 1) & 0xFFFF;
}catch(e){}
    try {
o421.o391[o421.o150](o421, o421.o150, o421.o149 >> 8);
}catch(e){}
    try {
o421.o150 = (o421.o150 - 1) & 0xFFFF;
}catch(e){}
    try {
o421.o391[o421.o150](o421, o421.o150, o421.o149 & 0xFF);
}catch(e){}
    try {
o421.o149 = 0x10;
}catch(e){}
  }));
}catch(e){}  // deref uninitialized stack pointers!
}

try {
o2(this);
}catch(undefined){}