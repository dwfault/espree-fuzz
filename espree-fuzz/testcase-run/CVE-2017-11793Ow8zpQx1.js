function o66(o74, o68, o75) {
                try {
o4.o11([0,-1,-2,-3,-4,-5,-6,-7,-8,-9], o74.call(o68(), o71, o52), "%TypedArrayPrototype%.map basic functionality of the mapping function");
}catch(e){}

                try {
if (o75) {
                    try {
o4.o5(ArrayBuffer.isView(o74.call(o68(), o71, o52)), "%TypedArrayPrototype%.map returns a TypedArray");
}catch(e){}
                    try try { {
    try {
this.o839();
}catch(e){}
    //Update the color palette for BG tiles since it changed:
    try {
this.o548[index] = o70;
}catch(e){}
    try {
if ((index & 0x06) == 0) {
      //Palette 0 (Special tile Priority stuff)
      try {
o70 = 0x2000000 | this.o832((this.o548[index | 1] << 8) | this.o548[index & 0x3E]);
}catch(e){}
      try {
index >>= 1;
}catch(e){}
      try {
this.o552[index] = o70;
}catch(e){}
      try {
this.o552[0x20 | index] = 0x1000000 | o70;
}catch(e){}
    }
    else {
      //Regular Palettes (No special crap)
      try {
o70 = this.o832((this.o548[index | 1] << 8) | this.o548[index & 0x3E]);
}catch(e){}
      try {
index >>= 1;
}catch(e){}
      try {
this.o552[index] = o70;
}catch(e){}
      try {
this.o552[0x20 | index] = 0x1000000 | o70;
}catch(e){}
    }
}catch(e){}
  } } catch(e) {}catch(e){}
                } else {
                    try {
o4.o10(ArrayBuffer.isView(o74.call(o68(), o71, o52)), "%TypedArrayPrototype%.map returns a normal array");
}catch(o471){}
                }
}catch(e){}
            }

var o2 = o7++

try {
JSON.stringify(o0);
}catch(e){}