function o3(o4) {
    try {
try { try {
o189 = o1080 << o1079;
}catch(e){} } catch(e) {}
}catch(e){}
    try {
o259[o1065 >> 2]o2[0]write[0] = o4;
}catch(e){}
    try {
resolve[0x10000] = o4;
}catch(e){}
    try {
eval.call(this, "evalCode3 = function() { return evalCode3 + ' ' + captured; }");
}catch(e){}
  }

function o730() {
    try {
o0(2.3023e-320, null);
}catch(e){}
}

function o5() {
    try {
o0(() => {}, 1);
}catch(e){}  // feed a function to the profiler

    try {
for (let o6 = 0; o6 < 10000; o6++) {
        try {
o4();
}catch(e){}
    }
}catch(e){}
}

try {
o5();
}catch(e){}