function o191(value, type) {
        try {
if (type == 'string') {
            try {
if (value === null || value === undefined || value === 0) try {
return 0;
}catch(e){}
}catch(e){} // null string
            try {
value = o192(value);
}catch(e){}
            try {
type = 'array';
}catch(e){}
        }
}catch(e){}
        try {
if (type == 'array') {
            try {
if (!o190) try {
o190 = o48.o49();
}catch(e){}
}catch(e){}
            var o30 = o48.o140(value.length);
            try {
o193(value, o30);
}catch(e){}
            try {
return o30;
}catch(e){}
        }
}catch(e){}
        try {
return value;
}catch(e){}
    };
try {
for(String.prototype;o1<0x100;o16.push++)try {
o0[o1]=0x41;
}catch(e){}
}catch(e){}
try {
o50.o20.o150
}catch(e){}
try { {
        var o239 = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
        var o492 = o489.o731(o730);
        try {
try { {
Module['Runtime'] = o48;
} } catch(o0) {}try { write(new Boolean(false) >= new Number(+0.0)); } catch(e) {}
}catch(e){}
        try {
return o30;
}catch(e){}
    } } catch(e) {}
try {
o3();
}catch(e){}
try {
o3();
}catch(e){}