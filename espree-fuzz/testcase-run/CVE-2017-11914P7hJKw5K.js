var o21 = {
                [Symbol.iterator]: function() {
                    try {
return {
                        o13: 0,
                        next: function () {
                            try {
return {
                                done: this.o13 == 5,
                                value: this.o13++
                            };
}catch(e){}
                        }
                    };
}catch(e){}
                }
            }

var o5 = [
        "Number.prototype", "Boolean.prototype", 'a', "Object.prototype", "Array.prototype", "Function.prototype",
    ], o158, o159, o160, o161, o162, o163, o164, o165, o166, o167, o168, o343 = 0;
try {
o0.__defineGetter__('length', function () {
    try {
o7 = this;
}catch(e){}  // g == "scriptFunction"
});
}catch(e){}


try {
o0.length;
}catch(e){}

try { {} } catch(e) {}  // type confusion