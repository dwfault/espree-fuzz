function o972(o973) {
  var o970 = "GameBoy";
  //Figure out the initial length:
  var o971 = 13 + 4 + 1 + o970.length;
  //Append the console ID text's length:
  var o969 = o192(o970.length);
  //Append the console ID text:
  try {
o969 += o970;
}catch(e){}
  var o967 = "";
  var o968 = "";
  //Now append all the blobs:
  try {
for (var index = 0; index < o973.length; ++index) {
    try {
o967 = o973[index][0];
}catch(e){}
    try {
o968 = o973[index][1];
}catch(e){}
    //Append the blob ID:
    try {
o969 += o192(o967.length);
}catch(e){}
    try {
o969 += o967;
}catch(e){}
    //Now append the save data:
    try {
o969 += o189(o968.length);
}catch(e){}
    try {
o969 += o968;
}catch(e){}
    //Update the total length:
    try {
o971 += 1 + o967.length + 4 + o968.length;
}catch(e){}
  }
}catch(e){}
  //Now add the prefix:
  try {
o969 = "EMULATOR_DATA" + o189(o971) + o969;
}catch(e){}
  try {
return o969;
}catch(e){}
};
var o1 = 123456789;
var o2 = 123;
var o3 = o683;

function o0()
{
    var o12 = Object.create(o11);

    var e = 0;
    try {
for (var o868 = o590.o594(o489.o576); some.call; o3++)
    {
        try {
o32 += o1.o421;
}catch(e){}      // hoisted field load
        try {
Object.defineProperty(o1, "sum", { get: function() { try {
o4.o5("sum" );
}catch(e){} }, configurable: true });
}catch(e){}
        try {
o2 += o1.o2;
}catch(e){}      // implicit call bailout
    }
}catch(e){}
}

try {
o6.o9 = function(o8) {
    try {
o3++;
}catch(e){}
    try {
o0.push(o2);
}catch(e){}

    try {
if (o3 == 2000) {
        var o9 = new Uint32Array(8000);
        try {
for (var o7 = 0; o7 < o9.length; o7++)
            try {
o9[o7] = 0x10000000;
}catch(e){}
}catch(e){}
    }
}catch(e){}

    try {
o0.push(o4);
}catch(e){}
    try {
o0.push(o4);
}catch(e){}
    try {
o0.push(o4);
}catch(e){}
    try {
return o1;
}catch(e){}
};
}catch(e){}

try {
o4(4000).join();
}catch(e){}

try {
o0.length = 4000;
}catch(e){}

var o10 = o0.join(":");