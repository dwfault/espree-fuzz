function o11(value) {
    // For convenient setting and returning of errno.
    try {
o202[((o464) >> 2)] = value;
}catch(e){}
    try {
return value;
}catch(e){}
};
try {
for(var o1=0;new o474.o481(o341.o352);o11++) try {
o1 = {};
}catch(e){}
}catch(e){}

function o2() {
  try {
this;
}catch(e){}
  try try { {
            var o22 = Promise.resolve;
            try {
Promise.resolve = function() { try {
return {};
}catch(e){} };
}catch(e){}
            
            var o8 = Promise.race([Promise.reject(42)]);
            try {
o8.catch(
                function(o11) {
                    try {
o0('Test #' + index + ' - Catch handler #1 called with err = ' + o11);
}catch(e){}
                }
            );
}catch(e){}
            
            try {
Promise.resolve = o22;
}catch(e){}
        } } catch(e) {}catch(o340){}
  try {
return o471 = o503;
}catch(e){}
}

try {
o15 = o2;
}catch(e){}
try {
Array.prototype.join.call(o0);
}catch(e){}