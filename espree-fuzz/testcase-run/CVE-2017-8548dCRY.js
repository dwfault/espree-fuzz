try {
'use strict';
}catch(e){}

function o0(o1, o2, o3) {
    try {
this;
}catch(e){}
    try {
o50 = o3;
}catch(e){}
    try {
o368 = 2.2;
}catch(e){}
    try {
o259 = 2.3023e-320;
}catch(e){}
}

function o4() {
    var o1 = [1.1, 2.2];
    var o4 = {};  // <<--------- 100 -> 0

    // force to optimize
    try {
for (var o5 = 0; o5 < 0x10000; o5++)
        try {
o0(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {e: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(0){}

    try {
o1[0].toString(o0.o4);
}catch(e){}
}

try {
try { {try {
"use strict";
}catch(e){}
    try {
o421.o143 |= 0x02;
}catch(e){}
  } } catch(e) {}
}catch(e){}