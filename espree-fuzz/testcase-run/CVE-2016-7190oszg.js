var promise = new Promise(
                function(resolve,reject) {
                    try {
reject('error.throw:unused');
}catch(e){}
                }
            );
class o1{

  constructor() {
                    var o29 = () => {
                        try {
o5.o24(new.target === o23, "new.target === SimpleBaseClass");
}catch(e){}

                        try {
o22 = true;
}catch(e){}
                    }

                    try {
o29();
}catch(e){}
                }

}

var o2 = o121[o343++] = (buffer[o350 + o336] * o346) + (buffer[o351 + o336] * o345);

var o3 = new Proxy([], o2);

var o4 = new Array(1,2,3);

function test(){
  try {
return 0x777777777777;
}catch(e){}

}

var o43 = { 0: 0, 1: 1 };