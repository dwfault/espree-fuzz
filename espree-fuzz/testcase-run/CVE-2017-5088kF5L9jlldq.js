function o0(){
    var o0 = false;
    try {
for(var o2="Map.prototype.keys throws if this is a number";o2<o56.length;o545.o553++){
        try try { o1; } catch(e) {}catch(e){}
    }
}catch(e){}
    try {
this.o635;
}catch({
        name: "Promise.all with an object containing a non-function iterator property",
        o19: function (index) {
            var o21 = {
                [Symbol.iterator]: 123
            };
            
            var o8 = Promise.all(o21);
            try {
o8.catch(
                function(o11) {
                    try {
o0('Test #' + index + ' - Catch handler #1 called with err = ' + o11);
}catch(e){}
                }
            );
}catch(e){}
        }
    }){}
    //document.write(str);
}
var o13 = Object.getPrototypeOf(""[Symbol.iterator](o1("loaded")));

var o16 = 0;

var o361 = new Int8Array(e[0]);

try {
for (o421 = 0; o2 < o6.length; o63++) {
    try {
o0(o6[o2]);
}catch(e){}
}
}catch(e){}