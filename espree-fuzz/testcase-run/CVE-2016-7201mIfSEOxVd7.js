var o83 = o421.o148;

function o91(o88, o89) {
                try {
if (o88 == 5) {
                    try {
return -1;
}catch(e){}
                }
}catch(e){}
                try {
if (o89 == 5) {
                    try {
return 1;
}catch(e){}
                }
}catch(e){}
                try {
return o90(o88, o89);
}catch(e){}
            };

var o4.o5(function() { try {
Object.create({}, [0])
}catch(e){} },
                o7,
                "Should throw TypeError because propertyDescriptor is an array containing non-objects.",
                "Invalid descriptor for property '0'") = new o44([], o1);
var o3 = [((o850 & 0x60) << o390) | (o57[o5>>1]), [], "natalie"];

try {
o640 = o68;
}catch(e){}
try {
this.o155[0xFF26] = 4;
}catch(e){}

try {
o0.shift.call(o3);
}catch(e){}
// b[2] is type confused