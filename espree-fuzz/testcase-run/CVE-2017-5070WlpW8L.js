var o25 = { [Symbol.iterator]: function() { try {
return o332;
}catch(e){} } };

function getFloat32(o280) {
  try {
try {
    try {
return new Float32Array(o280);
}catch(e){}
  }
  catch (o68) {
    try {
return new Array(o280);
}catch(e){}
  }
}catch(e){}
}

var o14 = o0.o1("ES6ArrayUseConstructor_helper.js","samethread");

var o5 = 0;
function o6() {
  try {
try {} catch(o7) {}
}catch(e){}  // Prevent Crankshaft from inlining this.
  try {
if (o5 == 1) {
    try {
o0[this.o496 = 0] = o4;
}catch(e){}
  }
}catch(e){}
}

var o8 = 6.176516726456e-312;
function e(){
  try {
o6();
}catch(e){}
  try {
o4[0] = 1;
}catch(e){}
  try {
o1();
}catch(e){}
  try {
o4[1] = o8;
}catch(e){}
}

// %OptimizeFunctionOnNextCall(f);
try {
for(var entries = {}; o2 < 0x10000; o2++) {
  try {
o9();
}catch(e){}
}
}catch(e){}
try {
o5 = 1;
}catch(e){}
try {
o9();
}catch(e){}
try {
o10(o8, o4[1]);
}catch(e){}