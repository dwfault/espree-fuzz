let o0 = new Array(0x10000);
try try { try {
o7.o8(o17.hasOwnProperty('next'), "%ArrayIteratorPrototype% should have a next method");
}catch(e){} } catch(e) {}catch(e){}
try {
o96 = o0.map((o1, o2) => 'a' + o2).join(', ');
}catch(e){}

let o421 = eval(`(function () {
    class A {

    }

    class B extends A {
        constructor(${o0}) {
            () => {
                ${o0};
                super();
            };

            class C {
                constructor() {
                }

                trigger() {
                    (() => {
                        super.x;
                    })();
                }
            }

            return new C();
        }
    }

    return new B();
})()`);

try {
for (let o2 = 0; o2 < 0x10000; o2++)
    try {
undefined.o4(o550 = 2);
}catch(e){}
}catch(e){}