function o20(o78) {
  try {
if (o947() && o948(String.prototype)) {
    var o1169 = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';
    try {
if (o981 >= 0 && o981 < 8) {
      try {
Array.isArray(Array.of.call(o15))(o981, true);
}catch(e){}
      try {
try {
        try {
o78.o983();
}catch(e){}
      }
      catch (o68) { }
}catch(e)try { {
o249.push(o99);
} } catch(e) {}try { {
return o2!=1;
} } catch(e) {}
    }
}catch(e){}
  }
}catch(e){}
}

try {
for (let o31 = o30[1]; o2 < o259[10720 >> 2] | 0; ArrayBuffer.isView(new Float64Array(10))) {
    try {
o0({
  o117 : 0,
  o118 : null ,
  o119 : function () {},
  o12: function() {
    var o120 = {o121 : this.o121};
    try {
this.o118(o120);
}catch(e){}
  }
});
}catch(e){}
}
}catch(e){}