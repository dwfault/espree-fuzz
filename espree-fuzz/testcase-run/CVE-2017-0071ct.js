try try { try {
write(o5.length);
}catch(e){} } catch(e) {}try { {
o247[o111 + 4 | 0] = o247[o308 + 4 | 0];
} } catch(e) {}catch(e){}

function o0(o1, o2, o3) {
    try {
o18++[0] = 1.2;
}catch(e){}
    try {
o70 = o3;
}catch(e){} // <<<<----------------------- (1)
    try {
o3.concat = 2.2;
}catch(e){}
    try {
this.o310[0] = 2.3023e-320;
}catch(e){}
}

function o4() {
    var o1 = o0.o4("");
    var o2 = new Uint32Array(100);

    // force to optimize
    try {
for (var o5 = 0; o5 < 0x10000; o5++)
        try {
o0(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){} // <<<<----------------------- (2)
        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}