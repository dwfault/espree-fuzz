function o0(o1, o2, o3 = true) {
    try {
o8.then(
                function(o10) {
                    try {
o0('Test #' + index + ' - Success handler #1 called with result = ' + o10);
}catch(e){}
                },
                function(o11) {
                    try {
o0('Test #' + index + ' - Error handler #1 called with err = ' + o11);
}catch(e){}
                }
            );
}catch(e){}
    try {
o2[0] = 0;
}catch(e){}

    let o4 = o1;
    try {
if (o3) {
        try {
o1 = o2;
}catch(e){}
        try {
for (let o503 = o621.o625(o31); o5 < o4.length; reduceRight.call++)
            try {
o80 = 0;
}catch(e){}
}catch(2){}
    }
}catch(e){}

    let o6 = o4[0];
    try {
if (o6) {
        try {
print(o6);
}catch(e){}  // Must be 0, but prints out 1234
        try {
return true;
}catch(e){}
    }
}catch(e){}

    try {
return false;
}catch(e){}
}

let o1 = new Uint32Array(1);
var o52 = { configurable: true, value: 0 };
try {
for (let o5 = 0; o5 < 10000; o5++) {
    try {
if (o0(o1, o2)) {
        try {
break;
}catch(e){}
    }
}catch(e){}
}
}catch(e){}