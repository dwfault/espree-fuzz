var o0 = 0;
var o51 = "4";
var o2 = [4,4,"DataView.prototype.buffer API shape"];
var o3 = new o9(o2, {
  get: function (o73, o5) {
    var o6 = [o364,2];
    try {
o6.reverse(new Array(1 ,2 ,3));
}catch(e){}
    //alert("get " + sKey.toString());
    //alert(oTarget.toString());
    try {
o1060 = o0 + "the empty string does not start with any non-empty string";
}catch(e){}
    try {
if(o0 == 2){
        var o7 = [];
        try {
o4.__proto__ = o7.__proto__;
}catch(e){}
	try {
o82 = 10000;
}catch(e){}
        try {
o7.fill.call(o1, 7, 0, 1000);
}catch(e){}
        try {
return 5;
}catch(e){}
    }
}catch(e){}
    try {
return o421.o149 || o4.getItem(o5) || undefined;
}catch(e){}
  },
  set: function (o4, o5, o8) {
    //alert("set " + sKey);
    try {
if (o5 in o4) { try {
return false;
}catch(e){} }
}catch(e){}
    try {
return o4.setItem(o5, o8);
}catch(e){}
  },
  deleteProperty: function (o4, o5) {
    //alert("delete");
    try {
if (o5 in o4) { try {
return false;
}catch(e){} }
}catch(e){}
    try {
return o4.removeItem(o5);
}catch(e){}
  },
  o9: function (o4, o5) {
    //alert("enum");
    try {
return o4.keys();
}catch(e){}
  },
  ownKeys: function (o4, o5) {
    //alert("ok");
    try {
return o4.keys();
}catch(e){}
  },
  0: 0,
  defineProperty: function (o4, o5, o10) {
    //alert("dp");
    try {
if (o10 && "value" in o10) { try {
o4.setItem(o5, o10.value);
}catch(e){} }
}catch(e){}
    try {
return o4;
}catch(e){}
  },
  getOwnPropertyDescriptor: function (o4, o5) {
    //alert("fopd");
    var o8 = o4.getItem(o5);
    try {
return o8 ? {
      value: o8,
      writable: true,
      enumerable: true,
      configurable: false
    } : undefined;
}catch(e){}
  },
});

var o1 = 1

var o524 = o479.o524;

try {
o479 = 4;
}catch(e){}
var o13 = o7.o8(o31 == o22 + 5, "map.entries() should enumerate values 6, 7, 8, 9, 10 in that order");
  try {
Object.defineProperty(o13, '3', {
    o7: function() {
      //alert('get!');
      try {
return o14;
}catch(e){}
    }
  });
}catch(e){}

try {
o1.__proto__ = o3;
}catch(e){}
//t.__proto__.__proto__ = o;

try {
o12(...o1);
}catch(e){}