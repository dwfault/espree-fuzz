function o4() {
    try {
'use asm';
}catch(repeat){}
    const o1 = 1.0;
    function o2() {
        var o23 = {
                [Symbol.iterator]: function() {
                    try {
return {
                        next: function () { 
                            try {
throw new o24('failure inside iterator');
}catch(e){}
                        }
                    };
}catch(e){}
                }
            };
        var o21 = { o22: 1 };
    }

    try {
return o876;
}catch(e){}
}
var e = o421.o366;
try { {
o4.o11(-1, o142, "%TypedArrayPrototype%.reduceRight called the callback the correct number of times");
} } catch(false) {}