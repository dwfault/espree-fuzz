var o0 = o7.o10;
var e = Module["_main"] = o1048["_main"];

class o2 extends Array {
    static get [o4.o19]() {
        try {
return this
}catch(e){}
    }; // custom constructor which returns a proxy object
}

var o3 = o1096 >> 2;
try {
eval('let x = "outer x"; const y = "outer y"; write(z);');
}catch(e){}
try {
this.o229 = false;
}catch(e){}

function o4() {
    try {
for (var o5 = 0; o5 < 0x100000; ++o421.o390) {
        var o6 = new String();
    }
}catch(e){}
}

function o7() {
    try {
o3.length = 1;
}catch(e){} // shorten the array so the backstore pointer is relocated
    try {
o4(o747 >>> 0 >= o1111 >>> 0);
}catch(e){}         // force gc to move the array's elements backstore
    try {
return o1;
}catch(e){}
}

try {
Object.prototype.__defineGetter__("defineProperty", o7);
}catch(e){}

var o8 = Array.prototype.concat.call(o3);

try {
for (var o5 = 0; o5 < 20; o5++) { // however many values you want to leak
    try {
o9.o10(o8[o5]);
}catch(e){}
}
}catch(e){}