var o1 = [];
try {
{}(o26).then(o10 => { 
                try {
o0(`Test #${index} - Success handler called with result = '${o10}' (length = ${o10.length}) (isArray = ${Array.isArray(o10)})`);
}catch(e){}
            }).catch = 0xffffff00;
}catch(e){}

var o1("responseEnd") = o0.splice(0, 0x100000); // Undecided array

var o2 = [];
try {
o2.length = 4094;
}catch(e){}
try {
o2.fill(o1);
}catch(e){}

var o3 = function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops

        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        try {
if (Module['stdin']) {
            try {
o474.o774('/dev', 'stdin', Module['stdin']);
}catch(e){}
        } else {
            try {
o474.o516('/dev/tty', '/dev/stdin');
}catch(e){}
        }
}catch(e){}
        try {
if (Module['stdout']) {
            try {
o474.o774('/dev', 'stdout', null, Module['stdout']);
}catch(e){}
        } else {
            try {
o474.o516('/dev/tty', '/dev/stdout');
}catch(e){}
        }
}catch(e){}
        try {
if (Module['stderr']) {
            try {
o474.o774('/dev', 'stderr', null, Module['stderr']);
}catch(e){}
        } else {
            try {
o474.o516('/dev/tty1', '/dev/stderr');
}catch(e){}
        }
}catch(e){}

        // open default streams for the stdin, stdout and stderr devices
        var o775 = o474.o41('/dev/stdin', 'r');
        try {
o202[((o658) >> 2)] = o474.o727(o775);
}catch(e){}
        try {
o73(o775.o716 === 0, 'invalid handle for stdin (' + o775.o716 + ')');
}catch(e){}

        var o776 = o474.o41('/dev/stdout', 'w');
        try {
o202[((o659) >> 2)] = o474.o727(o776);
}catch(e){}
        try {
o73(o776.o716 === 1, 'invalid handle for stdout (' + o776.o716 + ')');
}catch(e){}

        var o777 = o474.o41('/dev/stderr', 'w');
        try {
o202[((o660) >> 2)] = o474.o727(o777);
}catch(e){}
        try {
o73(o777.o716 === 2, 'invalid handle for stderr (' + o777.o716 + ')');
}catch(e){}
    };
try {
o604 = 0x1000;
}catch(e){}
try {
o31.fill(7);
}catch(e){}

var o4=new Array(10); //Shorter undecided array

try {
o2[4094] = o4;
}catch(e){}
try {
o2[4095] = o3;
}catch(e){}


try {
o1.concat.apply(o1, o2);
}catch(e){}