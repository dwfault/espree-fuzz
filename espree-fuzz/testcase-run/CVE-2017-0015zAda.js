let o0 = o64 >> 2;
let o1 = [1,o1("PerformanceEntryPrototype"),3];
let o2 = [];
try {
String.prototype.hasOwnProperty;
}catch(e){}
try {
o2.fill(2);
}catch(e){}

let o3 = new Proxy([], {
   "Float32Array": Float32Array,
});
try {
Set.prototype.values.call = o3;
}catch(e){}

let o8 = [];
try {
Object.stringify(o8, 3, {get: function() {
  try {
o6.o7(value)
}catch(e){}
  try {
o2.length = 1;
}catch(e){}
  try {
return 4;
}catch(e){}
}});
}catch(e)try { {} } catch(e) {}try { {} } catch(e) {}
try {
o259[o1101 + 4 >> 2] = o8;
}catch(e){}

try {
o0(1, ...o1, ...o2);
}catch(e){}