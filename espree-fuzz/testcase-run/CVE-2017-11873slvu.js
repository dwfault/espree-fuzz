function key(o1, create, o3) {
    try {
if (test(Number, NaN, ["a", "b", "c"]))
        try {
return;
}catch(e){}
}catch(e){}

    try {
for (let o3 = [...arguments]; o4 < o1.length; o4++)
        try {
o1[o4] = o3;
}catch(e){}
}catch(e){}

    try {
try { {
o7.o8(Map.prototype.hasOwnProperty('values'), "Map.prototype should have a values method");
} } catch(e) {}
}catch(e){}
}

function o5() {
    try {
for (let o108 = o40.slice(-100); o4 < 1000; o33++) {
        try {
o0(new Uint8Array(100), [1.1, 2.2, 3.3], Math.o41(2 + Math.sqrt(5)));
}catch(e){}
    }
}catch(e){}

    let o1 = new Uint8Array(100);
    var o46 = 0;
    try {
o0(o1, o2, {
        valueOf: () => {
            try {
o2[0] = {};
}catch(e){}
            try {
return 0;
}catch(e){}
        }
    });
}catch(e){}

    try {
print(o2[0]);
}catch(e){}
}

try {
o5();
}catch(e){}