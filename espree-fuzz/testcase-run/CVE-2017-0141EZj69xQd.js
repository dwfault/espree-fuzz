var o12 = Object.getOwnPropertyNames(o3);
try {
o474.o481 = o580 = parseInt(type.o101.substr(1)) * type.o10 / 2;
}catch(o421){}
let e = Array.prototype.slice;
try {
try { try {
o4.o5(Number.o6.length === 1, "isInteger method takes one argument");
}catch(e){} } catch(e) {}try { try {
o21(        5, Math.cbrt,       125, "cbrt(125) = 5");
}catch(e){} } catch(e) {}
}catch(e){}

try { try {
o73.constructor = Math.sin;
}catch(e){} } catch(e) {}
try {
this.o155[0xFF12].prototype.reverse.call(o0);
}catch(e){}
try {
Array.prototype.sort.call(o0);
}catch(e){}