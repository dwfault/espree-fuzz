var {
        name: "Change __proto__ to null/undefined",
        o16: function () {
            var o22 = {};

            // Set an object's prototype to undefined
            {
                var o22 = {};

                try {
o19.o20(o22.__proto__ === Object.prototype);
}catch(e){}
                try {
o19.o20(!o22.isPrototypeOf(o22));
}catch(e){}

                try {
o22.__proto__ = undefined;
}catch(e){}

                try {
o19.o20(o22.__proto__ === Object.prototype);
}catch(e){}
                try {
o19.o20(!o22.isPrototypeOf(o22));
}catch(e){}

                try {
o19.o29(function () { try {
Object.setPrototypeOf(o22, undefined);
}catch(e){} }, "Object.setPrototypeOf");
}catch(e){}
            }

            // Set an object's prototype to null
            function o30(o31, o32) { try {
o31.__proto__ = o32;
}catch(e){} }
            function o33(o31, o32) { try {
Object.setPrototypeOf(o31, o32);
}catch(e){} }
            try {
[o30, o33].forEach(function (o34) {
                var o22 = {};

                try {
o19.o20(o22.__proto__ === Object.prototype);
}catch(e){}
                try {
o19.o20(!o22.isPrototypeOf(o22));
}catch(e){}

                try {
o34(o22, null);
}catch(e){}
                try {
o19.o20(Object.getPrototypeOf(o22) === null);
}catch(e){}
                try {
o19.o20(o22.__proto__ === undefined, "lost Object.prototype __proto__ getter");
}catch(e){}
                try {
o19.o20(o22.isPrototypeOf === undefined, "lost Object.prototype methods");
}catch(e){}
            });
}catch(e){}

            // side test -- try to change null/undefined's __proto__ should throw
            var o35 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set;
            try {
[null, undefined].forEach(function (o21) {
                try {
o19.o36(function () {
                    try {
o35.apply(o21, [{}]);
}catch(e){}
                });
}catch(e){}
                try {
o19.o37(function () {
                    try {
Object.setPrototypeOf(o21, {});
}catch(e){}
                });
}catch(e){}
            });
}catch(e){}
        }
    } = o30.o31 !== undefined ? o30.Array.prototype : o30

try {
o0(this);
}catch(e){}