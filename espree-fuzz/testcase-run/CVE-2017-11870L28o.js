function o0(o1) {
    try {
arguments;
}catch(e){}

    {
        function o1()
{
    // injected bailout point #1 
    try {
return 3;
}catch(e){}
}
    }
}

try {
for (let o24 = function(o8, o27) {
                try {
return o8 + o27;
}catch(e){}
            }; o2 < 10000; o57[o51]++)
    try try { o7.o9({ done: true, value: undefined }, o25.next(), "set entries iterator is initially complete for empty sets (cleared)"); } catch(e) {}try { {} } catch(e) {}catch(e){}
}catch(e){}