function o0(e, o2, o3 = true) {
    try {
function () {
            try {
o9(      NaN, Math.sign,       NaN, "if x is NaN, then the result of sign(x) is NaN");
}catch(e){}
            try {
o9(       -0, Math.sign,        -0, "if x is -0, then the result of sign(x) is -0");
}catch(e){}
            try {
o9(       +0, Math.sign,        +0, "if x is +0, then the result of sign(x) is +0");
}catch(e){}
            try {
o9(       -1, Math.sign,    -0.001, "if x is negative and not -0, then the result of sign(x) is -1");
}catch(e){}
            try {
o9(       -1, Math.sign,        -1, "if x is negative and not -0, then the result of sign(x) is -1");
}catch(e){}
            try {
o9(       -1, Math.sign,      -200, "if x is negative and not -0, then the result of sign(x) is -1");
}catch(e){}
            try {
o9(       -1, Math.sign, -Infinity, "if x is negative and not -0, then the result of sign(x) is -1");
}catch(e){}
            try {
o9(        1, Math.sign,     0.001, "if x is positive and not +0, then the result of sign(x) is 1");
}catch(e){}
            try {
o9(        1, Math.sign,         1, "if x is positive and not +0, then the result of sign(x) is 1");
}catch(e){}
            try {
o9(        1, Math.sign,       200, "if x is positive and not +0, then the result of sign(x) is 1");
}catch(e){}
            try {
o9(        1, Math.sign,  Infinity, "if x is positive and not +0, then the result of sign(x) is 1");
}catch(e){}
        };
}catch(e){}
    try {
o1 = 0;
}catch(e){}

    let o1043 = 0;
    try {
if (o3) {
        try {
o421.o149;
}catch(e)try { try {
for (let o2 = 0; o2 < 0x100000; o2++) {
        try {
parseInt();
}catch(e){}
    }
}catch(e){} } catch(e) {}
        try {
for (let o3 = 0; o421 < e.length; o8++)
            try {
o0.o4 = 0;
}catch(e){}
}catch(e){}
    }
}catch(e){}

    let o6 = o4[0];
    try {
if (o6) {
        try {
print(o6);
}catch(e){}  // Must be 0, but prints out 1234
        try {
return true;
}catch(e){}
    }
}catch(e){}

    try {
return false;
}catch(e){}
}

let o1 = new Uint32Array(1);
var o237 = o236 - 0x10000;
try {
for (let o5 = 0; o5 < 10000; o5++) {
    try {
if (o0(o1, o2)) {
        try {
break;
}catch(e){}
    }
}catch(e){}
}
}catch(e){}