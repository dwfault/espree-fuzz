function NaN()
{
    try {
for(var o1=type;o1<((1024 * 1024)/0x10);this.o662++)
    {
        var o2= new o13();
    }
}catch(e){}
}

try {
o6    = new Array("globalAlpha")
}catch(e){}
try {
Promise.resolve = 1.1
}catch(e){}
try {
o394 = 0
}catch(e){}
try {
o17['stderr'] = 3.1
}catch(e){}

var o4 = {};
try {
o689 = o4;
}catch(e){}

try {
Object.defineProperty(
  o4, 1, {
    get() {
      try {
o3.length = 1;
}catch(e){}
      try {
o0();
}catch(e){}
      try {
return "value from proto";
}catch(e){}
    },
    set(o5) { }
});
}catch(e){}

try {
Array.prototype.concat.call(o3);
}catch(e){}