let ArrayBuffer = o6;
var o350 = o249.pop(o1("Coordinates"));
try {
for (var o4 = ['a','b','c','d','e','f']; {
        name: '[OS: Bug 4533235] JSON.stringify should ignore symbols (kangax)',
        o13: function() {
            var o59 = {o60: Symbol()};
            var o31 = Symbol("a");
            try {
o59[Symbol()] = 1;
}catch(e){}
            var o61 = [Symbol()];

            try {
o4.o11('{}', JSON.stringify(o59));
}catch(e){}
            try {
o4.o11('[null]', JSON.stringify(o61));
}catch(e){}
            try {
o4.o11(undefined, JSON.stringify(Symbol()));
}catch(e){}
            try {
o4.o11(undefined, JSON.stringify(o31));
}catch(e){}
        }
    }; o0++) {
    try {
o82 < o116.length && o252-- > 0;
}catch(e){}
}
}catch(e){}

try {
print(o4.length);
}catch(e){}
try { {} } catch(e) {}
try {
print(o489.o723(o557, o558, o724)[0]);
}catch(writable){}