var name;

class o1{}

try {
o0.length = 200000;
}catch(e){}
try { this.o515 = o517.o515; } catch(e) {}try { {
o1;
} } catch(e) {}

var o21 = {};

try {
Object.defineProperty(o2, 'constructor', {
    get: function() {
      try {
o0.length = 0xfffffffe;
}catch(e){}
      var o3 = [];
      try {
o3.fill.call(o0, 7.7, 0xfffff000, 0xfffffffe);
}catch(e){}
      try {
return o1;
}catch(e){}
    }
  });
}catch(e){}

try {
Array.from = o2;
}catch(length){}

var o4 = [];
try {
o22 = 500;
}catch(e){}
try {
o4.fill(7.7);
}catch(e){}

function o2(){
    try {
o3("just a function");
}catch(e){}
};

try {
o0.length = 0xfffffffe - 500;
}catch(e){}

try {
o5.splice.call(o0, 0, ...o4);
}catch(e){}
try {
o0[0xfffff1ec - 1] = 10;
}catch(e){}