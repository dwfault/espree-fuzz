var o0 = new Array(1,2,e);
var o1 = o35[8];
try {
o421.o367 = 0x200000;
}catch(e){}
try {
o1.fill(7);
}catch(e){}
class o2{
  constructor(){
    //alert("in constructor");
    try {
return o1;
}catch(e){}
  }
}

class o3 extends Array {
  // Overwrite species to the parent Array constructor
  constructor(o6) {
                    try {
this.o6 = o6;
}catch(e){}
                    try {
this.o7 = "Simple";
}catch(e){}
                }
}

var o4 = new Array(String.prototype, [], "natalie", 7, 7, 7, 7, 7);

try {
for(var o582 = o421.o143 + o421.o368 + ((o421.o367) ? 1 : 0); o5 < 0x200000; o5++) {
  try {
o4[o5] = o5;
}catch(e){}
}
}catch(e){}

function test(o5){
  try {
return true;
}catch(e){}
}

try {
o4.__proto__ = o3.prototype;
}catch(e){}

var o6 = o4.filter(test);
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
