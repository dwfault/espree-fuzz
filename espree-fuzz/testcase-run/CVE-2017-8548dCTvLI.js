try {
'use strict';
}catch(e){}

var e = 0

function o4() {
    var o1 = [1.1, 2.2];
    var o718 = 1;  // <<--------- 100 -> 0

    // force to optimize
    try {
for (var o1 = o0.then((o2) => { try {
return o2 + 1;
}catch(e){} }); o5 < 0x10000; o259[o1096 >> 2])
        try {
o0(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(e)try { {} } catch(e) {}try { {
o4.o7.o8.grow(1);
} } catch(e) {}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}