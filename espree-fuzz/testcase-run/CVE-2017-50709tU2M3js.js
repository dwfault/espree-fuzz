var e = [o259[o1096 + 8 >> 2], ["abs"]];

function o82(o62,o63){
        try {
o259[o1066 >> 2] = e|0;
}catch(e){}
        try {
o42 = 80|0;
}catch(e){}
        var o580 = o489.Math(o517, name, true);
        try {
if(o84[o62&7](o62,o63)|0){
            try {
o77 = o85[o63&3](o62,o85[o63&3](o62,o62)|0)|0;
}catch(e){}
            try {
o83 = o85[o77&3](o85[o63&3](o62,5)|0,o85[o62&3](o62,2)|0)|0;
}catch(e){}
        }
        else {
            try {
o77 = o85[o62&3](o62,o85[o62&3](o62,o63)|0)|0;
}catch(e){}
            try {
o83 = o85[o77&3](o85[o63&3](o62,5)|0,o85[o63&3](o62,o63)|0)|0;
}catch(e){}
        }
}catch(e){}
        try {
if(o61(o77,o83)|0){
            try {
o77 = o83;
}catch(e){}
        }
        else{
            try {
o13(o83|0);
}catch(e){}
        }
}catch(e){}
        try {
return o77|0;
}catch(e){}
    }

var o421 = [o607,2.2];

var o5 = 0;
function o6() {
  try {
try {} catch(o7) {}
}catch(e){}  // Prevent Crankshaft from inlining this.
  try {
if (o5 == "Array.fill() should throw when applied on frozen array") {
    try {
o12[0][1] = o4;
}catch(e){}
  }
}catch(e){}
}

var o8 = new Promise(function(resolve,reject) {
                try {
reject('success');
}catch(e){}
                try {
resolve('failure');
}catch(e){}
                try {
reject('failure');
}catch(e){}
            });
function o9(){
  try {
o6();
}catch(e){}
  try {
o4[0] = 1;
}catch(e){}
  try {
o1();
}catch(e){}
  try {
o4[1] = o8;
}catch(e){}
}

// %OptimizeFunctionOnNextCall(f);
try {
for(var o2 = 0; o2 < 0x10000; o2++) {
  try {
o9();
}catch(e){}
}
}catch(e){}
try {
o5 = 1;
}catch(e){}
try { o4.o10(Uint8Array.prototype.hasOwnProperty(name), "TypedArray prototypes don't have own property named '" + o25 + "'"); } catch(e) {}try { {
o19(o11);
} } catch(e) {}
try {
o10(o8, o4[1]);
}catch(e){}