var {
        name: "__defineGetter__ defines an accessor property with getter as specified and enumerable and configurable set to true",
        o5: function () {
            var o6 = { };
            var o7 = o6.__defineGetter__("a", function () { try {
return 1234;
}catch(e){} });

            try {
o8.o9(o7 === undefined, "__defineGetter__ should return undefined");
}catch(e){}
            try {
o8.o9(o6.o10 === 1234, "Getter should call the given function and return its value");
}catch(e){}

            var o11 = Object.getOwnPropertyDescriptor(o6, "a");

            try {
o8.o9(o11.enumerable, "Getter accessor property should be enumerable");
}catch(e){}
            try {
o8.o9(o11.configurable, "Getter accessor property should be configurable");
}catch(e){}
        }
    } = [];
var e = o0.o45("var f =(function() { return ()=>eval('new.target;') })(); f();", "samethread");
var o2 = 0;
try {
o1("startTime")(0, function() {
  try {
if (o2++ > 2) try {
return;
}catch(e){}
}catch(e){}
  try {
o0.shift();
}catch(e){}
  try {
o3();
}catch(e){}
  try {
o0.push(0);
}catch(e){}
  try {
o0.concat(o1);
}catch(e){}
});
}catch(e){}
try {
o1[0];
}catch(e){}