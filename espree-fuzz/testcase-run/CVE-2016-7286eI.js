var {
      name: "8.12.9.9.c (variation 2): re-define property: convert from accessor to data descriptor, check that enumerable (false) is preserved",
      o25: function () {
        var o10 = o0.o4();
        var o51 = "foo17";
        var o52 = {
          set: function (o72) { try {
o0.writeln("setter was called");
}catch(e){} try {
this.o56 = o72;
}catch(e){} },
          configurable: true,
          enumerable: false
        };
        try {
Object.defineProperty(o10, o51, o52);
}catch(e){}
        try {
o52 = { value: 1 };
}catch(e){}
        try {
Object.defineProperty(o10, o51, o52);
}catch(e){}
        var o35 = { writable: false, value: 1, configurable: true, enumerable: false };
        try {
o32.o42(o35, Object.getOwnPropertyDescriptor(o10, o51), "wrong value of getOwnPropertyDescriptor");
}catch(e){}
      }
    } = SIMD.Int32x4(1, 2, 3, 4);
try {
o0.toLocaleString(1, 2, 3, 4)
}catch(o768 | 5){}