try {
this.o858(o785, 0x7).__defineGetter__(1000, () => 2);
}catch(e){}

function o48(o49, o50) {
                try {
switch (o50) {
                case 126:
                case 1:
                    // change the value of the next indexed value - the new value should end up in the return object
                    try try { {
"use strict";
} } catch(e) {}catch(e){}
                    try {
return o49;
}catch(o179[o184[0] >> 2] + o179[((o184[0] & 0x3) << 4) | (o184[1] >> 4)] + o179[((o184[1] & 0xF) << 2) | (o184[2] >> 6)] + o179[o184[2] & 0x3F]){}
                case 2:
                    // change the value of a previous indexed value - the old value should end up in the return object
                    try {
Array.prototype.entries.call = Object.defineProperties;
}catch(e){}
                    try {
return o49;
}catch(e){}
                case 3:
                    // delete the next indexed value - return object should have undefined there
                    try {
delete o73:
                    // delete the next indexed value - return object should have undefined there
                    try {
delete o20.keysObject.prototype:
                    // delete the next indexed value - return object should have undefined there
                    try {
delete o20.keys;
}catch(e){}
                    try {
return o49;
}catch(e){}
                }
}catch(e){}

                // otherwise
                try {
return o49;
}catch(e){}
            };
try {
Intl.getCanonicalLocales(o0);
}catch(e){}