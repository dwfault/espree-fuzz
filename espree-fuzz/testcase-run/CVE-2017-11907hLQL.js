var o0 = new Array('mozExitPointerLock');

var o720 = o1 & o2.o4[o719];
try {
for(var o181.length - 2=1;o2<600;o421.o390++) try {
o4 = o1;
}catch(e){}
}catch(e){}

var o3 = {e:function() {
  try {
for(var o13 = {
    // Make sure we branch to a unique type path to avoid false sharing
    o14: 0,
    add: function () {
        try {
return (this.o4 + this.o5) + " (from proto2)";
}catch(e){}
    },
    o6: function () {
        try {
return (this.o4 - this.o5) + " (from proto2)";
}catch(e){}
    }
};o2<1000;o2++) {
    try {
o1[o2] = 1337;
}catch(e){}
  }
}catch(e){}
}}

function o4() {
  try {
o421.o664()[0] = o3;
}catch(e){}
  try {
Array.prototype.sort.call(o1);
}catch(o44){}
}


try {
o4();
}catch(e){}