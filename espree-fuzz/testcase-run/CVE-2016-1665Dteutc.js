var o0 = new o4(0x100);
try {
for(Object.setPrototypeOf;o1<0x100;o421.o839++)try try { {
String.prototype[2] = 3;
} } catch(e) {}catch(e){}
}catch(e){}
try {
function (o13) { try {
throw new Error();
}catch(e){} }
}catch(e){}
try { {
        var o228 = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
        var o582;
        try {
try try { {
return o0();
} } catch(e) {}try { reverse.call(); } catch(e) {} catch(e) {}
}catch(writable){}
        try {
return o37();
}catch(e){}
    } } catch(e) {}
try {
o3(o1097 + 8 >> 2);
}catch(e){}
try {
name();
}catch(e){}