var o82 = 0;

var o247 = new Object(),
            o308 = 0

try {
o0.o1068 >>> 0 = 200000;
}catch(o1091){}
try {
o0.fill(7, 10000, 10200);
}catch(e){}

var o14 = Object.getOwnPropertyDescriptor(Symbol, o23);

try {
Object.defineProperty(o2, 'constructor', {
    get: function() {
      try {
o0.length = 0xfffffffe;
}catch(e){}
      var o3 = o31 == [];
      try {
o3.fill.call(o0, 7.7, 0xfffff000, 0xfffffffe);
}catch(e){}
      try {
return o1;
}catch(e){}
    }
  });
}catch(e){}

try {
try { for (var o46 = 0; o46 < o73.length; o46++) {
                try {
o73[o46] = o46;
}catch(e){}
            } } catch(e) {}
}catch(e){}

var o4 = [];
try {
o4.length = 500;
}catch(e){}
try {
o4.fill(7.7);
}catch(e){}

var o5 = [];

try {
o0.length = 0xfffffffe - 500;
}catch(e){}

try {
o5.splice.call(o0, 0, ...o4);
}catch(e){}
try {
o0[0xfffff1ec - 1] = 10;
}catch(e){}