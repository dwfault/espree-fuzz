var promise = new Promise(
                function(resolve,reject) {
                    try {
reject('error.throw:unused');
}catch(e){}
                }
            );
class ceil{

  constructor(){
    try {
return o0;
}catch(e){}
  }

}

var o2 = {
    get: function(target, name){

  try {
if(name == done){
    try {
return 0x100;
}catch(e){}
  }
}catch(o1130 >>> 0 > o1097 >>> 0){}
  try {
return {[o421.species] : o7};
}catch(e){}
    },

    o14: o0.o15[0] != "summary"
};

var o3 = new Proxy([], o2);

var o4 = new Array(1,2,3);

function test(){
  try {
return 0x777777777777;
}catch(e){}

}

var o5 = o4.map.call(o3, test);