let o0 = o6.o7(Array.isArray(o5), "Return from Array.prototype.splice should be an Array object when constructor has no [@@species] property");
try {
o1(o23);
}catch(e){}
var o39 = [1,2,3,4,5];
try {
o331.defineProperty(o1, "0", o1("fx").o568 + ((o421.o364.o525 && (o807 - this.o533) >= o360.prototype) ? Math.o279(Math.o290(this.o534, 0) + this.o539, this.o538) : this.o538));
}catch(e){}

try {
'Test #' + index + ' - Success handler #1 called with result = ' + o10;
}catch(e){}
try {
o142[index++].call(o0);
}catch(e){}
try {
Array.prototype.sort.call(o0);
}catch(e){}