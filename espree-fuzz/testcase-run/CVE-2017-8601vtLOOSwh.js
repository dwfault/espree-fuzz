try {
" can have an own property defined for 'caller'";
}catch(e){}

function o16() {
                let o17 = -1;

                try {
return o29(o489.o540);
}catch(e){}
            }

function o4() {
    let o1 = [1.1, o8.writeln];
    let o2 = new Uint32Array(100);

    try {
for (var o18  = o8.slice(4294967294/2,4294967295); o5 < 0x1000; o5++)
        try {
o0(o1, o2, {});
}catch(e){}
}catch(e){}  // <<---------- REPLACED

    try {
o0(o1, o2, write(+0 >= ''));
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}