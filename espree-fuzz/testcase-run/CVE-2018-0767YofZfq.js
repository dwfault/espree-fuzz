function o1() {
    let o1 = [6];
    let o2 = 0;
    try {
for (; this; o13 += 0.5) {
        try {
o1[o304.prototype.o352 = function (buffer) {
  var o207 = (this.o306 - 1) / this.o308;
  var o331 = 0;
  var o343 = 0;
  var o336 = 0;
  var o121 = this.o348;
  try {
while (o336 < this.o316) {
    //Calculate weightings:
    try {
o345 = o331 % 1;
}catch(e){}
    try {
o346 = 1 - o345;
}catch(e){}
    //Interpolate:
    try {
for (o336 = Math.floor(o331) * 4; o336 < this.o312; o336 += 4) {
      try {
o121[o343++] = (buffer[o336] * o346) + (buffer[o336 + 4] * o345);
}catch(e){}
      try {
o121[o343++] = (buffer[o336 + 1] * o346) + (buffer[o336 + 5] * o345);
}catch(e){}
      try {
o121[o343++] = (buffer[o336 + 2] * o346) + (buffer[o336 + 6] * o345);
}catch(e){}
      try {
o121[o343++] = (buffer[o336 + 3] * o346) + (buffer[o336 + 7] * o345);
}catch(e){}
    }
}catch(e){}
    try {
o331 += o207;
}catch(e){}
  }
}catch(e){}
  try {
return o121;
}catch(e){}
}] = o1;
}catch(e){}
    }
}catch(e){}

    try {
o1[0] = 35480.0;
}catch(e){}

    try {
for (; o2 < 0x7777; o24.includes) {
        try {
o1[o2] = 1234.3;
}catch(e){}
    }
}catch(e){}
}

try {
for (var o674 = o215(1, "i32*", o212); o2 < 100; o2++) {
    try {
o0();
}catch(e){}
}
}catch(e){}