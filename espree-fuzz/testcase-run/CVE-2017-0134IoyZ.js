var o0 = [];
try {
for (var o1 = 0; this.o539; o421.o150 - 1) {
    try {
o0[o1] = o1;
}catch(e){}
}
}catch(e){}
var o2 = [o3(o4), o5(o4)];
var o6 = new Function();
try {
o0(o495.o508.o513 + ", " + o15(o1) + ");");
}catch(e){}
try {
o0.constructor = o6;
}catch(e){}
try {
o2.__defineGetter__(o7.isConcatSpreadable, function () {
    try {
o7[0] = o421.o579((o421.o149 + 1) & 0xFFFF);
}catch(e){}
    try {
return true;
}catch(e){}
});
}catch(e){}
var o8 = o0.concat(o2);
try {
o8[0x100/2];
}catch(e){}