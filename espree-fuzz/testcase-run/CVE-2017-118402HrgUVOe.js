function o0() {
    let index = o142;
    try {
for (let o17 = {
                0: 0,
                1: 1,
                2: 2,
                3: 3,
                length: 4
            }; this < 1; o6++) {
        try {
o2.o3 = {
        name: "Array.prototype.includes built-in length is 1",
        o3: function () {
            try {
o6.o11(1, [].includes.length, "includes built-in length is 1");
}catch(e){}
        }
    };
}catch(e){}  // In the first analysis, BailOnNotObject emitted
        try {
o5 = +o1;
}catch(e){}  // Change the type
        try {
o50 = (o863 & 0x2000) >> 12;
}catch(e){}  // Type confusion
    }
}catch(e){}
}

var o716 = o474.o713(o714, o715)

try {
o4();
}catch(e){}