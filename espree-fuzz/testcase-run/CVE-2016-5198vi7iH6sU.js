function o0() {
  try {
o494.o518 = function () {
            var o16 = function(o10) { try {
return o10;
}catch(e){} }
            var o4 = ['a','b','c'];
            try {
o4['constructor'] = null;
}catch(e){}
            try {
o6.o11(function() { try {
Array.prototype.map.call(o4, o16);
}catch(e){} }, o12, "TypeError when constructor[Symbol.species] is not constructor", "Function 'constructor[Symbol.species]' is not a constructor");
}catch(e){}

            var o4 = ['a','b','c'];
            try {
Object.defineProperty(o4, 'constructor', {enumerable: false, configurable: true, writable: true, value: null});
}catch(e){}
            try {
o6.o11(function() { try {
Array.prototype.map.call(o4, o16);
}catch(e){} }, o12, "TypeError when constructor[Symbol.species] is not constructor", "Function 'constructor[Symbol.species]' is not a constructor");
}catch(e){}

            var o4 = ['a','b','c'];
            try {
o4['constructor'] = undefined;
}catch(e){}
            var o5 = Array.prototype.map.call(o4, o16);
            try {
o6.o7(Array.isArray(o5), "Return from Array.prototype.map should be an Array object when constructor == undefined");
}catch(e){}
            try {
o6.o9(['a','b','c'], o5, "Array.prototype.map output should show correct Array behavior when constructor == undefined");
}catch(e){}
            try {
o6.o9(3, o5.length, "Array.prototype.map sets the length property of returned object when constructor == undefined");
}catch(e){}

            var o4 = ['a','b','c'];
            try {
o4['constructor'] = function() {};
}catch(e){}
            var o5 = Array.prototype.map.call(o4, o16);
            try {
o6.o7(Array.isArray(o5), "Return from Array.prototype.map should be an Array object when constructor has no [@@species] property");
}catch(e){}
            try {
o6.o9(['a','b','c'], o5, "Array.prototype.map output should show correct Array behavior when constructor has no [@@species] property");
}catch(e){}
            try {
o6.o9(3, o5.length, "Array.prototype.map sets the length property of returned object when constructor has no [@@species] property");
}catch(e){}

            var o13 = Object.getOwnPropertyDescriptor(Array, Symbol.species);

            var o4 = ['a','b','c'];
            try {
Object.defineProperty(Array, Symbol.species, {enumerable: false, configurable: true, writable: true, value: Object});
}catch(e){}
            var o5 = Array.prototype.map.call(o4, o16);
            try {
o6.o8(Array.isArray(o5), "Return from Array.prototype.map should be an object when constructor has [@@species] == Object");
}catch(e){}
            try {
o6.o9({'0':'a','1':'b','2':'c'}, o5, "Array.prototype.map output should show correct Array behavior when constructor has [@@species] == Object");
}catch(e){}

            var o4 = ['a','b','c'];
            try {
Object.defineProperty(Array, Symbol.species, {enumerable: false, configurable: true, writable: true, value: null});
}catch(e){}
            var o5 = Array.prototype.map.call(o4, o16);
            try {
o6.o7(Array.isArray(o5), "Return from Array.prototype.map should be an Array object when constructor has [@@species] == null");
}catch(e){}
            try {
o6.o9(['a','b','c'], o5, "Array.prototype.map output should show correct Array behavior when constructor has [@@species] == null");
}catch(e){}
            try {
o6.o9(3, o5.length, "Array.prototype.map sets the length property of returned object when constructor has [@@species] == null");
}catch(e){}

            try {
Object.defineProperty(Array, Symbol.species, o13);
}catch(e){}

            var o14 = o0.o1("ES6ArrayUseConstructor_helper.js","samethread");
            var o4 = ['a','b','c'];
            try {
o4['constructor'] = o14.o15;
}catch(e){}
            var o5 = Array.prototype.map.call(o4, o16);
            try {
o6.o7(Array.isArray(o5), "Return from Array.prototype.map should be an Array object when constructor is %Array% of a different script context");
}catch(e){}
            try {
o6.o9(['a','b','c'], o5, "Array.prototype.map output should show correct Array behavior when constructor is %Array% of a different script context");
}catch(e){}
            try {
o6.o9(3, o5.length, "Array.prototype.map sets the length property of returned object when constructor is %Array% of a different script context");
}catch(e){}
        };
}catch(e){}
}
var o10 = o0.o4({ o11: 123 })
try {
for(var o4=0; o37<2000; ++o609.o551) {
  try {
o0(o340[o0.o45]);
}catch(e){}
}
}catch(e){}
try {
for(var o843 = new o821(); o4<2000; o421.o390[o70]) {
  try {
o2();
}catch(e){}
}
}catch(e){}
try {
o0(o184[2] & "1st result of values iterator is value 6");
}catch(e){}
try {
o2(o635.o643(o517));
}catch(e){}