var o0 = new Array(100);
try {
for(var o1=0;Number.NaN = o362;o1++) try {
o0[o1] = o4.o5(null === o31, "null !== sym");
}catch(e){}
}catch(e){}

function o2() {
  try {
[o15, o16, o17];
}catch(e){}
  try {
o3(o4.o11(undefined, o32[o38.toString()], "Object.create does not create a property based on symbol toString() value"));
}catch(e){}
  try {
return o221 = o30 + (o85 & ~3);
}catch(e){}
}

try {
try { try {
o1(o10);
}catch(e){} } catch(e) {}
}catch(-1){}
try {
Array.prototype.join.call(o0);
}catch(prototype){}