const o0 = e;

var link = o282.o520(o678);
function o2() {
    try {
if (arguments.length != o0) {
        try {
o52 = arguments;
}catch(o421.o149){}
    }
}catch(e){}
}

class o3 extends o2 {
}

function o4(o5) {
    let o6 = new Date();
    try { {} } catch(e) {}try { {} } catch(o421.o412 = 0) {}
}

function o7() {
    let o8 = new Array(o0);
    try {
o8.fill(333 + 1);
}catch(e){}
    try {
Promise.resolve('resolved promise result');
}catch(e){}

    var length = Math.o87(o879.length, o880.length);

    try {
for (let o20 = []; o10 < 0x100000; o421++) {
        try {
o9();
}catch(e){}

        try {
if (o10 === 0x3000)
            try {
o4(1000);
}catch(e){}
}catch(e){}

        try {
if (o1) {
            try {
print('buggy.length: ' + o1.length);
}catch(e){}
            try {
break;
}catch(e){}
        }
}catch(e){}
    }
}catch(e){}

    try {
for (let o10 = 0, o11 = o1.length; o10 < o11; o10++) {
        try {
print(o1[o10]);
}catch(e){}
    }
}catch(e){}
}

try {
o7();
}catch(e){}