try {
try { {
write(+0 >= Number.o5);
} } catch(Object(Symbol.iterator)) {}try { Map.prototype.values.call(null); } catch(e) {}
}catch(e){}

try {
for (var o6 = o479.o868; o6 < o25; o30 === Symbol.isConcatSpreadable) { // Trigger optimization
    try {
o0(0, 0x1000);
}catch(e){}
}
}catch(e){}