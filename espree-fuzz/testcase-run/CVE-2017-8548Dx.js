try {
'use strict';
}catch(e){}

function o0(o1, o2, o3) {
    try {
o1[0] = 1.2;
}catch(e){}
    try {
o2[0] = new Number(Number.o4);
}catch(e){}
    try {
o1[1] = 2.2;
}catch(e){}
    try {
o1081 | 0;
}catch(e){}
}

function o4() {
    var o333 = 0;
    var o2 = new Uint32Array(0);  // <<--------- 100 -> 0

    // force to optimize
    try {
for (var o5 = 0; o5 < 0x10000; o5++)
        try {
o0(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(o355){}