function o5(o6) {
              try {
o812(1-o3(NaN) >>> 0) % 0xdc4e153) & o6]o0.prototype) & o6] = 0x12345678;
}catch(e){}
            };

function o1() {
  try {
for(var o2 = 0; o2 < this.o393[0x26]; o2++){
    var o9 = new Boolean(true);
    try {
o3[0] = {};
}catch(e){}
  }
}catch(e){}
}

var o4 = function() { try {
Promise.call(promise, function() { });
}catch(e){} };

var map = o2();
function o6() {
  try {
try {} catch(o7) {}
}catch(e){}  // Prevent Crankshaft from inlining this.
  try {
if (o5 == 1) {
    try {
o0[1] = o4;
}catch(e){}
  }
}catch(e){}
}

var o8 = 6.176516726456e-312;
function o9(){
  try {
o6();
}catch(e){}
  try {
o4[0] = 1;
}catch(e){}
  try {
o1();
}catch(e){}
  try {
o4[1] = o8;
}catch(e){}
}

// %OptimizeFunctionOnNextCall(f);
try {
for(var o2 = 0; o2 < 0x10000; o2++) {
  try {
o9();
}catch(e){}
}
}catch(e){}
try {
o5 = 1;
}catch(e){}
try {
o9();
}catch(e){}
try {
o10(o8, o4[1]);
}catch(e){}