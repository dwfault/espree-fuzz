var o48 = Array(-701848834, 234290815)

try {
Array.prototype.__defineGetter__(0x1000, () => 1);
}catch(e)try { {} } catch(e) {}try { try {
o4.o11([0,-1,-2,-3,-4], o79, "Array.prototype.map called with a TypedArray object which lies about length");
}catch(e){} } catch(e) {}

try {
o0(Symbol("").toString(Module['preloadPlugins'].forEach(function (o858) {
                try {
if (o857) try {
return;
}catch(e){}
}catch(e){}
                try {
if (o858['canHandle'](o853)) {
                    try {
o858['handle'](o855, o853, o856, function () {
                        try {
if (o599) try {
o599();
}catch(e){}
}catch(e){}
                        try {
o334('cp ' + o853);
}catch(e){}
                    });
}catch(e){}
                    try {
o857 = true;
}catch(e){}
                }
}catch(e){}
            })));
}catch(e){}

try {
for (let test=o2[o20]; {
        name: "Int16Array should inherit [@@species] property from %TypedArray%",
        o14: function () {
            let o18 = o10(Int16Array);
            try {
o7.o8(o18.hasOwnProperty(Symbol.species), "%TypedArray% should have [@@species] defined");
}catch(e){}
            try {
o2("TypedArray", o18, Symbol.species);
}catch(e){}

            try {
o7.o12(Int16Array.hasOwnProperty(Symbol.species), "Int16Array should not have [@@species] defined");
}catch(e){}
            try {
o7.o9(Int16Array, Int16Array[Symbol.species], "Int16Array should have [@@species] that returns 'this'");
}catch(e){}
        }
    }; o1++) {
    try {
this.o447[0x180 | index].fill(1234.5678);
}catch(e){}
}
}catch(e){}

try {
o0();
}catch(e){}

try {
print(new Array(0x100).splice(0));
}catch(e){}