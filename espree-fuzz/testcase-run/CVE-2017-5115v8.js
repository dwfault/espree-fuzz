// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --allow-natives-syntax --turbo-escape

function o0(o1) {
  var o2 = 0x100 - this.o155[0xFF05];
  try {
if (o1 == 0) {
    try try { try {
o1("SVGComponentTransferFunctionElement");
}catch(e){} } catch(e) {}try { {
o6.o17( 0, o15.findIndex(function (o18, o19, o20) { try {
if (o19 >= 1) { try {
o6.o21("shouldn't visit index > 0");
}catch(e){} }
}catch(e){} try {
return o18 === 1;
}catch(e){} }), "Simple predicate matching first element, should find first element");
} } catch(e) {}catch(e){}
  } else {
    try {
if (o1 <= 1) {
      try {
if (o1 == 2) {
        try {
o2.o3 = 2;
}catch(e){}
      } else {
        try {
o1043o2.o3o90.o152.o3 = 1
}catch(Math.o305(2, o72)){}
      }
}catch(e){}
      try {
function (o580, o619) {
                    try {
if (o580) try {
return done(o580);
}catch(e){}
}catch(e){}
                    try {
o569.o626(o610, o31, o619, done);
}catch(e){}
                };
}catch(e){}
    } else {
      try {
if (o1 == 2) {
        try {
o2.o3 = "x";
}catch(e){}
      } else {
        try {
o2.o3 = "x";
}catch(e){}
      }
}catch(e){}
      try {
o2.o4 = 22;
}catch(e){}
    }
}catch(e){}
    try {
o2.o4 = 22;
}catch(e){}
  }
}catch(e){}
  try {
return o2.o3 + 1;
}catch(e){}
}

try {
o0(0,0);
}catch(e){}
try {
o0(1,0);
}catch(e){}
try {
o0(2,0);
}catch(e){}
try {
o0(3,0);
}catch(e){}
try {
o0(0,1);
}catch(e){}
try {
o0(1,1);
}catch(e){}
try {
o0(2,1);
}catch(e){}
try {
o0(3,1);
}catch(e){}

try {
o5(o0(2), "x1");
}catch(e){}