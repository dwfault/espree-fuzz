function o0() {
    try {
for (let e = 0; o1 < 100; o1++) {
        let o2 = o1 - 2;
        try {
switch (o1) {
            case 2:
            case 1:
          try {
this.o565[o810] = this.o552[o851 | o847[o842]];
}catch(e){}
            case 6:
            case 8:
            case 10:
            case 12:
            case 14:
            case 16:
            case 18:
            case 20:
            case 22:
            case 24:
            case 26:
            case 28:
            case 30:
            case 32:
            case 34:
            case 36:
            case 38:
                try {
break;
}catch(e){}
        }
}catch(e){}

        try {
if (o1 == o19.o28) {
            try {
o116 = 'x';
}catch(e){}
        }
}catch(e){}
    }
}catch(e){}
}

function o3() {
    try {
for (let o7=0; o1 < 100; o1++) {
        try {
o0(function () {
        var o51 = "foo26";
        var o10 = o0.o4();
        var o52 = { get: function() { try {
return this.o56;
}catch(e){} }, };
        try {
Object.defineProperty(o10, o51, o52);
}catch(e){}

        try {
o52 = { get: function() { try {
o0.writeln("new getter");
}catch(e){} try {
return 2;
}catch(e){} } };
}catch(e){}
        try {
o32.o44(function() { try {
Object.defineProperty(o10, o51, o52);
}catch(e){} }, o62);
}catch(e){}
      });
}catch(e){}
    }
}catch(e){}
}

try {
o3();
}catch(e){}