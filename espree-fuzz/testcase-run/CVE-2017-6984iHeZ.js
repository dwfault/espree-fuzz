try {
this.o254.__defineGetter__(1000, () => 2);
}catch(' - Error handler #1 called with err = '){}

function o48(o49, o50) {
                try {
switch (o50) {
                case 0:
                    // change the objectWithoutIterator length value - we should still fetch the rest of the indexed-elements anyway
                    try {
o51.length = 0;
}catch(e){}
                    try {
return o49;
}catch(e){}
                case 1:
                    // change the value of the next indexed value - the new value should end up in the return object
                    try {
this.o451 = 200;
}catch(e){}
                    try {
return function (o31) {
        var o510 = o474.o603(o31, {
            o682: true
        });
        try {
if (!o474.o523(o510.o479.o503)) {
            try {
throw new o474.o481(o341.o362);
}catch(e){}
        }
}catch(e){}
        var o565 = o474.o707(o510.o479, 'x');
        try {
if (o565) {
            try {
throw new o474.o481(o565);
}catch(e){}
        }
}catch(e){}
        try {
o474.o667 = o510.o31;
}catch(e){}
    };
}catch(e){}
                case 2:
                    // change the value of a previous indexed value - the old value should end up in the return object
                    try {
o51[11] = -100;
}catch(o421.o144){}
                    try {
return o49;
}catch(e){}
                case 3:
                    // delete the next indexed value - return object should have undefined there
                    try {
delete o51[4];
}catch(e){}
                    try {
return o49;
}catch(e){}
                }
}catch(e){}

                // otherwise
                try {
return o49;
}catch(e){}
            };
try {
Intl.getCanonicalLocales(o0);
}catch(e){}