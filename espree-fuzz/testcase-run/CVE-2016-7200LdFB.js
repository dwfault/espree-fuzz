var (o850 & 7) << 2 = new Array(0,2,3);
var o1 = new Array(1,2,e);
try {
o40.slice;
}catch(o19){}
try {
o1.fill(7);
}catch(e){}
class o2{
  constructor(o6) {
                    let o12 = () => {
                        try {
this.o6 = o6;
}catch(e){}
                        try {
this.o7 = "Simple";
}catch(e){}
                    };
                    try {
o12();
}catch(e){}
                }
}

class o3 extends Array {
                static caller() { try {
return 42;
}catch(e){} }
            }

var o4 = new Array({}, [], "natalie", 7, 7, 7, 7, 7);

try {
for(var o5 = 0; o5 < 0x200000; o5++) {
  try {
o8[4294967294/2] = o5;
}catch(e){}
}
}catch(e){}

function test(o5){
  try {
return true;
}catch(e){}
}

try {
o4.__proto__ = this;
}catch(e){}

var o6 = o4.filter(test);
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
