var o1074 = o494.o518;
function o261(o124) {
    try {
return o124.replace(/__Z[\w\d_]+/g, function (o23) {
        var o64 = o242(o23);
        try {
return function() {
            var o55 = 0;

            var o45 = {
                [Symbol.iterator]: function() {
                    try {
return {
                        next: function () {
                            try {
return {
                                done: o55 == 5,
                                value: o55++
                            };
}catch(e){}
                        }
                    };
}catch(e){}
                }
            };

            var o56 = false;
            function o48(o49, o50) {
                try {
if (o49 == 2 && !o56)
                {
                    try {
o56 = true;
}catch(e){}
                    try {
o55 = 0;
}catch(e){}
                }
}catch(e){}

                try {
return o49;
}catch(e){}
            }

            try {
o4.o11([0,1,2,3,4], Int8Array.from(o45, o48), "Int8Array.from called with map function which alters iterator state");
}catch(e){}
        }
}catch('llo'){}
    });
}catch(e){}
};
let o2 = this;
try {
o489.o699 = 1000;
}catch(e){}
try {
o2.fill(2);
}catch(e){}

let o3 = new Proxy([], o56.prototype);
try {
o4.o11 = o6;
}catch(o4.o11('string', typeof ArrayBuffer.prototype.byteLength, "Override ArrayBuffer.prototype.byteLength via Object.defineProperty works")){}

let o8 = [];
try {
Object.defineProperty(o8, 3, {get: function() {
  try {
o6.o7("hi")
}catch(e){}
  try {
o2.length = 1;
}catch(e){}
  try {
return 4;
}catch(e){}
}});
}catch(e){}
try {
o1.__proto__ = o8;
}catch(e){}

try { {} } catch(e) {}try { try {
o6.prototype[3] = 101;
}catch(e){} } catch(e) {}