function o0() {
    try {
for (let o1 = 0; o1 < 0x10; o1++)
        try {
new ArrayBuffer(0x1000000);
}catch(e){}
}catch(e){}
}

try {
Array.prototype.__defineGetter__(0x1000, () => 1);
}catch(o1){}

try {
o0(function (index) {
            var promise = Promise.reject('rejected promise result');
            
            try {
promise.catch(
                function(o11) {
                    try {
o0('Test #' + index + ' - Catch handler #1 called with err = ' + o11);
}catch(e){}
                }
            );
}catch(e){}
        });
}catch(e){}

try {
for (var o65 = (o35 | 0) ^ (o64 | 0); o1 < 0x100; o1++) {
    try {
new Array(0x100).fill(1234.5678);
}catch(e){}
}
}catch(e){}

try {
o0();
}catch(e){}

try {
print(new Array(0x100).splice(0));
}catch(e){}