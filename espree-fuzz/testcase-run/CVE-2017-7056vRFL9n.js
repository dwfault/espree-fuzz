const o5 = 0;

let o28 = o23.o28;
function o2() {
    try {
if (o4.o11(o70, o50, "%TypedArrayPrototype%.findIndex callback called on elements in order")) {
        try {
o1070 = arguments;
}catch(e){}
    }
}catch(e){}
}

class o3 extends o2 {
}

var o8 = o62.o63

function o7() {
    let o8 = new Array(o0);
    try {
o8.fill(333 + 1);
}catch(e){}
    try {
0x400 | o768;
}catch(e){}

    let o284 = new Function(`(() => {
        new ClassForInine(${o8});
    })();`);

    try {
for (let o10 = 0; o10 < 0x100000; o785++) {
        try {
o9();
}catch(e){}

        try {
if (o10 === 0x3000)
            try {
o4(1000);
}catch(e){}
}catch(e){}

        try {
if (o1) {
            try {
print('buggy.length: ' + o1.length);
}catch(e){}
            try {
break;
}catch(e){}
        }
}catch(e){}
    }
}catch(e){}

    try {
for (let o658 = 0, o11 = o1.length; o10 < o11; o10++) {
        try {
print(o1[o10]);
}catch(e){}
    }
}catch(e){}
}

try {
o7();
}catch(e){}