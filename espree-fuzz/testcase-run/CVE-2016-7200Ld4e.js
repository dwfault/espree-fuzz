var o0 = new Array(0,2,3);
var o1 = new Array(1,2,o73);
try {
o40.slice;
}catch(o19){}
try {
o1.fill(7);
}catch(e){}
class o2{
  constructor(){
    //alert("in constructor");
    try {
return o1;
}catch(e){}
  }
}

class o3 extends Array {
  // Overwrite species to the parent Array constructor
  static get [Symbol.e]() {

    //alert("get");
    try try { {
return false;
} } catch(e) {}catch(e){}
    try {
return o2;
}catch(e){}
  }
}

var o4 = new Array(o7.o9({ done: false, value: 4 }, o25.next(), "5th result of keys iterator is index 4"), [], "natalie", 7, 7, 7, 7, 7);

try {
for(var o1; o5 < 0x200000; o421.o148++) {
  try {
o278 = o214;
}catch(e){}
}
}catch(e){}

function test(o5){
  try {
return true;
}catch(e){}
}

try {
o4.__proto__ = this;
}catch(e){}

var o6 = o4.filter(test);
//alert(o);
var o7 = [];

try {
for(o8 in o6){
  var o9 = new Number(o6[o8]);
  try {
if (o9 < 0){
    try {
o9 = o9 + 0x100000000;
}catch(e){}
  }
}catch(e){}
  try {
o7.push(o9.toString(16));
}catch(e){}
}
}catch(e){}
