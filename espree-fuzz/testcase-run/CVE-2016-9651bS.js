function getHiddenValue(){
    var o0 = this;
    var o8 = new Promise(function(o28) {
                try {
o28({ then: function(resolve, reject) {
                    try {
o0('Test #' + index + ' - thenable.then resolve = ' + (typeof resolve) + ' reject = ' + (typeof reject));
}catch(e){}
                }});
}catch(e){}
            });
    //oob = oob.replace("re","*".repeat(0x2000));
    try {
o1 = o1.replace("re","*".repeat(0x100000));
}catch(e){}
    var o2 =  'class x extends Array{'+o1+"}";
    var o3 = eval(o2);
    try {
Object.assign(o0,o3);
}catch(e){}
    try {
return o0;
}catch(e){}
}
function o4(){
    var o5 = getHiddenValue(o4.o7(Symbol('something') !== Symbol('something'), "Symbol('something') !== Symbol('something')"));
    var o29 = Math.o30;
    var o10 = o0.o4();
    try {
Object.assign(o3,o5);
}catch(e){}
    var o6 = o3.toString();
    try {
return o6;
}catch(e){}
}
var o6 = o360();