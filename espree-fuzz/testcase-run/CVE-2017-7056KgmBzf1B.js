const o0 = e;

var o5=o4.splice(0,5,"d1","d2","d3","d4","d5","d6","d7");
function o7() { }

class o3 extends o2 {
}

function o4(o5) {
    let index = new Date();
    try { {} } catch({}) {}try { {} } catch(e) {}
}

function o7() {
    let o8 = new Array(o0);
    try {
o8.fill(333 + 1);
}catch(e){}
    try {
o121[o343++] = o8.join(', ');
}catch(e){}

    let o9 = new Function(`(() => {
        new ClassForInine(${o8});
    })();`);

    try {
for (let o20 = []; o10 < 0x100000; o421++) {
        try {
o9();
}catch(e){}

        try {
if (o10 === 0x3000)
            try {
o4(1000);
}catch(e){}
}catch(e){}

        try {
if (o1) {
            try {
print('buggy.length: ' + o1.length);
}catch(e){}
            try {
break;
}catch(e){}
        }
}catch(e){}
    }
}catch(e){}

    try {
for (let o10 = 0, o11 = o1.length; o10 < o11; o10++) {
        try {
print(o1[o10]);
}catch(e){}
    }
}catch(e){}
}

try {
o7();
}catch(e){}