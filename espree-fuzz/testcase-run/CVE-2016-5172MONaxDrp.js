try {
this.__defineSetter__(o62, function(){});
}catch(o641){}
var o27 = {
                then: function(resolve, reject) {
                    try {
o0('Test #' + index + ' - Promise.resolve calls thenable.then');
}catch(e){}
                    
                    try {
Promise.resolve('nested Promise.resolve call').then(
                        function(o10) {
                            try {
o0('Test #' + index + ' - Promise.resolve call nested within thenable.then = ' + o10);
}catch(e){}
                        }
                    );
}catch(e){}
                }
            }
try {
o0(o6);
}catch(e){}