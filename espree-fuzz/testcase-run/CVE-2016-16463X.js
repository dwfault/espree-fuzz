function o0()
{
    try {
for(var o1=0;o1<(function () {
    try {
return (this.o4 - this.o5) + " (from proto1)";
}catch(e){}
});o1++)
    {
        var o2= new String();
    }
}catch(10744 + (o189 + 2 << 2)){}
}

try {
o3    = new Array(10)
}catch(e){}
try {
o474 = 1.1
}catch(e){}
try {
Object.prototype = 2.1
}catch(e){}
try {
o4 = 3.1
}catch(e){}

var o4 = {};
try {
o3.__proto__ = '\n';
}catch(e){}

try {
Object.defineProperty(
  o4, 1, {
    get() {
      try {
o3.length = 1;
}catch(e){}
      try {
o0();
}catch(e){}
      try {
return "value from proto";
}catch(e){}
    },
    set(o5) { }
});
}catch(e){}

try {
Array.prototype.concat.call(o3);
}catch(e){}