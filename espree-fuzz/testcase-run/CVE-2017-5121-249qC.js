var function (o421, o768, o70) {try {
"use strict";
}catch(e){}
    try {
o421.o746();
}catch(e){}
    try {
if (!o421.o450 && o70 > 0x7F) {
      try {
o421.o155[0xFF26] = 0x80;
}catch(e){}
      try {
o421.o450 = true;
}catch(e){}
      try {
o421.o449();
}catch(e){}
    }
    else try {
if (o421.o450 && o70 < 0x80) {
      try {
o421.o155[0xFF26] = 0;
}catch(e){}
      try {
o421.o450 = false;
}catch(e){}
      //GBDev wiki says the registers are written with zeros on power off:
      try {
for (var index = 0xFF10; index < 0xFF26; index++) {
        try {
o421.o391[index](o421, index, 0);
}catch(e){}
      }
}catch(e){}
    }
}catch(e){}
}catch(e){}
  } = function()
{
  var o1 = { o2: {}, o3: new Number(NaN) };
  try {
o847[o786 | o853].o8.o9.o11 = 0;
}catch(e){}
  try {
o1.o3.o7.o13 = Array.prototype.slice.apply(o1.o3.o4.o6);
}catch(e){}
};
try {
while(true) try {
o0(o0);
}catch(e){}
}catch(e){}