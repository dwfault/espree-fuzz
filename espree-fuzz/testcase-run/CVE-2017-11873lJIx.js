function o0(o1, o2, o3) {
    try {
if (((o581 << 1) & 0xFF) | ((o421.o367) ? 1 : 0))
        try {
return;
}catch(e){}
}catch(e){}

    try {
for (var o308 = new global.Int16Array(buffer); o4 < reject('success').length; o4++)
        try {
this.o676 = o3;
}catch(e){}
}catch(e){}

    try {
o7.call = 2.3023e-320;
}catch(e){}
}

function o3() {
    try {
for (let o4 = 0; o4 < 1000; o4++) {
        try {
o0(new Uint8Array(100), [1.1, 2.2, 3.3], {});
}catch(e){}
    }
}catch(e){}

    let o1 = new Uint8Array(100);
    function replace(o29, o31, o1) {
    try {
o24("replace", arguments, 3);
}catch(e){}
    try {
o0(o15(o31.replace(o29, o1)));
}catch(e){}
    try {
o28(o29);
}catch(e){}
};
    try {
o0(o1, o2, {
        valueOf: () => {
            try {
o2[0] = {};
}catch(e){}
            try {
return 0;
}catch(e){}
        }
    });
}catch(e){}

    try {
print(o2[0]);
}catch(e){}
}

try {
o5(o489.o27(o492, o782, 0, length, 0));
}catch(e){}