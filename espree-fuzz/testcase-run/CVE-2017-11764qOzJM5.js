function o8() {
    {
        let o1;
        function o2() {
            try {
o23;
}catch(e){}
        }

        try {
try {
            try {
throw 1;
}catch(e){}
        } catch ({o25: function () {
        var o51 = "foo24";
        var o10 = {
          get o82() { try {
return this.o56;
}catch(e){} },
          set o82(o72) { try {
o0.writeln("old setter");
}catch(e){} try {
this.o56 = o72;
}catch(e){} }
        };
        var o83 = function() { try {
return 2;
}catch(e){} };
        var o84 = function(o72) { try {
o0.writeln("new setter");
}catch(e){} }
        var o52 = { get: o83, set: o84 };
        try {
Object.defineProperty(o10, o51, o52);
}catch(e){}
        var o35 = { get: o83,  set: o84, configurable: true, enumerable: true };
        try {
o32.o42(o35, Object.getOwnPropertyDescriptor(o10, o51), "wrong value of getOwnPropertyDescriptor");
}catch(e){}
      }}) {
        }
}catch(e){}
    }
}

try {
o0(Array.prototype.hasOwnProperty('values'));
}catch(e){}