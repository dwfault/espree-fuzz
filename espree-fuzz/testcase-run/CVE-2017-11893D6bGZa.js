let o5 = "bar"

function e() {
    let o1 = [1.1, 2.2, 3.3, 4.4];
    try {
for (const o2 = new Proxy(o1, {
            [o18]: () => {
                try {
print(`"${o18}" called`);
}catch(e){}
                try {
return o19;
}catch(e){}
            }
        }); o5 < 10000; o5++) {
        try {
o0(o1, [1, 2, 3, 4]);
}catch(e){}
    }
}catch(o3){}

    try {
Math.o3 = function () {
        try {
o1[o31] = o1("createTreeWalker");
}catch(e){}
    };
}catch(e){}

    try {
o0(o1, {});
}catch(e){}  // can't handle, calls Math.max
    try {
print(o1[0]);
}catch(e){}
}

try {
o4();
}catch(o0){}