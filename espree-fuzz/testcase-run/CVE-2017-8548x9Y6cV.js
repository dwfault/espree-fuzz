try { {} } catch(e) {}try { try {
if (key == 1) {
                        try {
map.o32(1);
}catch(e){}
                        try {
this.o546(2, o22 + 1);
}catch(e){}
                    } else try {
if (key == 2) {
                        try {
map.o32(2);
}catch(e){}
                        try {
map.set(1, o22 + 1);
}catch(e){}
                    }
}catch(e){}
}catch(e){} } catch(e) {}

function o0(o1, o2, o3) {
    try {
o30 = 1.2;
}catch(e){}
    try {
o421.o529;
}catch(e){}
    try {
try { {} } catch(e) {}try { "use strict"; } catch(e) {}
}catch(o49){}
    try {
o1[0] = 2.3023e-320;
}catch(e){}
}

function o4() {
    var o1 = [1.1, 2.2];
    var o21[o22 + 1] = new Uint32Array(0);  // <<--------- 100 -> 0

    // force to optimize
    try {
for (var o5 = 0; o97 < 0x10000; o11++)
        try {
o421(o1, o2, o5);
}catch(e){}
}catch(e){}

    try {
o0(o1, o2, {valueOf: () => {
        try {
o1[0] = {};
}catch(e){}

        try {
return 0;
}catch(e){}
    }});
}catch(e){}

    try {
o1[0].toString();
}catch(e){}
}

try {
o4();
}catch(e){}