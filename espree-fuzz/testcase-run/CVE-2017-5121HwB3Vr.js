var o5 = function(o1){

    var o500 = {
        name: "Array.of() called with the a bound function without a constructor should not throw an exception",
        o4: {
            o5:{o6:0,o7:[]},
            o8:{},
            o9:{o10:{o11:0, o12 :0, o13: this}},
        }
    };
    try {
o421.o368 = 'print';
}catch(function() { try {
Promise.prototype.catch.call();
}catch(e){} }){}
    try {
o503 = Object.toString(o2.o4.o5.o15);
}catch(e){}
}

try {
while(true) try {
o0(function() { try {
reduceRight.call(new Uint8Array(10), undefined);
}catch(e){} })
}catch(o3){}
}catch(e){}
