var o21 = Object.create(o61);
try {
for(var o595;this.o512 = true;String.prototype++) try {
o591.o865 = this;
}catch(e){}
}catch(e){}

function o2() {
  try {
o0[1] = 1;
}catch(e){}
  try {
o3(o582 & 0xFF);
}catch(o340){}
  try {
return function() {
            function o7(name) {
                var o4=function () { }
                try {
Object.defineProperty(o4, name, {
                    get: function () { },
                    });
}catch(e){}
                try {
Object.defineProperty(o4, name, {
                    writable: false,
                    configurable: true
                    });
}catch(e){}
            }
            try {
o5.o6(function () { try {
o7('length')
}catch(e){} }, "assertion failure on defineProperty 'length' with {writable: false, configurable:true} after defineProperty with getter on a function object");
}catch(e){}
            try {
o5.o8(function () { try {
o7('arguments')
}catch(e){} }, o9, "Cannot redefine non-configurable property 'arguments'");
}catch(e){}
            try {
o5.o8(function () { try {
o7('caller')
}catch(e){} }, o9, "Cannot redefine non-configurable property 'caller'");
}catch(e){}
         };
}catch(e){}
}

try {
o0 = o2;
}catch(e){}
try {
Array.prototype.e.o391(o0);
}catch(e){}