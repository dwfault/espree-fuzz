//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

function write(o1) { o2.o3(o1 + ""); }

function o4() {}

write(new Number(+0) + new Number(+0));
write(new Number(+0) + new Number(-0));
write(new Number(+0) + new Number(0));
write(new Number(+0) + new Number(0.0));
write(new Number(+0) + new Number(-0.0));
write(new Number(+0) + new Number(+0.0));
write(new Number(+0) + new Number(1));
write(new Number(+0) + new Number(10));
write(new Number(+0) + new Number(10.0));
write(new Number(+0) + new Number(10.1));
write(new Number(+0) + new Number(-1));
write(new Number(+0) + new Number(-10));
write(new Number(+0) + new Number(-10.0));
write(new Number(+0) + new Number(-10.1));
write(new Number(+0) + new Number(Number.o6));
write(new Number(+0) + new Number(Number.MIN_VALUE));
write(new Number(+0) + new Number(Number.NaN));
write(new Number(+0) + new Number(Number.o9));
write(new Number(+0) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(+0) + '');
write(new Number(+0) + 0xa);
write(new Number(+0) + 04);
write(new Number(+0) + 'hello');
write(new Number(+0) + 'hel' + 'lo');
write(new Number(+0) + String(''));
write(new Number(+0) + String('hello'));
write(new Number(+0) + String('h' + 'ello'));
write(new Number(+0) + new String(''));
write(new Number(+0) + new String('hello'));
write(new Number(+0) + new String('he' + 'llo'));
write(new Number(+0) + new Object());
write(new Number(+0) + new Object());
write(new Number(+0) + [1, 2, 3]);
write(new Number(+0) + [1 ,2 , 3]);
write(new Number(+0) + new Array(3));
write(new Number(+0) + Array(3));
write(new Number(+0) + new Array(1 ,2 ,3));
write(new Number(+0) + Array(1));
write(new Number(+0) + o4);
write(new Number(-0) + undefined);
write(new Number(-0) + null);
write(new Number(-0) + true);
write(new Number(-0) + false);
write(new Number(-0) + Boolean(true));
write(new Number(-0) + Boolean(false));
write(new Number(-0) + new Boolean(true));
write(new Number(-0) + new Boolean(false));
write(new Number(-0) + NaN);
write(new Number(-0) + +0);
write(new Number(-0) + -0);
write(new Number(-0) + 0);
write(new Number(-0) + 0.0);
write(new Number(-0) + -0.0);
write(new Number(-0) + +0.0);
write(new Number(-0) + 1);
write(new Number(-0) + 10);
write(new Number(-0) + 10.0);
write(new Number(-0) + 10.1);
write(new Number(-0) + -1);
write(new Number(-0) + -10);
write(new Number(-0) + -10.0);
write(new Number(-0) + -10.1);
write(new Number(-0) + Number.o6);
write(new Number(-0) + Number.MIN_VALUE);
write(new Number(-0) + Number.NaN);
write(new Number(-0) + Number.o9);
write(new Number(-0) + Number.NEGATIVE_INFINITY);
write(new Number(-0) + new Number(NaN));
write(new Number(-0) + new Number(+0));
write(new Number(-0) + new Number(-0));
write(new Number(-0) + new Number(0));
write(new Number(-0) + new Number(0.0));
write(new Number(-0) + new Number(-0.0));
write(new Number(-0) + new Number(+0.0));
write(new Number(-0) + new Number(1));
write(new Number(-0) + new Number(10));
write(new Number(-0) + new Number(10.0));
write(new Number(-0) + new Number(10.1));
write(new Number(-0) + new Number(-1));
write(new Number(-0) + new Number(-10));
write(new Number(-0) + new Number(-10.0));
write(new Number(-0) + new Number(-10.1));
write(new Number(-0) + new Number(Number.o6));
write(new Number(-0) + new Number(Number.MIN_VALUE));
write(new Number(-0) + new Number(Number.NaN));
write(new Number(-0) + new Number(Number.o9));
write(new Number(-0) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(-0) + '');
write(new Number(-0) + 0xa);
write(new Number(-0) + 04);
write(new Number(-0) + 'hello');
write(new Number(-0) + 'hel' + 'lo');
write(new Number(-0) + String(''));
write(new Number(-0) + String('hello'));
write(new Number(-0) + String('h' + 'ello'));
write(new Number(-0) + new String(''));
write(new Number(-0) + new String('hello'));
write(new Number(-0) + new String('he' + 'llo'));
write(new Number(-0) + new Object());
write(new Number(-0) + new Object());
write(new Number(-0) + [1, 2, 3]);
write(new Number(-0) + [1 ,2 , 3]);
write(new Number(-0) + new Array(3));
write(new Number(-0) + Array(3));
write(new Number(-0) + new Array(1 ,2 ,3));
write(new Number(-0) + Array(1));
write(new Number(-0) + o4);
write(new Number(0) + undefined);
write(new Number(0) + null);
write(new Number(0) + true);
write(new Number(0) + false);
write(new Number(0) + Boolean(true));
write(new Number(0) + Boolean(false));
write(new Number(0) + new Boolean(true));
write(new Number(0) + new Boolean(false));
write(new Number(0) + NaN);
write(new Number(0) + +0);
write(new Number(0) + -0);
write(new Number(0) + 0);
write(new Number(0) + 0.0);
write(new Number(0) + -0.0);
write(new Number(0) + +0.0);
write(new Number(0) + 1);
write(new Number(0) + 10);
write(new Number(0) + 10.0);
write(new Number(0) + 10.1);
write(new Number(0) + -1);
write(new Number(0) + -10);
write(new Number(0) + -10.0);
write(new Number(0) + -10.1);
write(new Number(0) + Number.o6);
write(new Number(0) + Number.MIN_VALUE);
write(new Number(0) + Number.NaN);
write(new Number(0) + Number.o9);
write(new Number(0) + Number.NEGATIVE_INFINITY);
write(new Number(0) + new Number(NaN));
write(new Number(0) + new Number(+0));
write(new Number(0) + new Number(-0));
write(new Number(0) + new Number(0));
write(new Number(0) + new Number(0.0));
write(new Number(0) + new Number(-0.0));
write(new Number(0) + new Number(+0.0));
write(new Number(0) + new Number(1));
write(new Number(0) + new Number(10));
write(new Number(0) + new Number(10.0));
write(new Number(0) + new Number(10.1));
write(new Number(0) + new Number(-1));
write(new Number(0) + new Number(-10));
write(new Number(0) + new Number(-10.0));
write(new Number(0) + new Number(-10.1));
write(new Number(0) + new Number(Number.o6));
write(new Number(0) + new Number(Number.MIN_VALUE));
write(new Number(0) + new Number(Number.NaN));
write(new Number(0) + new Number(Number.o9));
write(new Number(0) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(0) + '');
write(new Number(0) + 0xa);
write(new Number(0) + 04);
write(new Number(0) + 'hello');
write(new Number(0) + 'hel' + 'lo');
write(new Number(0) + String(''));
write(new Number(0) + String('hello'));
write(new Number(0) + String('h' + 'ello'));
write(new Number(0) + new String(''));
write(new Number(0) + new String('hello'));
write(new Number(0) + new String('he' + 'llo'));
write(new Number(0) + new Object());
write(new Number(0) + new Object());
write(new Number(0) + [1, 2, 3]);
write(new Number(0) + [1 ,2 , 3]);
write(new Number(0) + new Array(3));
write(new Number(0) + Array(3));
write(new Number(0) + new Array(1 ,2 ,3));
write(new Number(0) + Array(1));
write(new Number(0) + o4);
write(new Number(0.0) + undefined);
write(new Number(0.0) + null);
write(new Number(0.0) + true);
write(new Number(0.0) + false);
write(new Number(0.0) + Boolean(true));
write(new Number(0.0) + Boolean(false));
write(new Number(0.0) + new Boolean(true));
write(new Number(0.0) + new Boolean(false));
write(new Number(0.0) + NaN);
write(new Number(0.0) + +0);
write(new Number(0.0) + -0);
write(new Number(0.0) + 0);
write(new Number(0.0) + 0.0);
write(new Number(0.0) + -0.0);
write(new Number(0.0) + +0.0);
write(new Number(0.0) + 1);
write(new Number(0.0) + 10);
write(new Number(0.0) + 10.0);
write(new Number(0.0) + 10.1);
write(new Number(0.0) + -1);
write(new Number(0.0) + -10);
write(new Number(0.0) + -10.0);
write(new Number(0.0) + -10.1);
write(new Number(0.0) + Number.o6);
write(new Number(0.0) + Number.MIN_VALUE);
write(new Number(0.0) + Number.NaN);
write(new Number(0.0) + Number.o9);
write(new Number(0.0) + Number.NEGATIVE_INFINITY);
write(new Number(0.0) + new Number(NaN));
write(new Number(0.0) + new Number(+0));
write(new Number(0.0) + new Number(-0));
write(new Number(0.0) + new Number(0));
write(new Number(0.0) + new Number(0.0));
write(new Number(0.0) + new Number(-0.0));
write(new Number(0.0) + new Number(+0.0));
write(new Number(0.0) + new Number(1));
write(new Number(0.0) + new Number(10));
write(new Number(0.0) + new Number(10.0));
write(new Number(0.0) + new Number(10.1));
write(new Number(0.0) + new Number(-1));
write(new Number(0.0) + new Number(-10));
write(new Number(0.0) + new Number(-10.0));
write(new Number(0.0) + new Number(-10.1));
write(new Number(0.0) + new Number(Number.o6));
write(new Number(0.0) + new Number(Number.MIN_VALUE));
write(new Number(0.0) + new Number(Number.NaN));
write(new Number(0.0) + new Number(Number.o9));
write(new Number(0.0) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(0.0) + '');
write(new Number(0.0) + 0xa);
write(new Number(0.0) + 04);
write(new Number(0.0) + 'hello');
write(new Number(0.0) + 'hel' + 'lo');
write(new Number(0.0) + String(''));
write(new Number(0.0) + String('hello'));
write(new Number(0.0) + String('h' + 'ello'));
write(new Number(0.0) + new String(''));
write(new Number(0.0) + new String('hello'));
write(new Number(0.0) + new String('he' + 'llo'));
write(new Number(0.0) + new Object());
write(new Number(0.0) + new Object());
write(new Number(0.0) + [1, 2, 3]);
write(new Number(0.0) + [1 ,2 , 3]);
write(new Number(0.0) + new Array(3));
write(new Number(0.0) + Array(3));
write(new Number(0.0) + new Array(1 ,2 ,3));
write(new Number(0.0) + Array(1));
write(new Number(0.0) + o4);
write(new Number(-0.0) + undefined);
write(new Number(-0.0) + null);
write(new Number(-0.0) + true);
write(new Number(-0.0) + false);
write(new Number(-0.0) + Boolean(true));
write(new Number(-0.0) + Boolean(false));
write(new Number(-0.0) + new Boolean(true));
write(new Number(-0.0) + new Boolean(false));
write(new Number(-0.0) + NaN);
write(new Number(-0.0) + +0);
write(new Number(-0.0) + -0);
write(new Number(-0.0) + 0);
write(new Number(-0.0) + 0.0);
write(new Number(-0.0) + -0.0);
write(new Number(-0.0) + +0.0);
write(new Number(-0.0) + 1);
write(new Number(-0.0) + 10);
write(new Number(-0.0) + 10.0);
write(new Number(-0.0) + 10.1);
write(new Number(-0.0) + -1);
write(new Number(-0.0) + -10);
write(new Number(-0.0) + -10.0);
write(new Number(-0.0) + -10.1);
write(new Number(-0.0) + Number.o6);
write(new Number(-0.0) + Number.MIN_VALUE);
write(new Number(-0.0) + Number.NaN);
write(new Number(-0.0) + Number.o9);
write(new Number(-0.0) + Number.NEGATIVE_INFINITY);
write(new Number(-0.0) + new Number(NaN));
write(new Number(-0.0) + new Number(+0));
write(new Number(-0.0) + new Number(-0));
write(new Number(-0.0) + new Number(0));
write(new Number(-0.0) + new Number(0.0));
write(new Number(-0.0) + new Number(-0.0));
write(new Number(-0.0) + new Number(+0.0));
write(new Number(-0.0) + new Number(1));
write(new Number(-0.0) + new Number(10));
write(new Number(-0.0) + new Number(10.0));
write(new Number(-0.0) + new Number(10.1));
write(new Number(-0.0) + new Number(-1));
write(new Number(-0.0) + new Number(-10));
write(new Number(-0.0) + new Number(-10.0));
write(new Number(-0.0) + new Number(-10.1));
write(new Number(-0.0) + new Number(Number.o6));
write(new Number(-0.0) + new Number(Number.MIN_VALUE));
write(new Number(-0.0) + new Number(Number.NaN));
write(new Number(-0.0) + new Number(Number.o9));
write(new Number(-0.0) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(-0.0) + '');
write(new Number(-0.0) + 0xa);
write(new Number(-0.0) + 04);
write(new Number(-0.0) + 'hello');
write(new Number(-0.0) + 'hel' + 'lo');
write(new Number(-0.0) + String(''));
write(new Number(-0.0) + String('hello'));
write(new Number(-0.0) + String('h' + 'ello'));
write(new Number(-0.0) + new String(''));
write(new Number(-0.0) + new String('hello'));
write(new Number(-0.0) + new String('he' + 'llo'));
write(new Number(-0.0) + new Object());
write(new Number(-0.0) + new Object());
write(new Number(-0.0) + [1, 2, 3]);
write(new Number(-0.0) + [1 ,2 , 3]);
write(new Number(-0.0) + new Array(3));
write(new Number(-0.0) + Array(3));
write(new Number(-0.0) + new Array(1 ,2 ,3));
write(new Number(-0.0) + Array(1));
write(new Number(-0.0) + o4);
write(new Number(+0.0) + undefined);
write(new Number(+0.0) + null);
write(new Number(+0.0) + true);
write(new Number(+0.0) + false);
write(new Number(+0.0) + Boolean(true));
write(new Number(+0.0) + Boolean(false));
write(new Number(+0.0) + new Boolean(true));
write(new Number(+0.0) + new Boolean(false));
write(new Number(+0.0) + NaN);
write(new Number(+0.0) + +0);
write(new Number(+0.0) + -0);
write(new Number(+0.0) + 0);
write(new Number(+0.0) + 0.0);
write(new Number(+0.0) + -0.0);
write(new Number(+0.0) + +0.0);
write(new Number(+0.0) + 1);
write(new Number(+0.0) + 10);
write(new Number(+0.0) + 10.0);
write(new Number(+0.0) + 10.1);
write(new Number(+0.0) + -1);
write(new Number(+0.0) + -10);
write(new Number(+0.0) + -10.0);
write(new Number(+0.0) + -10.1);
write(new Number(+0.0) + Number.o6);
write(new Number(+0.0) + Number.MIN_VALUE);
write(new Number(+0.0) + Number.NaN);
write(new Number(+0.0) + Number.o9);
write(new Number(+0.0) + Number.NEGATIVE_INFINITY);
write(new Number(+0.0) + new Number(NaN));
write(new Number(+0.0) + new Number(+0));
write(new Number(+0.0) + new Number(-0));
write(new Number(+0.0) + new Number(0));
write(new Number(+0.0) + new Number(0.0));
write(new Number(+0.0) + new Number(-0.0));
write(new Number(+0.0) + new Number(+0.0));
write(new Number(+0.0) + new Number(1));
write(new Number(+0.0) + new Number(10));
write(new Number(+0.0) + new Number(10.0));
write(new Number(+0.0) + new Number(10.1));
write(new Number(+0.0) + new Number(-1));
write(new Number(+0.0) + new Number(-10));
write(new Number(+0.0) + new Number(-10.0));
write(new Number(+0.0) + new Number(-10.1));
write(new Number(+0.0) + new Number(Number.o6));
write(new Number(+0.0) + new Number(Number.MIN_VALUE));
write(new Number(+0.0) + new Number(Number.NaN));
write(new Number(+0.0) + new Number(Number.o9));
write(new Number(+0.0) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(+0.0) + '');
write(new Number(+0.0) + 0xa);
write(new Number(+0.0) + 04);
write(new Number(+0.0) + 'hello');
write(new Number(+0.0) + 'hel' + 'lo');
write(new Number(+0.0) + String(''));
write(new Number(+0.0) + String('hello'));
write(new Number(+0.0) + String('h' + 'ello'));
write(new Number(+0.0) + new String(''));
write(new Number(+0.0) + new String('hello'));
write(new Number(+0.0) + new String('he' + 'llo'));
write(new Number(+0.0) + new Object());
write(new Number(+0.0) + new Object());
write(new Number(+0.0) + [1, 2, 3]);
write(new Number(+0.0) + [1 ,2 , 3]);
write(new Number(+0.0) + new Array(3));
write(new Number(+0.0) + Array(3));
write(new Number(+0.0) + new Array(1 ,2 ,3));
write(new Number(+0.0) + Array(1));
write(new Number(+0.0) + o4);
write(new Number(1) + undefined);
write(new Number(1) + null);
write(new Number(1) + true);
write(new Number(1) + false);
write(new Number(1) + Boolean(true));
write(new Number(1) + Boolean(false));
write(new Number(1) + new Boolean(true));
write(new Number(1) + new Boolean(false));
write(new Number(1) + NaN);
write(new Number(1) + +0);
write(new Number(1) + -0);
write(new Number(1) + 0);
write(new Number(1) + 0.0);
write(new Number(1) + -0.0);
write(new Number(1) + +0.0);
write(new Number(1) + 1);
write(new Number(1) + 10);
write(new Number(1) + 10.0);
write(new Number(1) + 10.1);
write(new Number(1) + -1);
write(new Number(1) + -10);
write(new Number(1) + -10.0);
write(new Number(1) + -10.1);
write(new Number(1) + Number.o6);
write(new Number(1) + Number.MIN_VALUE);
write(new Number(1) + Number.NaN);
write(new Number(1) + Number.o9);
write(new Number(1) + Number.NEGATIVE_INFINITY);
write(new Number(1) + new Number(NaN));
write(new Number(1) + new Number(+0));
write(new Number(1) + new Number(-0));
write(new Number(1) + new Number(0));
write(new Number(1) + new Number(0.0));
write(new Number(1) + new Number(-0.0));
write(new Number(1) + new Number(+0.0));
write(new Number(1) + new Number(1));
write(new Number(1) + new Number(10));
write(new Number(1) + new Number(10.0));
write(new Number(1) + new Number(10.1));
write(new Number(1) + new Number(-1));
write(new Number(1) + new Number(-10));
write(new Number(1) + new Number(-10.0));
write(new Number(1) + new Number(-10.1));
write(new Number(1) + new Number(Number.o6));
write(new Number(1) + new Number(Number.MIN_VALUE));
write(new Number(1) + new Number(Number.NaN));
write(new Number(1) + new Number(Number.o9));
write(new Number(1) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(1) + '');
write(new Number(1) + 0xa);
write(new Number(1) + 04);
write(new Number(1) + 'hello');
write(new Number(1) + 'hel' + 'lo');
write(new Number(1) + String(''));
write(new Number(1) + String('hello'));
write(new Number(1) + String('h' + 'ello'));
write(new Number(1) + new String(''));
write(new Number(1) + new String('hello'));
write(new Number(1) + new String('he' + 'llo'));
write(new Number(1) + new Object());
write(new Number(1) + new Object());
write(new Number(1) + [1, 2, 3]);
write(new Number(1) + [1 ,2 , 3]);
write(new Number(1) + new Array(3));
write(new Number(1) + Array(3));
write(new Number(1) + new Array(1 ,2 ,3));
write(new Number(1) + Array(1));
write(new Number(1) + o4);
write(new Number(10) + undefined);
write(new Number(10) + null);
write(new Number(10) + true);
write(new Number(10) + false);
write(new Number(10) + Boolean(true));
write(new Number(10) + Boolean(false));
write(new Number(10) + new Boolean(true));
write(new Number(10) + new Boolean(false));
write(new Number(10) + NaN);
write(new Number(10) + +0);
write(new Number(10) + -0);
write(new Number(10) + 0);
write(new Number(10) + 0.0);
write(new Number(10) + -0.0);
write(new Number(10) + +0.0);
write(new Number(10) + 1);
write(new Number(10) + 10);
write(new Number(10) + 10.0);
write(new Number(10) + 10.1);
write(new Number(10) + -1);
write(new Number(10) + -10);
write(new Number(10) + -10.0);
write(new Number(10) + -10.1);
write(new Number(10) + Number.o6);
write(new Number(10) + Number.MIN_VALUE);
write(new Number(10) + Number.NaN);
write(new Number(10) + Number.o9);
write(new Number(10) + Number.NEGATIVE_INFINITY);
write(new Number(10) + new Number(NaN));
write(new Number(10) + new Number(+0));
write(new Number(10) + new Number(-0));
write(new Number(10) + new Number(0));
write(new Number(10) + new Number(0.0));
write(new Number(10) + new Number(-0.0));
write(new Number(10) + new Number(+0.0));
write(new Number(10) + new Number(1));
write(new Number(10) + new Number(10));
write(new Number(10) + new Number(10.0));
write(new Number(10) + new Number(10.1));
write(new Number(10) + new Number(-1));
write(new Number(10) + new Number(-10));
write(new Number(10) + new Number(-10.0));
write(new Number(10) + new Number(-10.1));
write(new Number(10) + new Number(Number.o6));
write(new Number(10) + new Number(Number.MIN_VALUE));
write(new Number(10) + new Number(Number.NaN));
write(new Number(10) + new Number(Number.o9));
write(new Number(10) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(10) + '');
write(new Number(10) + 0xa);
write(new Number(10) + 04);
write(new Number(10) + 'hello');
write(new Number(10) + 'hel' + 'lo');
write(new Number(10) + String(''));
write(new Number(10) + String('hello'));
write(new Number(10) + String('h' + 'ello'));
write(new Number(10) + new String(''));
write(new Number(10) + new String('hello'));
write(new Number(10) + new String('he' + 'llo'));
write(new Number(10) + new Object());
write(new Number(10) + new Object());
write(new Number(10) + [1, 2, 3]);
write(new Number(10) + [1 ,2 , 3]);
write(new Number(10) + new Array(3));
write(new Number(10) + Array(3));
write(new Number(10) + new Array(1 ,2 ,3));
write(new Number(10) + Array(1));
write(new Number(10) + o4);
write(new Number(10.0) + undefined);
write(new Number(10.0) + null);
write(new Number(10.0) + true);
write(new Number(10.0) + false);
write(new Number(10.0) + Boolean(true));
write(new Number(10.0) + Boolean(false));
write(new Number(10.0) + new Boolean(true));
write(new Number(10.0) + new Boolean(false));
write(new Number(10.0) + NaN);
write(new Number(10.0) + +0);
write(new Number(10.0) + -0);
write(new Number(10.0) + 0);
write(new Number(10.0) + 0.0);
write(new Number(10.0) + -0.0);
write(new Number(10.0) + +0.0);
write(new Number(10.0) + 1);
write(new Number(10.0) + 10);
write(new Number(10.0) + 10.0);
write(new Number(10.0) + 10.1);
write(new Number(10.0) + -1);
write(new Number(10.0) + -10);
write(new Number(10.0) + -10.0);
write(new Number(10.0) + -10.1);
write(new Number(10.0) + Number.o6);
write(new Number(10.0) + Number.MIN_VALUE);
write(new Number(10.0) + Number.NaN);
write(new Number(10.0) + Number.o9);
write(new Number(10.0) + Number.NEGATIVE_INFINITY);
write(new Number(10.0) + new Number(NaN));
write(new Number(10.0) + new Number(+0));
write(new Number(10.0) + new Number(-0));
write(new Number(10.0) + new Number(0));
write(new Number(10.0) + new Number(0.0));
write(new Number(10.0) + new Number(-0.0));
write(new Number(10.0) + new Number(+0.0));
write(new Number(10.0) + new Number(1));
write(new Number(10.0) + new Number(10));
write(new Number(10.0) + new Number(10.0));
write(new Number(10.0) + new Number(10.1));
write(new Number(10.0) + new Number(-1));
write(new Number(10.0) + new Number(-10));
write(new Number(10.0) + new Number(-10.0));
write(new Number(10.0) + new Number(-10.1));
write(new Number(10.0) + new Number(Number.o6));
write(new Number(10.0) + new Number(Number.MIN_VALUE));
write(new Number(10.0) + new Number(Number.NaN));
write(new Number(10.0) + new Number(Number.o9));
write(new Number(10.0) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(10.0) + '');
write(new Number(10.0) + 0xa);
write(new Number(10.0) + 04);
write(new Number(10.0) + 'hello');
write(new Number(10.0) + 'hel' + 'lo');
write(new Number(10.0) + String(''));
write(new Number(10.0) + String('hello'));
write(new Number(10.0) + String('h' + 'ello'));
write(new Number(10.0) + new String(''));
write(new Number(10.0) + new String('hello'));
write(new Number(10.0) + new String('he' + 'llo'));
write(new Number(10.0) + new Object());
write(new Number(10.0) + new Object());
write(new Number(10.0) + [1, 2, 3]);
write(new Number(10.0) + [1 ,2 , 3]);
write(new Number(10.0) + new Array(3));
write(new Number(10.0) + Array(3));
write(new Number(10.0) + new Array(1 ,2 ,3));
write(new Number(10.0) + Array(1));
write(new Number(10.0) + o4);
write(new Number(10.1) + undefined);
write(new Number(10.1) + null);
write(new Number(10.1) + true);
write(new Number(10.1) + false);
write(new Number(10.1) + Boolean(true));
write(new Number(10.1) + Boolean(false));
write(new Number(10.1) + new Boolean(true));
write(new Number(10.1) + new Boolean(false));
write(new Number(10.1) + NaN);
write(new Number(10.1) + +0);
write(new Number(10.1) + -0);
write(new Number(10.1) + 0);
write(new Number(10.1) + 0.0);
write(new Number(10.1) + -0.0);
write(new Number(10.1) + +0.0);
write(new Number(10.1) + 1);
write(new Number(10.1) + 10);
write(new Number(10.1) + 10.0);
write(new Number(10.1) + 10.1);
write(new Number(10.1) + -1);
write(new Number(10.1) + -10);
write(new Number(10.1) + -10.0);
write(new Number(10.1) + -10.1);
write(new Number(10.1) + Number.o6);
write(new Number(10.1) + Number.MIN_VALUE);
write(new Number(10.1) + Number.NaN);
write(new Number(10.1) + Number.o9);
write(new Number(10.1) + Number.NEGATIVE_INFINITY);
write(new Number(10.1) + new Number(NaN));
write(new Number(10.1) + new Number(+0));
write(new Number(10.1) + new Number(-0));
write(new Number(10.1) + new Number(0));
write(new Number(10.1) + new Number(0.0));
write(new Number(10.1) + new Number(-0.0));
write(new Number(10.1) + new Number(+0.0));
write(new Number(10.1) + new Number(1));
write(new Number(10.1) + new Number(10));
write(new Number(10.1) + new Number(10.0));
write(new Number(10.1) + new Number(10.1));
write(new Number(10.1) + new Number(-1));
write(new Number(10.1) + new Number(-10));
write(new Number(10.1) + new Number(-10.0));
write(new Number(10.1) + new Number(-10.1));
write(new Number(10.1) + new Number(Number.o6));
write(new Number(10.1) + new Number(Number.MIN_VALUE));
write(new Number(10.1) + new Number(Number.NaN));
write(new Number(10.1) + new Number(Number.o9));
write(new Number(10.1) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(10.1) + '');
write(new Number(10.1) + 0xa);
write(new Number(10.1) + 04);
write(new Number(10.1) + 'hello');
write(new Number(10.1) + 'hel' + 'lo');
write(new Number(10.1) + String(''));
write(new Number(10.1) + String('hello'));
write(new Number(10.1) + String('h' + 'ello'));
write(new Number(10.1) + new String(''));
write(new Number(10.1) + new String('hello'));
write(new Number(10.1) + new String('he' + 'llo'));
write(new Number(10.1) + new Object());
write(new Number(10.1) + new Object());
write(new Number(10.1) + [1, 2, 3]);
write(new Number(10.1) + [1 ,2 , 3]);
write(new Number(10.1) + new Array(3));
write(new Number(10.1) + Array(3));
write(new Number(10.1) + new Array(1 ,2 ,3));
write(new Number(10.1) + Array(1));
write(new Number(10.1) + o4);
write(new Number(-1) + undefined);
write(new Number(-1) + null);
write(new Number(-1) + true);
write(new Number(-1) + false);
write(new Number(-1) + Boolean(true));
write(new Number(-1) + Boolean(false));
write(new Number(-1) + new Boolean(true));
write(new Number(-1) + new Boolean(false));
write(new Number(-1) + NaN);
write(new Number(-1) + +0);
write(new Number(-1) + -0);
write(new Number(-1) + 0);
write(new Number(-1) + 0.0);
write(new Number(-1) + -0.0);
write(new Number(-1) + +0.0);
write(new Number(-1) + 1);
write(new Number(-1) + 10);
write(new Number(-1) + 10.0);
write(new Number(-1) + 10.1);
write(new Number(-1) + -1);
write(new Number(-1) + -10);
write(new Number(-1) + -10.0);
write(new Number(-1) + -10.1);
write(new Number(-1) + Number.o6);
write(new Number(-1) + Number.MIN_VALUE);
write(new Number(-1) + Number.NaN);
write(new Number(-1) + Number.o9);
write(new Number(-1) + Number.NEGATIVE_INFINITY);
write(new Number(-1) + new Number(NaN));
write(new Number(-1) + new Number(+0));
write(new Number(-1) + new Number(-0));
write(new Number(-1) + new Number(0));
write(new Number(-1) + new Number(0.0));
write(new Number(-1) + new Number(-0.0));
write(new Number(-1) + new Number(+0.0));
write(new Number(-1) + new Number(1));
write(new Number(-1) + new Number(10));
write(new Number(-1) + new Number(10.0));
write(new Number(-1) + new Number(10.1));
write(new Number(-1) + new Number(-1));
write(new Number(-1) + new Number(-10));
write(new Number(-1) + new Number(-10.0));
write(new Number(-1) + new Number(-10.1));
write(new Number(-1) + new Number(Number.o6));
write(new Number(-1) + new Number(Number.MIN_VALUE));
write(new Number(-1) + new Number(Number.NaN));
write(new Number(-1) + new Number(Number.o9));
write(new Number(-1) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(-1) + '');
write(new Number(-1) + 0xa);
write(new Number(-1) + 04);
write(new Number(-1) + 'hello');
write(new Number(-1) + 'hel' + 'lo');
write(new Number(-1) + String(''));
write(new Number(-1) + String('hello'));
write(new Number(-1) + String('h' + 'ello'));
write(new Number(-1) + new String(''));
write(new Number(-1) + new String('hello'));
write(new Number(-1) + new String('he' + 'llo'));
write(new Number(-1) + new Object());
write(new Number(-1) + new Object());
write(new Number(-1) + [1, 2, 3]);
write(new Number(-1) + [1 ,2 , 3]);
write(new Number(-1) + new Array(3));
write(new Number(-1) + Array(3));
write(new Number(-1) + new Array(1 ,2 ,3));
write(new Number(-1) + Array(1));
write(new Number(-1) + o4);
write(new Number(-10) + undefined);
write(new Number(-10) + null);
write(new Number(-10) + true);
write(new Number(-10) + false);
write(new Number(-10) + Boolean(true));
write(new Number(-10) + Boolean(false));
write(new Number(-10) + new Boolean(true));
write(new Number(-10) + new Boolean(false));
write(new Number(-10) + NaN);
write(new Number(-10) + +0);
write(new Number(-10) + -0);
write(new Number(-10) + 0);
write(new Number(-10) + 0.0);
write(new Number(-10) + -0.0);
write(new Number(-10) + +0.0);
write(new Number(-10) + 1);
write(new Number(-10) + 10);
write(new Number(-10) + 10.0);
write(new Number(-10) + 10.1);
write(new Number(-10) + -1);
write(new Number(-10) + -10);
write(new Number(-10) + -10.0);
write(new Number(-10) + -10.1);
write(new Number(-10) + Number.o6);
write(new Number(-10) + Number.MIN_VALUE);
write(new Number(-10) + Number.NaN);
write(new Number(-10) + Number.o9);
write(new Number(-10) + Number.NEGATIVE_INFINITY);
write(new Number(-10) + new Number(NaN));
write(new Number(-10) + new Number(+0));
write(new Number(-10) + new Number(-0));
write(new Number(-10) + new Number(0));
write(new Number(-10) + new Number(0.0));
write(new Number(-10) + new Number(-0.0));
write(new Number(-10) + new Number(+0.0));
write(new Number(-10) + new Number(1));
write(new Number(-10) + new Number(10));
write(new Number(-10) + new Number(10.0));
write(new Number(-10) + new Number(10.1));
write(new Number(-10) + new Number(-1));
write(new Number(-10) + new Number(-10));
write(new Number(-10) + new Number(-10.0));
write(new Number(-10) + new Number(-10.1));
write(new Number(-10) + new Number(Number.o6));
write(new Number(-10) + new Number(Number.MIN_VALUE));
write(new Number(-10) + new Number(Number.NaN));
write(new Number(-10) + new Number(Number.o9));
write(new Number(-10) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(-10) + '');
write(new Number(-10) + 0xa);
write(new Number(-10) + 04);
write(new Number(-10) + 'hello');
write(new Number(-10) + 'hel' + 'lo');
write(new Number(-10) + String(''));
write(new Number(-10) + String('hello'));
write(new Number(-10) + String('h' + 'ello'));
write(new Number(-10) + new String(''));
write(new Number(-10) + new String('hello'));
write(new Number(-10) + new String('he' + 'llo'));
write(new Number(-10) + new Object());
write(new Number(-10) + new Object());
write(new Number(-10) + [1, 2, 3]);
write(new Number(-10) + [1 ,2 , 3]);
write(new Number(-10) + new Array(3));
write(new Number(-10) + Array(3));
write(new Number(-10) + new Array(1 ,2 ,3));
write(new Number(-10) + Array(1));
write(new Number(-10) + o4);
write(new Number(-10.0) + undefined);
write(new Number(-10.0) + null);
write(new Number(-10.0) + true);
write(new Number(-10.0) + false);
write(new Number(-10.0) + Boolean(true));
write(new Number(-10.0) + Boolean(false));
write(new Number(-10.0) + new Boolean(true));
write(new Number(-10.0) + new Boolean(false));
write(new Number(-10.0) + NaN);
write(new Number(-10.0) + +0);
write(new Number(-10.0) + -0);
write(new Number(-10.0) + 0);
write(new Number(-10.0) + 0.0);
write(new Number(-10.0) + -0.0);
write(new Number(-10.0) + +0.0);
write(new Number(-10.0) + 1);
write(new Number(-10.0) + 10);
write(new Number(-10.0) + 10.0);
write(new Number(-10.0) + 10.1);
write(new Number(-10.0) + -1);
write(new Number(-10.0) + -10);
write(new Number(-10.0) + -10.0);
write(new Number(-10.0) + -10.1);
write(new Number(-10.0) + Number.o6);
write(new Number(-10.0) + Number.MIN_VALUE);
write(new Number(-10.0) + Number.NaN);
write(new Number(-10.0) + Number.o9);
write(new Number(-10.0) + Number.NEGATIVE_INFINITY);
write(new Number(-10.0) + new Number(NaN));
write(new Number(-10.0) + new Number(+0));
write(new Number(-10.0) + new Number(-0));
write(new Number(-10.0) + new Number(0));
write(new Number(-10.0) + new Number(0.0));
write(new Number(-10.0) + new Number(-0.0));
write(new Number(-10.0) + new Number(+0.0));
write(new Number(-10.0) + new Number(1));
write(new Number(-10.0) + new Number(10));
write(new Number(-10.0) + new Number(10.0));
write(new Number(-10.0) + new Number(10.1));
write(new Number(-10.0) + new Number(-1));
write(new Number(-10.0) + new Number(-10));
write(new Number(-10.0) + new Number(-10.0));
write(new Number(-10.0) + new Number(-10.1));
write(new Number(-10.0) + new Number(Number.o6));
write(new Number(-10.0) + new Number(Number.MIN_VALUE));
write(new Number(-10.0) + new Number(Number.NaN));
write(new Number(-10.0) + new Number(Number.o9));
write(new Number(-10.0) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(-10.0) + '');
write(new Number(-10.0) + 0xa);
write(new Number(-10.0) + 04);
write(new Number(-10.0) + 'hello');
write(new Number(-10.0) + 'hel' + 'lo');
write(new Number(-10.0) + String(''));
write(new Number(-10.0) + String('hello'));
write(new Number(-10.0) + String('h' + 'ello'));
write(new Number(-10.0) + new String(''));
write(new Number(-10.0) + new String('hello'));
write(new Number(-10.0) + new String('he' + 'llo'));
write(new Number(-10.0) + new Object());
write(new Number(-10.0) + new Object());
write(new Number(-10.0) + [1, 2, 3]);
write(new Number(-10.0) + [1 ,2 , 3]);
write(new Number(-10.0) + new Array(3));
write(new Number(-10.0) + Array(3));
write(new Number(-10.0) + new Array(1 ,2 ,3));
write(new Number(-10.0) + Array(1));
write(new Number(-10.0) + o4);
write(new Number(-10.1) + undefined);
write(new Number(-10.1) + null);
write(new Number(-10.1) + true);
write(new Number(-10.1) + false);
write(new Number(-10.1) + Boolean(true));
write(new Number(-10.1) + Boolean(false));
write(new Number(-10.1) + new Boolean(true));
write(new Number(-10.1) + new Boolean(false));
write(new Number(-10.1) + NaN);
write(new Number(-10.1) + +0);
write(new Number(-10.1) + -0);
write(new Number(-10.1) + 0);
write(new Number(-10.1) + 0.0);
write(new Number(-10.1) + -0.0);
write(new Number(-10.1) + +0.0);
write(new Number(-10.1) + 1);
write(new Number(-10.1) + 10);
write(new Number(-10.1) + 10.0);
write(new Number(-10.1) + 10.1);
write(new Number(-10.1) + -1);
write(new Number(-10.1) + -10);
write(new Number(-10.1) + -10.0);
write(new Number(-10.1) + -10.1);
write(new Number(-10.1) + Number.o6);
write(new Number(-10.1) + Number.MIN_VALUE);
write(new Number(-10.1) + Number.NaN);
write(new Number(-10.1) + Number.o9);
write(new Number(-10.1) + Number.NEGATIVE_INFINITY);
write(new Number(-10.1) + new Number(NaN));
write(new Number(-10.1) + new Number(+0));
write(new Number(-10.1) + new Number(-0));
write(new Number(-10.1) + new Number(0));
write(new Number(-10.1) + new Number(0.0));
write(new Number(-10.1) + new Number(-0.0));
write(new Number(-10.1) + new Number(+0.0));
write(new Number(-10.1) + new Number(1));
write(new Number(-10.1) + new Number(10));
write(new Number(-10.1) + new Number(10.0));
write(new Number(-10.1) + new Number(10.1));
write(new Number(-10.1) + new Number(-1));
write(new Number(-10.1) + new Number(-10));
write(new Number(-10.1) + new Number(-10.0));
write(new Number(-10.1) + new Number(-10.1));
write(new Number(-10.1) + new Number(Number.o6));
write(new Number(-10.1) + new Number(Number.MIN_VALUE));
write(new Number(-10.1) + new Number(Number.NaN));
write(new Number(-10.1) + new Number(Number.o9));
write(new Number(-10.1) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(-10.1) + '');
write(new Number(-10.1) + 0xa);
write(new Number(-10.1) + 04);
write(new Number(-10.1) + 'hello');
write(new Number(-10.1) + 'hel' + 'lo');
write(new Number(-10.1) + String(''));
write(new Number(-10.1) + String('hello'));
write(new Number(-10.1) + String('h' + 'ello'));
write(new Number(-10.1) + new String(''));
write(new Number(-10.1) + new String('hello'));
write(new Number(-10.1) + new String('he' + 'llo'));
write(new Number(-10.1) + new Object());
write(new Number(-10.1) + new Object());
write(new Number(-10.1) + [1, 2, 3]);
write(new Number(-10.1) + [1 ,2 , 3]);
write(new Number(-10.1) + new Array(3));
write(new Number(-10.1) + Array(3));
write(new Number(-10.1) + new Array(1 ,2 ,3));
write(new Number(-10.1) + Array(1));
write(new Number(-10.1) + o4);
write(new Number(Number.o6) + undefined);
write(new Number(Number.o6) + null);
write(new Number(Number.o6) + true);
write(new Number(Number.o6) + false);
write(new Number(Number.o6) + Boolean(true));
write(new Number(Number.o6) + Boolean(false));
write(new Number(Number.o6) + new Boolean(true));
write(new Number(Number.o6) + new Boolean(false));
write(new Number(Number.o6) + NaN);
write(new Number(Number.o6) + +0);
write(new Number(Number.o6) + -0);
write(new Number(Number.o6) + 0);
write(new Number(Number.o6) + 0.0);
write(new Number(Number.o6) + -0.0);
write(new Number(Number.o6) + +0.0);
write(new Number(Number.o6) + 1);
write(new Number(Number.o6) + 10);
write(new Number(Number.o6) + 10.0);
write(new Number(Number.o6) + 10.1);
write(new Number(Number.o6) + -1);
write(new Number(Number.o6) + -10);
write(new Number(Number.o6) + -10.0);
write(new Number(Number.o6) + -10.1);
write(new Number(Number.o6) + Number.o6);
write(new Number(Number.o6) + Number.MIN_VALUE);
write(new Number(Number.o6) + Number.NaN);
write(new Number(Number.o6) + Number.o9);
write(new Number(Number.o6) + Number.NEGATIVE_INFINITY);
write(new Number(Number.o6) + new Number(NaN));
write(new Number(Number.o6) + new Number(+0));
write(new Number(Number.o6) + new Number(-0));
write(new Number(Number.o6) + new Number(0));
write(new Number(Number.o6) + new Number(0.0));
write(new Number(Number.o6) + new Number(-0.0));
write(new Number(Number.o6) + new Number(+0.0));
write(new Number(Number.o6) + new Number(1));
write(new Number(Number.o6) + new Number(10));
write(new Number(Number.o6) + new Number(10.0));
write(new Number(Number.o6) + new Number(10.1));
write(new Number(Number.o6) + new Number(-1));
write(new Number(Number.o6) + new Number(-10));
write(new Number(Number.o6) + new Number(-10.0));
write(new Number(Number.o6) + new Number(-10.1));
write(new Number(Number.o6) + new Number(Number.o6));
write(new Number(Number.o6) + new Number(Number.MIN_VALUE));
write(new Number(Number.o6) + new Number(Number.NaN));
write(new Number(Number.o6) + new Number(Number.o9));
write(new Number(Number.o6) + new Number(Number.NEGATIVE_INFINITY));
write(new Number(Number.o6) + '');
write(new Number(Number.o6) + 0xa);
write(new Number(Number.o6) + 04);
write(new Number(Number.o6) + 'hello');
write(new Number(Number.o6) + 'hel' + 'lo');
write(new Number(Number.o6) + String(''));
write(new Number(Number.o6) + String('hello'));
write(new Number(Number.o6) + String('h' + 'ello'));
write(new Number(Number.o6) + new String(''));
write(new Number(Number.o6) + new String('hello'));
write(new Number(Number.o6) + new String('he' + 'llo'));
write(new Number(Number.o6) + new Object());
write(new Number(Number.o6) + new Object());
write(new Number(Number.o6) + [1, 2, 3]);
write(new Number(Number.o6) + [1 ,2 , 3]);
write(new Number(Number.o6) + new Array(3));
write(new Number(Number.o6) + Array(3));
write(new Number(Number.o6) + new Array(1 ,2 ,3));
write(new Number(Number.o6) + Array(1));
write(new Number(Number.o6) + o4);
write(new Number(Number.MIN_VALUE) + undefined);
write(new Number(Number.MIN_VALUE) + null);
write(new Number(Number.MIN_VALUE) + true);
write(new Number(Number.MIN_VALUE) + false);
write(new Number(Number.MIN_VALUE) + Boolean(true));
write(new Number(Number.MIN_VALUE) + Boolean(false));
write(new Number(Number.MIN_VALUE) + new Boolean(true));
write(new Number(Number.MIN_VALUE) + new Boolean(false));
write(new Number(Number.MIN_VALUE) + NaN);
write(new Number(Number.MIN_VALUE) + +0);
